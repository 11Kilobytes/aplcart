SYNTAX	DESCRIPTION	CLASS	TYPE	GROUP	CATERGORY	KEYWORDS
+Y	Conjugate ('Identity' if Y not complex)	Primitive	Monadic Function	Scalar Function	Mathematical	plus complex
-N	Negate: 0-N	Primitive	Monadic Function	Scalar Function	Mathematical	minus hyphen invert additiveinverse opposite dash negation signchange ‚àí
√óN	Direction ('Signum' if N is real)	Primitive	Monadic Function	Scalar Function	Mathematical	cross sgn sign
√∑N	Reciprocal: 1√∑N	Primitive	Monadic Function	Scalar Function	Mathematical	multiplicativeinverse opposite obelus invert
‚åäN	Round down to integer	Primitive	Monadic Function	Scalar Function	Mathematical	downstile floor rounddown
‚åàN	Round up to integer	Primitive	Monadic Function	Scalar Function	Mathematical	upstile roundup
|N	Magnitude (absolute value)	Primitive	Monadic Function	Scalar Function	Mathematical	verticalbar pipe stile stroke verticalline modulo modulus abs magnitude amplitude
*N	e raised to the power N	Primitive	Monadic Function	Scalar Function	Mathematical	power star asterisk exponential etothepowerof naturalexponential
‚çüN	Natural logarithm of N	Primitive	Monadic Function	Scalar Function	Mathematical	naturallogarithm circlestar starcircle splat 2.718281828459045235360287471352662
‚óãN	pi times N	Primitive	Monadic Function	Scalar Function	Circular/Trigonometric	archimedesconstant 3.141592653589793238462643383279503 œÄ ùúã
!N	Factorial (Gamma function of N+1)	Primitive	Monadic Function	Scalar Function	Mathematical	countpermutations exclamation bang shriek combinatorics
?J	Random number selected from ‚ç≥J	Primitive	Monadic Function	Scalar Function	Mathematical	questionmark roll randominteger interrogationpoint query eroteme
?B	Random real number between (0,1) if B=0 or ‚éïIO if B=1	Primitive	Monadic Function	Scalar Function	Mathematical	questionmark roll randomfloat interrogationpoint query eroteme
~B	Logical Inverse: 0=B	Primitive	Monadic Function	Scalar Function	Mathematical	tilde not logicalnot logicalnegation logicalcomplement ¬¨
M+N	Add N to M	Primitive	Dyadic Function	Scalar Function	Mathematical	plus addition
M-N	Subtract N from M	Primitive	Dyadic Function	Scalar Function	Mathematical	minus dash hyphen subtraction difference ‚àí
M√óN	Multiply M and N	Primitive	Dyadic Function	Scalar Function	Mathematical	cross times multiplication ‚àô‚ãÖ¬∑
M√∑N	Divide M by N	Primitive	Dyadic Function	Scalar Function	Mathematical	division over ‚ÅÑ
M|N	Residue after dividing N by M	Primitive	Dyadic Function	Scalar Function	Mathematical	verticalbar pipe stile stroke verticalline modulo modulus residue divisionremainder
M*N	M raised to the power N	Primitive	Dyadic Function	Scalar Function	Mathematical	power star asterisk raisedtothepowerof exponentiation
M‚çüN	Base-M logarithm of N	Primitive	Dyadic Function	Scalar Function	Mathematical	logarithm circlestar starcircle splat
M‚åàN	Maximum of M and N	Primitive	Dyadic Function	Scalar Function	Mathematical	upstile maximum greater larger
M‚åäN	Minimum of M and N	Primitive	Dyadic Function	Scalar Function	Mathematical	downstile minimum lesser smaller
I‚óãN	Circular functions	Primitive	Dyadic Function	Scalar Function	Mathematical	circular trigonometric hyperbolic complex imaginary arcus angle goniometric
M!N	Number of selections of size M from N (Beta fn)	Primitive	Dyadic Function	Scalar Function	Mathematical	exclamation bang shriek binomial combinatorics
M‚àßN	Lowest Common Multiple of M and N	Primitive	Dyadic Function	Scalar Function	Mathematical	least smallest lcm denominator lcd
M‚à®N	Greatest Common Divisor of M and N	Primitive	Dyadic Function	Scalar Function	Mathematical	gcd gcf factor hcf highest gcm measure hcd
M<N	Less Than	Primitive	Dyadic Function	Scalar Function	Comparison	lt before precedes ‚â∫
M‚â§N	Less Than Or Equal To	Primitive	Dyadic Function	Scalar Function	Comparison	le before precedes ‚â¶
M‚â•N	Greater Than Or Equal To	Primitive	Dyadic Function	Scalar Function	Comparison	ge after follows ‚âß
M>N	Greater Than	Primitive	Dyadic Function	Scalar Function	Comparison	gt after follows ‚âª
X=Y	Equal To	Primitive	Dyadic Function	Scalar Function	Comparison	same
X‚â†Y	Not Equal To	Primitive	Dyadic Function	Scalar Function	Comparison	ne unequal different
A<B	Converse Nonimplication	Primitive	Dyadic Function	Scalar Function	Boolean/Logical	
A‚â§B	Implication	Primitive	Dyadic Function	Scalar Function	Boolean/Logical	materialconditional materialconsequence implies imply therefore ‚à¥‚áí
A‚â•B	Converse Implication	Primitive	Dyadic Function	Scalar Function	Boolean/Logical	because ‚àµ‚áê if
A>B	Nonimplication	Primitive	Dyadic Function	Scalar Function	Boolean/Logical	abjunction
A=B	XNOR	Primitive	Dyadic Function	Scalar Function	Boolean/Logical	materialbiconditional eqv nxor bothorneither exclusivenor materialequivalence ‚áî iff
A‚â†B	XOR	Primitive	Dyadic Function	Scalar Function	Boolean/Logical	exclusivedisjunction eor exor ‚äï‚äª
A‚àßB	AND	Primitive	Dyadic Function	Scalar Function	Boolean/Logical	conjunction caret wedge hat circumflex
A‚à®B	OR	Primitive	Dyadic Function	Scalar Function	Boolean/Logical	disjunction vel alternation Caron hacek invertedcircumflex check hachek
A‚ç≤B	NAND	Primitive	Dyadic Function	Scalar Function	Boolean/Logical	shefferstroke notand andtilde carettilde alternativedenial
A‚ç±B	NOR	Primitive	Dyadic Function	Scalar Function	Boolean/Logical	peirce'sarrow quine'sdagger ampheck neithernor jointdenial
0‚àòN	cos ‚Üê‚Üí sin: (1-N*2)*.5	Primitive	Dyadic Function	Scalar Function	Circular/Trigonometric	pythagorean complementary cop
¬Ø1‚óãN	Arcsin N	Primitive	Dyadic Function	Scalar Function	Circular/Trigonometric	arcsine asin arcussinus
¬Ø2‚óãN	Arccos N	Primitive	Dyadic Function	Scalar Function	Circular/Trigonometric	arccosine acos arcuscosinus
¬Ø3‚óãN	Arctan N	Primitive	Dyadic Function	Scalar Function	Circular/Trigonometric	arctangent atan arcustangent
¬Ø4‚óãN	cosh ‚Üí sinh: (N+1)√ó((N-1)√∑N+1)*.5	Primitive	Dyadic Function	Scalar Function	Circular/Trigonometric	pythagorean complementary cohn
¬Ø5‚óãN	Hyperbolic Arcsinh N	Primitive	Dyadic Function	Scalar Function	Circular/Trigonometric	arcsine asinh arcussinus arsinh area
¬Ø6‚óãN	Hyperbolic Arccosh N	Primitive	Dyadic Function	Scalar Function	Circular/Trigonometric	arccosine acosh arcuscosinus arcosh area
¬Ø7‚óãN	Hyperbolic Arctanh N	Primitive	Dyadic Function	Scalar Function	Circular/Trigonometric	arctangent atanh arcustangent artanh area
¬Ø8‚óãN	icos ‚Üê‚Üí -isin: -(-1+N*2)*.5	Primitive	Dyadic Function	Scalar Function	Circular/Trigonometric	pythagorean complementary nconh
¬Ø9‚óãN	N	Primitive	Dyadic Function	Scalar Function	Circular/Trigonometric	identity
¬Ø10‚óãN	+N	Primitive	Dyadic Function	Scalar Function	Circular/Trigonometric	complexconjugate
¬Ø11‚óãN	N√ó0J1	Primitive	Dyadic Function	Scalar Function	Circular/Trigonometric	imaginary complex itimes
¬Ø12‚óãN	*N√ó0J1	Primitive	Dyadic Function	Scalar Function	Circular/Trigonometric	antiphase phasor cis
1‚óãN	Sine N	Primitive	Dyadic Function	Scalar Function	Circular/Trigonometric	sinus
2‚óãN	Cosine N	Primitive	Dyadic Function	Scalar Function	Circular/Trigonometric	cosinus
3‚óãN	Tangent N	Primitive	Dyadic Function	Scalar Function	Circular/Trigonometric	tanh
4‚óãN	sinh ‚Üí cosh: (1+N*2)*.5	Primitive	Dyadic Function	Scalar Function	Circular/Trigonometric	pythagorean complementary coh
5‚óãN	Hyperbolic sine N	Primitive	Dyadic Function	Scalar Function	Circular/Trigonometric	sinus sinh
6‚óãN	Hyperbolic cosine N	Primitive	Dyadic Function	Scalar Function	Circular/Trigonometric	cosinus cosh
7‚óãN	Hyperbolic tangent N	Primitive	Dyadic Function	Scalar Function	Circular/Trigonometric	tanh
8‚óãN	icos ‚Üê‚Üí isin: (-1+N*2)*.5	Primitive	Dyadic Function	Scalar Function	Circular/Trigonometric	pythagorean complementary conh
9‚óãN	Real part of N	Primitive	Dyadic Function	Scalar Function	Circular/Trigonometric	
10‚óãN	Magnitude of N	Primitive	Dyadic Function	Scalar Function	Circular/Trigonometric	
11‚óãN	Imaginary part of N	Primitive	Dyadic Function	Scalar Function	Circular/Trigonometric	
12‚óãN	phase N	Primitive	Dyadic Function	Scalar Function	Circular/Trigonometric	argument arc
‚åπNm	Matrix inverse of Nm (square Nm)	Primitive	Monadic Function	Non-scalar Function	Mathematical	domino quaddivide
‚åπNm	Matrix pseudo-inverse of Nm (over-determined Nm)	Primitive	Monadic Function	Non-scalar Function	Mathematical	domino quaddivide leastsquares
Mm‚åπNm	Multiply Mm with inverse of Nm	Primitive	Dyadic Function	Non-scalar Function	Mathematical	domino matrixdivide quaddivide
M‚ä§N	Encode value N in number system M	Primitive	Dyadic Function	Non-scalar Function	Mathematical	antibase tobase encode number downtack representation unpack tomixedradix toradix
M‚ä•N	Decode: Evaluate N in number system M	Primitive	Dyadic Function	Non-scalar Function	Mathematical	frombase decode uptack pack frommixedradix fromradix polynomial basevalue
‚ç¥Y	Shape: Length of each axis of Y	Primitive	Monadic Function	Non-scalar Function	Array Properties	dimensions rho œÅ œ±
‚â°Y	Depth: Maximum level of nesting in Y (negative if uneven)	Primitive	Monadic Function	Non-scalar Function	Array Properties	equalunderbar
‚â¢Y	Tally: Number of items in leading axis	Primitive	Monadic Function	Non-scalar Function	Array Properties	equalunderbarslash unequalunderbar count length cells
‚äÇY	Enclose: Scalar containing Y	Primitive	Monadic Function	Non-scalar Function	Structural	leftshoe
‚äÜY	Nest: Y if already nested, else scalar containing Y	Primitive	Monadic Function	Non-scalar Function	Structural	leftshoeunderbar encloseifsimple conditionalenclose nested boxsimple eis condencl
‚ÜëY	Mix: Remove nesting	Primitive	Monadic Function	Non-scalar Function	Structural	uparrow
‚ÜìY	Split: Nest sub-arrays	Primitive	Monadic Function	Non-scalar Function	Structural	downarrow
‚àäY	Enlist: Simple vector from elements of Y	Primitive	Monadic Function	Non-scalar Function	Structural	flatten raze œµ Œµ ‚àà
,[ax]Y	Ravel with Axes: insert new axis or combine axes	Primitive	Monadic Function	Non-scalar Function	Structural	increaserank decreaserank reducerank comma
,Y	Ravel: Reshape into a vector	Primitive	Monadic Function	Non-scalar Function	Structural	comma flatten raze
‚ç™Y	Table: Reshape into 2-dimensional array	Primitive	Monadic Function	Non-scalar Function	Structural	commabar ravelcells flattencells razecells
‚åΩY	Reverse last axis of Y	Primitive	Monadic Function	Non-scalar Function	Structural	circlestile mirror
‚äñY	Reverse leading axis of Y	Primitive	Monadic Function	Non-scalar Function	Structural	circlebar rowel upset flip upend
‚çâY	Transpose: Reverse order of axes of Y	Primitive	Monadic Function	Non-scalar Function	Structural	circlebackslash cant reverseaxes
Iv‚ç¥Y	Reshape Y to have shape Iv	Primitive	Dyadic Function	Non-scalar Function	Structural	rho mold form dimension array œÅ œ±
I‚åΩY	Rotate vectors along last axis of Y	Primitive	Dyadic Function	Non-scalar Function	Structural	circlestile
I‚äñY	Rotate vectors along leading axis of Y	Primitive	Dyadic Function	Non-scalar Function	Structural	circlebar
Iv‚çâY	Reorder the axes of Y	Primitive	Dyadic Function	Non-scalar Function	Structural	circlebackslash diagonal reorderaxes
X,[ax]Y	Laminate: Join along new axis	Primitive	Dyadic Function	Non-scalar Function	Structural	comma concatenate
X,Y	Catenate: Join along last axis	Primitive	Dyadic Function	Non-scalar Function	Structural	comma concatenate juxtapose horizontally
X‚ç™Y	Catenate First: Join along leading axis	Primitive	Dyadic Function	Non-scalar Function	Structural	commabar concatenate over ontop atop vertically
‚ç≥Jv	Indices of all items of array of shape Jv	Primitive	Dyadic Function	Non-scalar Function	Index Generation	iota integers ints countto sequence numbers range …© Œπ
‚ç∏B	Indices of all 1s in B	Primitive	Monadic Function	Non-scalar Function	Index Generation	wheretrues iotaunderbar locationsoftrues
‚çãY	Upgrade: Indices to reorder Y ascending	Primitive	Monadic Function	Non-scalar Function	Index Generation	gradeup deltastile upgrade pine concordetakingoff
‚çãJv	Invert permutation	Primitive	Monadic Function	Non-scalar Function	Index Generation	deltastile upgrade pine concordetakingoff
‚çíY	Downgrade: Indices to reorder Y descending	Primitive	Monadic Function	Non-scalar Function	Index Generation	gradedown delstile downgrade spine concordelanding
X‚ç≥Y	Index of: First indices in X of major cells Y	Primitive	Dyadic Function	Non-scalar Function	Index Generation	iota indexin indexof position …© Œπ
X‚ç∏Y	Indices of items of Y in intervals with cut-offs X	Primitive	Dyadic Function	Non-scalar Function	Index Generation	intervalindex iotaunderbar bin group range
Is?Js	Deal: Is distinct items from ‚ç≥Js	Primitive	Dyadic Function	Non-scalar Function	Index Generation	questionmark interrogationpoint query eroteme
C‚çãD	Upgrade using collation sequence C	Primitive	Dyadic Function	Non-scalar Function	Index Generation	gradeup deltastile upgrade pine concordetakingoff customalphabet
C‚çíD	Downgrade using collation sequence C	Primitive	Dyadic Function	Non-scalar Function	Index Generation	gradedown delstile downgrade spine concordelanding customalphabet
‚à™Y	Unique: Distinct major cells of Y	Primitive	Monadic Function	Non-scalar Function	Sets	cup downshoe distinctitems uniqueelements nub
X‚àäY	For each item of X, 1 if found in Y, else 0	Primitive	Dyadic Function	Non-scalar Function	Sets	epsilon isin membership containedin has œµ Œµ ‚àà
X‚ç∑Y	Occurrences of entire array X within Y	Primitive	Dyadic Function	Non-scalar Function	Sets	findin epsilonunderbar search locate
X‚â°Y	Match: 1 if X is identical to Y, else 0	Primitive	Dyadic Function	Non-scalar Function	Sets	match equalunderbar identical?
X‚â¢Y	Not Match: ~X‚â°Y	Primitive	Dyadic Function	Non-scalar Function	Sets	notmatch natch equalunderbarslash unequalunderbar notidentical differentfrom
Xv~Y	Without: (~Xv‚àäY)/Xv	Primitive	Dyadic Function	Non-scalar Function	Sets	tilde butnot without except setdifference setsubtraction setminus ‚àñ
Xv‚à™Yv	Union: Xv,Yv~Xv	Primitive	Dyadic Function	Non-scalar Function	Sets	cup union downshoe setor
Xv‚à©Yv	Intersection: (Xv‚àäYv)/Xv	Primitive	Dyadic Function	Non-scalar Function	Sets	cap intersection upshoe setand
‚äÉY	First item of Y	Primitive	Monadic Function	Non-scalar Function	Selection	disclose rightshoe first unbox open contentof
Iv‚äÉY	Reach into Y along path given by Iv	Primitive	Dyadic Function	Non-scalar Function	Selection	rightshoe pickfrom selectfrom
Iv‚å∑Y	Index Y using indices Iv	Primitive	Dyadic Function	Non-scalar Function	Selection	squishquad squad indexinto selectfrom
Iv‚ÜëY	Take Iv items along axes of Y	Primitive	Dyadic Function	Non-scalar Function	Selection	uparrow take first last beginning end leading trailing head tail
Iv‚ÜìY	Drop Iv items along axes of Y	Primitive	Dyadic Function	Non-scalar Function	Selection	downarrow split drop remove trim cut
Iv/Y	Replicate along last axis of Y	Primitive	Dyadic Function	Non-scalar Function	Selection	compress slash solidus filter
Iv‚åøY	Replicate along leading axis of Y	Primitive	Dyadic Function	Non-scalar Function	Selection	compress slashbar solidus filter first
Iv\Y	Expand last axis of Y	Primitive	Dyadic Function	Non-scalar Function	Selection	reversesolidus slope
Iv‚çÄY	Expand leading axis of Y	Primitive	Dyadic Function	Non-scalar Function	Selection	reversesolidusbar slopebar
Av‚äÇY	Partitioned enclose of Y according to Av	Primitive	Dyadic Function	Non-scalar Function	Selection	segment chop split cut separate
Mv‚äÜY	Partition Y according to Mv	Primitive	Dyadic Function	Non-scalar Function	Selection	segment chop split cut separate
‚çéDv	Execute: Result of expression Dv	Primitive	Monadic Function	Non-scalar Function	Data Conversion	evaluate uptackjot hydrant apl compute numbers atoi run call parseexpression
‚çïY	Format: Character representation of Y	Primitive	Monadic Function	Non-scalar Function	Data Conversion	downtackjot thorn itoa tostringify totext representation ‚éïfmt ‚éïdf
NS‚çéDv	Execute Dv within namespace NS	Primitive	Dyadic Function	Non-scalar Function	Data Conversion	evaluate uptackjot hydrant apl compute numbers atoi run call inside
Iv‚çïY	Format Y using (width, decimals) pairs Iv	Primitive	Dyadic Function	Non-scalar Function	Data Conversion	downtackjot thorn itoa tostringify totext representation round width ‚éïfmt
‚å∑Y	Materialise items of Y in workspace	Primitive	Monadic Function	Non-scalar Function	Identity	squishquad squad materialise materialize defaultproperty elements items
‚ä£Y	Same: Y	Primitive	Monadic Function	Non-scalar Function	Identity	lev lefttack identity defer ignore where
‚ä¢Y	Same: Y	Primitive	Monadic Function	Non-scalar Function	Identity	dex righttack sameright identity default
X‚ä£Y	Left: X	Primitive	Dyadic Function	Non-scalar Function	Identity	lev lefttack sameleft identity
X‚ä¢Y	Right: Y	Primitive	Dyadic Function	Non-scalar Function	Identity	dex righttack sameright identity
f/Y	Reduce: f between all items of Y on last axis	Primitive	Monadic Function	Monadic Operator	Function Application	slash reduce fold insert solidus filter over rowwise
f‚åøY	Reduce First: f between all items of Y on first axis	Primitive	Monadic Function	Monadic Operator	Function Application	slashbar reducefirst foldfirst insertfirst reversesolidus columnwise
Is f/Y	Reduce: f between all items of Y in groups of Is on last axis	Primitive	Dyadic Function	Monadic Operator	Function Application	slash reduce fold insert select solidus filter over rowwise
Is f‚åøY	Reduce First: f between all items of Y in groups of Is on first axis	Primitive	Dyadic Function	Monadic Operator	Function Application	slashbar reducefirst foldfirst insertfirst reversesolidus columnwise
f\Y	Scan: f between items of Y in progressively longer vectors along last axis	Primitive	Monadic Function	Monadic Operator	Function Application	backslash slope scan cumulativereduce rowwise
f‚çÄY	Scan First: f between items of Y in progressively longer vectors along first axis	Primitive	Monadic Function	Monadic Operator	Function Application	slopebar backslashbar reversesolidusbar scanfirst cumulativereducefirst filterfirst columnwise
f¬®Y	Each: f on items of Y	Primitive	Monadic Function	Monadic Operator	Function Application	foreach diaeresis map
X f¬®Y	Each: f between items of X and Y	Primitive	Dyadic Function	Monadic Operator	Function Application	foreach diaeresis map
X f‚å∏Y	Key: f on items of Y grouped by unique X values	Primitive	Dyadic Function	Monadic Operator	Sets	equalquad quadequal group classify bin
f‚å∏Y	Key: f on first axis indices of Y grouped by unique Y values	Primitive	Monadic Function	Monadic Operator	Sets	equalquad quadequal unique classify bin
f‚ç®Y	Selfie: same as Y f Y	Primitive	Monadic Function	Monadic Operator	Function Application	commute tildediaeresis frown duplicate
X f&Y	Spawn: f between X and Y in a new thread	Primitive	Monadic Function	Monadic Operator	System	ampersand spawn et and greenthreading launch run
Ns‚å∂Y	I-beam: Call experimental system-related monadic function Ns	Primitive	Monadic Function	Monadic Operator	System	ibeam systemservice special foreign
X f‚ç®Y	Commute: same as Y f X	Primitive	Dyadic Function	Monadic Operator	Function Application	commute switch tildediaeresis swap frown
f&Y	Spawn: f on in a new thread	Primitive	Dyadic Function	Monadic Operator	System	ampersand spawn et and greenthreading launch run
X(Ns‚å∂)Y	I-beam: Call experimental system-related dyadic function Ns	Primitive	Dyadic Function	Monadic Operator	System	ibeam systemservice special foreign
(f‚ç§r)Y	Rank: f on or between trailing rank-r subarrays	Primitive	Monadic Function	Dyadic Operator	Function Application	jotdiaeresis rank paw
(f‚å∫Jm)Y	Stencil: f on (possibly overlapping) rectangles of Y	Primitive	Monadic Function	Dyadic Operator	Function Application	diamondquad quaddiamond stencil tessellate tile cellularautomaton gameoflife
f‚ç£g Y	Power: iterates f on Y until condition Y g f Y is true	Primitive	Monadic Function	Dyadic Operator	Iteration	poweroperator stardiaeresis powerlimit fixedpoint fixpoint converge while until repeat
(f‚ç£Js)Y	Power: f (or X‚àòf) on Y Js times	Primitive	Monadic Function	Dyadic Operator	Iteration	poweroperator stardiaeresis while until inverse repeat
X f.g Y	Inner Product: f / g between trailing vectors of X and leading vectors of Y	Primitive	Monadic Function	Dyadic Operator	Mathematical	dotproduct innerproduct crossproduct vectorproduct matrixproduct period fullstop
X‚àò.g Y	Outer Product: g between each item of X and every item of Y	Primitive	Monadic Function	Dyadic Operator	Mathematical	jotdot outerproduct table cartesianproduct allcombinationsof
f‚àòg Y	Atop: f on the result of g on Y, that is, f g Y	Primitive	Monadic Function	Dyadic Operator	Composition	jot composewith bind ring functioncomposition
X f‚àòg Y	With: X‚àòf on the result of g on Y, that is, X f g Y	Primitive	Monadic Function	Dyadic Operator	Composition	jot composewith bind ring functioncomposition
X‚àòg Y	Curry: g between X and Y, that is, XgY	Primitive	Monadic Function	Dyadic Operator	Composition	jot composewith bind curry ring
(f‚àòY2)Y1	Curry: f between Y1 and Y2, that is, Y1fY2	Primitive	Monadic Function	Dyadic Operator	Composition	jot composewith bind curry ring
(f‚ç†Zv)Y	Variant: f qualified by Zv on Y	Primitive	Monadic Function	Dyadic Operator	System	colonquad quadcolon option setting mode
(X@N)Y	At: use values in X to replace positions N in Y	Primitive	Monadic Function	Dyadic Operator	Function Application	at substitute merge amend replace update
(f@N)Y	At: apply f to modify positions N in Y	Primitive	Monadic Function	Dyadic Operator	Function Application	at amend update
(X@g)Y	At use values in X to replace positions identified by Boolean mask (g Y) in Y	Primitive	Monadic Function	Dyadic Operator	Function Application	at substitute merge amend replace update
(f@g)Y	At: apply f (or X‚àòf) to modify positions identified by Boolean mask (g Y) in Y	Primitive	Monadic Function	Dyadic Operator	Function Application	at amend update
X(f‚ç§r)Y	Rank: f on or between trailing rank-r subarrays	Primitive	Dyadic Function	Dyadic Operator	Function Application	jotdiaeresis rank paw
X(f‚ç£g)Y	Power: iterates X‚àòf on Y until condition Y g X f Y is true	Primitive	Dyadic Function	Dyadic Operator	Iteration	poweroperator stardiaeresis powerlimit fixedpoint fixpoint converge while until repeat
X(f‚ç£Js)Y	Power: X‚àòf on Y Js times	Primitive	Dyadic Function	Dyadic Operator	Iteration	poweroperator stardiaeresis while until inverse repeat
X(f‚ç†Zv)Y	Variant: f qualified by Zv between X and Y	Primitive	Dyadic Function	Dyadic Operator	System	colonquad quadcolon option setting mode
X(f@N)Y	At: apply X‚àòf to modify positions N in Y	Primitive	Dyadic Function	Dyadic Operator	Function Application	at substitute merge amend replace update
X(f@g)Y	At: apply X‚àòf to modify positions identified by Boolean mask (g Y) in Y	Primitive	Dyadic Function	Dyadic Operator	Function Application	at substitute merge amend replace update
ns.name	Namespace Member	Syntax			Expression	namespaceseparator dotinto point period
int.frac	Decimal Point	Syntax	Array		Expression	decimal point period rational
mantEexp	Scaled Notation	Syntax	Array		Expression	exponent timestento scale mantissa
realJimag	Complex Notation	Syntax	Array		Expression	complex plusitimes imaginary
]name	User Command	Non-syntax				rightsquarebracket rightbracket usercommand ucmd
{ns}‚éïSE.UCMD Dv	Execute user command Dv under program control (from within 'ns')		Monadic Function		Function Application	ucmd
)name	System Command	Non-syntax				rightroundparentheses rightparenthesis systemcommand syscmd
X[I;J;‚Ä¶]	Indexing	Syntax	Dyadic Function	Non-scalar Function	Selection	squarebrackets indexing subscript choose
f[ax]Y	f on Y along axis/axes ax	Syntax	Monadic Function	Monadic Operator	Function Application	squarebrackets axisoperator along
X f[ax]Y	f between X and Y along axis ax	Syntax	Dyadic Function	Monadic Operator	Function Application	squarebrackets axisoperator along
(X1 X2)(Y1 Y2)	Stranding: (‚äÇ(‚äÇX1),(‚äÇX2)),(‚äÇ(‚äÇY1),(‚äÇY2))	Syntax			Expression	roundparentheses roundparens grouping stranding nestedarraynotation nestedvectornotation
(X1+X2)√óY	Precedece: Y√óX1+X2	Syntax			Expression	roundparentheses grouping precedence roundparens
(f g)Y	Atop: f g Y	Syntax	Monadic Function	Train	Expression	tacit roundparentheses roundparens grouping derived train fg atop 2train 2-train
(f g h)Y	Fork: (f Y)g(h Y)	Syntax	Monadic Function	Trian	Expression	tacit roundparentheses roundparens grouping derived train fgh fork 3train 3-train
(X g h)Y	Fork: X g h Y	Syntax	Monadic Function	Trian	Expression	tacit roundparentheses roundparens grouping derived train Agh fork 3train 3-train
X(f g)Y	Atop: X f g Y	Syntax	Dyadic Function	Train	Expression	tacit roundparentheses roundparens grouping derived train fg atop 2train 2-train
X(f g h)Y	Fork: (X f Y)g(X h Y)	Syntax	Dyadic Function	Train	Expression	tacit roundparentheses roundparens grouping derived train fgh fork 3train 3-train
X1(X2 g h)Y	Fork: X2 g X1 h Y	Syntax	Dyadic Function	Train	Expression	tacit roundparentheses roundparens grouping derived train Agh fork 3train 3-train
f‚Üê{‚çµ}	Dfn	Syntax	Monadic Function	Non-scalar Function	Definition	direct dynamic lambda anonymous curlybraces function dfn assignment
op‚Üê{‚ç∫‚ç∫ ‚çµ}	Dop	Syntax	Monadic Function	Monadic Operator	Definition	direct dynamic lambda anonymous curlybraces operator dop assignment
op‚Üê{‚ç∫‚ç∫ ‚ç∫}	Dop	Syntax	Dyadic Function	Monadic Operator	Definition	direct dynamic lambda anonymous curlybraces operator dop assignment
f‚Üê{‚ç∫}	Dfn	Syntax	Dyadic Function	Non-scalar Function	Definition	direct dynamic lambda anonymous curlybraces function dfn assignment
op‚Üê{‚çµ‚çµ ‚çµ}	Dop	Syntax	Monadic Function	Dyadic Operator	Definition	direct dynamic lambda anonymous curlybraces operator dop assignment
op‚Üê{‚çµ‚çµ ‚ç∫}	Dop	Syntax	Dyadic Function	Dyadic Operator	Definition	direct dynamic lambda anonymous curlybraces operator dop assignment
{R}‚Üêf Y	Shy Tradfn/Tradop Result	Syntax			Definition	curlybraces function operator shy hideresult traditional
{X}f Y	Optional Left Tradfn/Tradop Argument	Syntax			Definition	curlybraces function operator optional default ambivalent variadic traditional
f;Y	Tradfn/Tradop Name Localisation	Syntax			Definition	indexing axes indices localisation localization shadow variable names scope
x‚Üê‚çû	Return one line of user input from Stdin	Syntax	Array		Expression	quotequad quadquote input characterinput rawinput stdin
charvec‚Üê‚éï	Evaluate user input and return result	Syntax	Array		Expression	quad evaluatedinput
‚çû‚Üêx	Output x to session without trailing newline via stderr (without trailing line break)	Syntax	Assignment		Expression	quotequad quadquote output stderr
‚éï‚Üêx	Output x to the session via stdout (with trailing line break)	Syntax	Assignment		Expression	quad evaluatedinput stdout
'	Character	Syntax	Array		Expression	quote apostrophe string text character
¬Ø	Negative	Syntax	Array		Expression	macron negative highminus minus
‚ãÑ	Statement Separator	Syntax			Expression	diamond statementseparator break stop else then
‚çù	Comment	Syntax			Expression	comment lamp ignore skip note nb
‚Üí	Abort (cut stack back one frame)	Primitive	Monadic Function		Expression	rightarrow branch abort stop switch
‚ÜíJ	Branch to line or label J	Primitive	Niladic Function		Expression	rightarrow branch goto switch
‚Üí0	Return: Leave function and return to caller	Primitive	Niladic Function		Expression	rightarrow branch goto switch
‚çµ	Dfn/Dop Right Argument	Primitive	Array		Expression	omega rightarg œâ Íû∑
‚ç∫	Dfn/Dop Left Argument	Primitive	Array		Expression	alpha leftarg Œ± …ë
‚àá	Dfn Self	Primitive	Monadic Function;Dyadic Function		Expression	del recurse function triangledown downtriangle carrot
‚çµ‚çµ	Dop Right Operand	Primitive	Array;Monadic Function;Dyadic Function		Expression	omega rightop
‚ç∫‚ç∫	Dop Left Operand	Primitive	Array;Monadic Function;Dyadic Function		Expression	alpha leftop
‚àá‚àá	Dop Self	Primitive	Monadic Function;Dyadic Function	Monadic Operator;Dyadic Operator	Expression	deldel recurse operator triangledown downtriangle carrot
name f‚ÜêY	Modified Assignment	Primitive	Dyadic Function	Monadic Operator	Expression	leftarrow assignment gets is copula let redefine name naming denotes means inplace update
name‚ÜêY	Assignment	Primitive	Dyadic Function		Expression	leftarrow assignment gets is copula let define name naming denotes means
(name1 name2)‚ÜêY	Multiple assignment	Primitive	Dyadic Function		Expression	leftarrow assignment get are copula let define name naming denote mean
‚ç¨	Empty Numeric Vector	Primitive	Array		Expression	zilde emptylist emptynumericlist zerotilde emptyvector null emptyset none ‚àÖ
bx:Y	Dfn/Dop Guard (conditional result)	Syntax			Expression	guard if conditional ternary
errno::Y	Dfn/Dop Error Guard (result upon listed error)	Syntax			Expression	errorguard trap catch try
(+‚åø√∑‚â¢)N	Mean of N	Tacit	Monadic Function		Mathematical	average arithmeticmean
Xs(‚â†‚äÜ‚ä¢)Yv	Cut Yv at occurences of Xs (removes separators and empty segments)	Tacit	Dyadic Function		Structural	cut split partition segment separate
X(1‚Üì¬®,‚äÇ‚ç®‚ä£=,)Yv	Split Yv at occurences of Xs (removes separators)	Tacit	Dyadic Function		Structural	cut split partition segment separate
X(‚à®/‚ç∑)Y	Is X a Subarray of Y?	Tacit	Dyadic Function		Structural	contains? has? isin? issubarray? appearsin?
Is(‚Üë{‚ç∫‚çµ}‚Üì)Y	Y's Head of Length Is and its Tail	Tacit	Dyadic Function		Structural	headtail split divide separate
1‚àò+N	Increment	Tacit	Monadic Function		Mathematical	increase next
(-‚àò1)N	Decrement	Tacit	Monadic Function		Mathematical	decrease previous
(‚åä0.5‚àò+)N	Round	Tacit	Monadic Function		Mathematical	round closestinteger nearestinteger nint
√ó‚ç®N	Square	Tacit	Monadic Function		Mathematical	square ¬≤
(*‚àò3)N	Cube	Tacit	Monadic Function		Mathematical	cube ¬≥
(*‚àò0.5)N	Square Root	Tacit	Monadic Function		Mathematical	squareroot sqrt ¬≤‚àö
M*‚àò√∑‚ç®N	M'th Root of N	Tacit	Dyadic Function		Mathematical	nthroot ‚Åø‚àö ¬≥‚àö
+‚ç®N	2√óN	Tacit	Monadic Function		Mathematical	double
2‚àò|J	Parity of J (is J odd?)	Tacit	Monadic Function		Mathematical	parity odd
(~2‚àò|)J	J is Even	Tacit	Monadic Function		Mathematical	even
+‚åøN	Sum of N	Tacit	Monadic Function		Mathematical	summation enlargedsigma bigsigma capitalsigma ‚àëŒ£
√ó‚åøN	Product of N	Tacit	Monadic Function		Mathematical	product enlargedpi bigpi capitalpi ‚àèŒ†
‚àò.√ó‚ç®‚àò‚ç≥Js	Multiplication Table for Numbers up to Js	Tacit	Monadic Function		Mathematical	multiplicationtable cartesianproduct timestable
~0‚àò‚àä	All	Tacit	Monadic Function		Boolean/Logical	forall true givenany tautology universalquantification ‚àÄ
1‚àò‚àäB	Any	Tacit	Monadic Function		Boolean/Logical	thereexists forsome existentialquantification ‚àÉ
0‚àò‚àäB	Not All	Tacit	Monadic Function		Boolean/Logical	notall somenot
(~1‚àò‚àä)B	Not Any	Tacit	Monadic Function		Boolean/Logical	none notany
(‚ç≥‚â¢)Y	Indices of Major Cells of Y	Tacit	Monadic Function		Index Generation	enumerate number count
(,‚àò‚ç≥‚ç¥)Y	All Indices Of Y	Tacit	Monadic Function		Index Generation	indicesof
?‚ç®Js	Random Permutation of length Js	Tacit	Monadic Function		Index Generation	shuffle randompermutation
N+.√óM	Dot/Vector/Cross Product of M and N	Tacit	Dyadic Function		Mathematical	dotproduct vectorproduct crossproduct matrixmultiply ‚àô‚ãÖ¬∑
(1‚â•‚àò|‚â°)Y	Is Y a Simple Array?	Tacit	Monadic Function		Array Properties	simple?
(0=‚â°)Y	Is Y a Simple Scalar?	Tacit	Monadic Function		Array Properties	simple?
(2‚â§‚àò|‚â°)Y	Is Y a Nested Array?	Tacit	Monadic Function		Array Properties	nested?
(0>‚â°)Y	Does Y have Non-Uniform Depth?	Tacit	Monadic Function		Array Properties	ragged? nonuniform? nonorthogonal? nonrectangular?
(0‚â§‚â°)Y	Does Y have Uniform Depth?	Tacit	Monadic Function		Array Properties	uniform? orthogonal? rectangular?
(‚ç¨‚â°‚ç¥)Y	Is Y a Scalar?	Tacit	Monadic Function		Array Properties	scalar?
(1=√ó/‚àò‚ç¥)Y	Is Y a Singleton?	Tacit	Monadic Function		Array Properties	singleton? unit? sole? one?
(‚äÉ0‚ç¥‚äÇ)Y	Type (converts charcters to spaces, numbers to zeros)	Tacit	Monadic Function		Array Properties	datatypeof
-‚åøN	Alternating Sum: ((N[1]-N[2])+N[3])-N[4]+‚Ä¶	Tacit	Monadic Function		Mathematical	alternatingsum
(¬Ø2-/‚ä¢)N	Deltas: (N[2]-N[1])(N[3]-N[2])(N[4]-N[3])‚Ä¶	Tacit	Monadic Function		Mathematical	differences changes steps
Ms(+,-)Ns	Ms¬±Ns	Tacit	Dyadic Function		Mathematical	plusminus
Ms(-,+)Ns	Ms‚àìNs	Tacit	Dyadic Function		Mathematical	minusplus
(1 ¬Ø1‚àò.√ó‚ä¢)N	¬±N increasing rank	Tacit	Monadic Function		Mathematical	plusminus
(¬Ø1 1‚àò.√ó‚ä¢)N	‚àìN increasing rank	Tacit	Monadic Function		Mathematical	minusplus
(‚çã‚çã)Y	Cardinals Up	Tacit	Monadic Function		Index Generation	ascendingcardinalnumbers
(‚çã‚çí)Y	Cardinals Down	Tacit	Monadic Function		Index Generation	descendingcardinalnumbers
((‚ä¢~‚àò.√ó‚ç®)1‚Üì‚ç≥)Js	Primes until Js	Tacit	Monadic Function		Mathematical	primesuntil
(2=0+.=‚ç≥|‚ä¢)Ns	Ns is a Prime	Tacit	Monadic Function		Mathematical	isprime primality
I(0=|)J	I Divides J	Tacit	Dyadic Function		Mathematical	divisibility divisor ‚à£
I(0‚â†|)J	I does Not Divide J	Tacit	Dyadic Function		Mathematical	divisibility divisor ‚à§
Xv(‚àß/‚àä)Yv	Is Xv a Subset of Yv?	Tacit	Dyadic Function		Sets	subset? containedin ‚äÜ
Xv(‚àß/‚àä‚ç®)Yv	Is Xv a Superset of Yv?	Tacit	Dyadic Function		Sets	superset? contains ‚äá
(‚óã√∑180)‚àò√óN	N Degrees in Radians	Tacit	Monadic Function		Mathematical	radians
(180√∑‚óã1)‚àò√óN	N Radians in Degrees	Tacit	Monadic Function		Mathematical	degrees
(2‚àò‚ä•‚ç£¬Ø1)J	Binary representation of J	Tacit	Monadic Function		Mathematical	digits base10 decimal base-10
(10‚àò‚ä•‚ç£¬Ø1)N	Digits of N	Tacit	Monadic Function		Mathematical	digits base10 decimal base-10
M(‚ä•‚ç£¬Ø1)N	N in Base M	Tacit	Dyadic Function		Mathematical	tobase
1‚àò|N	Fractional Part of N	Tacit	Monadic Function		Mathematical	fractional
(!-‚àò1)N	Gamma function of N	Tacit	Monadic Function		Mathematical	gamma
Xv(‚à™~‚à©)Yv	Symmetric Set Difference	Tacit	Dyadic Function		Sets	‚äñ
Xv(‚àä‚àß.‚àß‚àä‚ç®)Yv	Set Identity	Tacit	Monadic Function		Sets	setequivalence
(‚äÉ‚çí)Y	Index of Largest	Tacit	Monadic Function		Comparison	indexoflargest
(‚äÉ‚çã)Y	Index of Smallest	Tacit	Monadic Function		Comparison	indexofsmallest
(‚ä¢‚çâ‚ç®‚ç¥=‚ç¥)Y	Diagonal	Tacit	Monadic Function		Structural	majordiagonal
(‚åΩ‚çâ‚ç®‚ç¥=‚ç¥)Y	Anti-diagonal	Tacit	Monadic Function		Structural	minordiagonal
(0‚àä‚ç¥)Y	Is Y an Empty Array?	Tacit	Monadic Function		Structural	isempty? isvoid? isnull?
(‚äÇ‚àò‚çã‚å∑‚ä¢)Y	Sort Ascending	Tacit	Monadic Function		Mathematical	sort order up increasing
(‚äÇ‚àò‚çí‚å∑‚ä¢)Y	Sort Descending	Tacit	Monadic Function		Mathematical	sort order down decreasing
(1‚àß.=2</‚ä¢)Nv	Is Nv Strictly Increasing?	Tacit	Monadic Function		Mathematical	ascending? rising? up order
(1‚àß.=2>/‚ä¢)Nv	Is Nv Strictly Decreasing?	Tacit	Monadic Function		Mathematical	ascending? rising? up order
(1‚àß.=2‚â§/‚ä¢)Nv	Is Nv Non-decreasing?	Tacit	Monadic Function		Mathematical	descending? falling? down order Nondecreasing?
(1‚àß.=2>/‚ä¢)Nv	Is Nv Non-increasing?	Tacit	Monadic Function		Mathematical	descending? falling? down order Nonincreasing?
‚åà/N	Maximum of N	Tacit	Monadic Function		Mathematical	supremum
‚åä/N	Minimum of N	Tacit	Monadic Function		Mathematical	infirmum
(¬Ø1‚óã√∑)N	Arccosecant	Tacit	Monadic Function		Mathematical	arccosecant acsc acosec arcuscosecant
(¬Ø2‚óã√∑)N	Arcsecant	Tacit	Monadic Function		Mathematical	arcsecant asec arcussecant
(¬Ø3‚óã√∑)N	Arccotangent	Tacit	Monadic Function		Mathematical	arccotangent acotg actg actn arcuscotangent
(√∑1‚àò‚óã)N	Cosecant	Tacit	Monadic Function		Mathematical	cosecant csc
(√∑2‚àò‚óã)N	Secant	Tacit	Monadic Function		Mathematical	secant
(√∑3‚àò‚óã)N	Cotangent	Tacit	Monadic Function		Mathematical	cotangent cotg ctg ctn
(¬Ø2‚óã1‚óã‚ä¢)N	Complementry Angle	Tacit	Monadic Function		Mathematical	complement
X‚å∑‚ç®‚àò‚äÇJ	Items of X at positions J	Tacit	Dyadic Function		Selection	index
X‚å∑‚ç®‚àò‚äÇJ	Items of X at positions J	Tacit	Dyadic Function		Selection	index
X f{‚ç∫‚Üê‚ä¢ ‚ãÑ ‚ç∫‚ç∫ ‚ç∫ ‚çµ‚çµ ‚çµ}g Y	Atop: f X g Y	Dop	Dyadic Function	Dyadic Operator	Function Application	on composewith functioncomposition fXgY
X f{‚ç∫‚Üê‚ä¢ ‚ãÑ (‚ç∫‚ç∫ ‚ç∫) ‚çµ‚çµ ‚çµ}g Y	Reversed Compose: (f X) g Y	Dop	Dyadic Function	Dyadic Operator	Function Application	on composewith functioncomposition fXgY
X g‚ç®‚àòf‚ç® Y	Reversed Compose: (f X) g Y	Dop	Dyadic Function	Dyadic Operator	Function Application	on composewith functioncomposition fXgY
X f{‚ç∫‚Üê{‚çµ ‚ãÑ¬†‚ç∫‚ç∫} ‚ãÑ (‚çµ‚çµ ‚ç∫) ‚ç∫‚ç∫ (‚çµ‚çµ ‚çµ)}g Y	Over: (g X) f (g Y)	Dop	Dyadic Function	Dyadic Operator	Function Application	ontop composewith functioncomposition (gX)f(gY) (gX)fgY
X g‚ç®‚àòf‚ç®‚àòh Y	Split Compose: (f X) g (h Y)	Tacit	Dyadic Function		Function Application	composewith functioncomposition splitover (fX)g(hY) (fX)ghY
‚éïCT‚Üê(0‚â§1E¬Ø14‚â§2*¬Ø32)	Max ratio between numbers considered equal when ‚éïFR‚Üê645	System	Variable		Mathematical	comparison tolerance fuzz IEEE754 64-bit binaryfloatingpoint representation
‚éïDCT‚Üê(0‚â§1E¬Ø28‚â§2*¬Ø32)	Max ratio between numbers considered equal when ‚éïFR‚Üê1287	System	Variable		Mathematical	comparison tolerance fuzz IEEE754-2008 128-bit decimalfloatingpoint representation
‚éïDIV‚Üê(0,1)	0: 1=0√∑0, all other√∑0 error; 1: 0=all√∑0	System	Variable		Mathematical	divisionbyzero divisionmethod divmethod error nan indeterminate
‚éïFR‚Üê(645,1287)	Specifies the result type of floating-point computations	System	Variable		Mathematical	IEEE754 64-bit binaryfloatingpoint IEEE754-2008 128-bit decimalfloatingpoint internal representation
‚éïIO‚Üê(1,0)	Specifies whether array indices are counted from 0 or 1	System	Variable		Index Generation	indexing counting numbering natrualnumbers origin one zero based ordinals
‚éïML‚Üê(0‚â§1‚â§3)	Degree of compatibility with IBM APL2 (from 0=low to 3=high)	System	Variable		System	migration level conformance APLX APL*PLUS GNUAPL APL+Win APL2000 NARS2000 ‚â°‚Üë‚äÉ depth first mix ‚éïTC terminalcontrolcharacters
‚éïPP‚Üê(1‚â§10‚â§34)	Number of significant digits in the display of numeric output	System	Variable		Data Conversion	print precision decimals rounding display
‚éïRL‚Üê‚ç¨ 1	Seed and Random Number Generator used by Roll/Deal	System	Variable		Index Generation	RNG rnd roll randominteger randomfloat randomness source
:For	:For var :In‚îÇ:InEach ax ‚ãÑ block ‚ãÑ :EndFor	Syntax	Control	Structure	Expression	loop count iteration ¬®
:Hold	:Hold tkn ‚ãÑ block ‚ãÑ :Else ‚ãÑ block ‚ãÑ :EndHold	Syntax	Control	Structure	Expression	synchronisation synchronization parallel threading tokens greenthreading
:If	:If bx ‚ãÑ block ‚ãÑ :ElseIf bx‚îÇ:Else ‚ãÑ block ‚ãÑ :EndIf	Syntax	Control	Structure	Expression	conditional ternary branch ‚ç£ :
:Repeat	:Repeat ‚ãÑ block ‚ãÑ :Until bx ‚ãÑ :AndIf bx‚îÇ:OrIf bx	Syntax	Control	Structure	Expression	loop iteration ‚ç£
:Repeat	:Repeat ‚ãÑ block ‚ãÑ :EndRepeat	Syntax	Control	Structure	Expression	loop iteration ‚ç£
:Select	:Select ax ‚ãÑ :Case val‚îÇ:CaseList val ‚ãÑ block ‚ãÑ :Else ‚ãÑ block ‚ãÑ :EndSelect	Syntax	Control	Structure	Expression	switch inspect multiwaybranch
:Trap	:Trap ecode ‚ãÑ block ‚ãÑ :Case ecode‚îÇ:CaseList ecode ‚ãÑ block ‚ãÑ :Else ‚ãÑ block ‚ãÑ :EndTrap	Syntax	Control	Structure	Expression	try catch errorhandling trapping exception
:While	:While bx ‚ãÑ block ‚ãÑ :AndIf bx‚îÇ:OrIf bx ‚ãÑ block ‚ãÑ :EndWhile	Syntax	Control	Structure	Expression	loop do iteration ‚ç£
:While	:While bx ‚ãÑ block ‚ãÑ :AndIf bx‚îÇ:OrIf bx ‚ãÑ block ‚ãÑ :Until bx	Syntax	Control	Structure	Expression	loop do iteration ‚ç£
:With	:With ns ‚ãÑ block ‚ãÑ :EndWith	Syntax	Control	Structure	Expression	scope namespace object
:GoTo J	Branch to line or label J	Syntax	Control	Keyword	Expression	branch switch ‚Üí
:Return	Abort (cut stack back one frame)	Syntax	Control	Keyword	Expression	abort ‚Üí0 stop
:Leave	Terminate execution :For/:Repeat/:While block	Syntax	Control	Keyword	Expression	break earlyexit
:Continue	Start iteration of the immediately surrounding :For/:Repeat/:While loop	Syntax	Control	Keyword	Expression	continuation
)CLEAR	Clear active workspace	Non-syntax			System Command	new refresh empty erase delete remove purge expunge reset all ‚éïclear
)CMD cmd	Execute cmd (cmd is mandatory on Windows, optional on UNIX)	Non-syntax			System Command	shell dos operatingsystem commandprocessor windows
)CONTINUE	Save active workspace as CONTINUE and terminate session	Non-syntax			System Command	exit stop close ‚éïoff )off ‚éïsave
)COPY ws {nms}	Copy (selected) contents of workspace ws to active workspace	Non-syntax		File Access	System Command	import use load transfer include item object otherworkspace )pcopy ‚éïcy
)CS {space}	Change current namespace	Non-syntax			System Command	into out of # ‚éïse ‚éïcs
)DROP {ws}	Erase file containing workspace ws	Non-syntax			System Command	delete remove expunge
)ED {etype} nms	Open Editor for named objects of type etype	Non-syntax			System Command	open modify code source definition define value ‚éïed
)ERASE nms	Delete named objects from the active workspace	Non-syntax			System Command	remove ‚éïex expunge item object
)HOLDS	List tokens currently held (acquired by :Hold)	Non-syntax			System Command	synchronisation synchronization parallel threading tokens greenthreading
)LIB {folder}	List workspaces either on WSPATH or in folder	Non-syntax			System Command	dir ls
)LOAD {ws}	Replace active workspace with workspace ws	Non-syntax		File Access	System Command	open fetch get bringin ‚éïload
)NS {name}	Create new global namespace called name	Non-syntax			System Command	‚éïNS
)OFF	Terminate the session	Non-syntax			System Command	exit stop close ‚éïoff )continue
)PCOPY ws {nms}	As )COPY but does not overwrite existing objects	Non-syntax		File Access	System Command	import load include item object otherworkspace )copy
)RESET {n}	Reset state indicator and empty event queue/clear top n suspensions	Non-syntax			System Command	)sic clear cutback stack
)SAVE {ws}	Save active workspace, optionally with new name ws	Non-syntax			System Command	archive store ‚éïsave
)SH cmd	Execute cmd (cmd is mandatory on Windows, optional on UNIX)	Non-syntax			System Command	shell os operatingsystem commandprocessor ‚éïsh linux macos aix unix rasbianpios
)SI {n} {-tid=tdno}	Display (first n /last if n<0 lines of) state indicator (for  tdno)	Non-syntax			System Command	display stack ‚éïsi ‚éïxsi
)SIC	Reset state indicator and empty event queue/clear top n suspensions	Non-syntax			System Command	)reset clear cutback stack
)SINL{n} {-tid=tdno}	Display (first n /last if n<0 lines of) state indicator (for thread tdno) with local names	Non-syntax			System Command	display stack list locals ‚éïstate
)TID {tdno}	Switch to thread tdno or report current thread number	Non-syntax			System Command	synchronisation synchronization parallel threading greenthreading ‚éïtid
)WSID {ws}	Set or report the name of the active workspace	Non-syntax			System Command	identification filepath filename ‚éïwsid
)XLOAD {ws}	Load workspace ws without executing ‚éïLX	Non-syntax		File Access	System Command	open fetch get quiet latentexpression autoexec boot
)CLASSES {nm}	List classes in current namespace, optionally beginning with {nm}	Non-syntax			System Command	information listing report ¬Ø9.4
)EVENTS {nm}	List events in current namespace, optionally beginning with {nm}	Non-syntax			System Command	information listing report ¬Ø8.6
)FNS {nm}	List functions in current namespace, optionally beginning with {nm}	Non-syntax			System Command	information listing report ¬Ø3.1 ¬Ø3.2 ¬Ø3.3 ¬Ø3.6
)INTERFACES {nm}	List interfaces in current namespace, optionally beginning with {nm}	Non-syntax			System Command	information listing report ¬Ø9.5 ¬Ø9.7
)METHODS {nm}	List methods in current namespace, optionally beginning with {nm}	Non-syntax			System Command	information listing report ¬Ø3.6
)OBJECTS {nm}	List objects in current namespace, optionally beginning with {nm}	Non-syntax			System Command	information listing report ¬Ø9.1 ¬Ø9.2 ¬Ø9.4 ¬Ø9.5 ¬Ø9.6 ¬Ø9.7
)OBS {nm}	List objects in current namespace, optionally beginning with {nm}	Non-syntax			System Command	information listing report ¬Ø9.1 ¬Ø9.2 ¬Ø9.4 ¬Ø9.5 ¬Ø9.6 ¬Ø9.7
)OPS {nm}	List operatoris in current namespace, optionally beginning with {nm}	Non-syntax			System Command	information listing report ¬Ø4.1 ¬Ø4.2 ¬Ø4.3
)PROPS {nm}	List properties in current namespace, optionally beginning with {nm}	Non-syntax			System Command	information listing report ¬Ø2.3
)VARS {nm}	List variables in current namespace, optionally beginning with {nm}	Non-syntax			System Command	information listing report ¬Ø2.1 ¬Ø2.2 ¬Ø2.3 ¬Ø2.6
‚éïA	The letters from A to Z	System	Constant		System Function	abcdefghijklmnopqrstuvwxyz latinalphabet englishletters uppercase a-z
‚éïD	The digits from 0 to 9	System	Constant		System Function	123456789 numbers arabicnumerals 0-9
‚éïNULL	A reference to the null item	System	Constant		System Function	void emptycell .net nil
0::any error	Covers all errors (errors 1‚Äì999)				Error Message	try catch errorhandling trapping exception
1::WS FULL	There is insufficient workspace in which to perform an operation				Error Message	size memory resources maxws ‚éïwa
2::SYNTAX ERROR	A line of characters does not constitute a meaningful statement				Error Message	parser parsing
3::INDEX ERROR	Index or axis is not in ‚ç≥‚ç¥Y or not in ‚ç≥‚â¢‚ç¥Y				Error Message	bounds limits overflow beyond dimensions length
4::RANK ERROR	Array rank invalid for function/operator, or ranks of arguments do not conform				Error Message	dimensions conformability
5::LENGTH ERROR	The shape of the arguments of a function do not conform, but the ranks do conform				Error Message	conformability
6::VALUE ERROR	Undefined name in this scope, or function does not return result while required				Error Message	
7::FORMAT ERROR	Ill-formed specification in the left argument of ‚éïFMT				Error Message	
10::LIMIT ERROR	A system limit is exceeded				Error Message	
11::DOMAIN ERROR	Type or value not permitted for the function/operator/system variable or unrepresentable numeric value				Error Message	
12::HOLD ERROR	Attempting ‚éïSAVE while external arrays or component files are held by ‚éïFHOLD				Error Message	
16::NONCE ERROR	System function or syntax or appropriate value is not currently implemented but is reserved for future use				Error Message	
18::FILE TIE ERROR	File tie number used as tied when not or available when tied, or missing external variable				Error Message	
19::FILE ACCESS ERROR	User is not authorised, or has supplied the wrong passnumber, or ‚éïFERASE/‚éïFRENAME on non-exclusive tie				Error Message	
20::FILE INDEX ERROR	An attempt is made to reference a non-existent component				Error Message	
21::FILE FULL	Operation would cause the file to exceed its file size limit				Error Message	
22::FILE NAME ERROR	File not found, file exists, incompatible file, or ‚éïFERASE/‚éïNERASE filename mismatch				Error Message	
23::FILE DAMAGED	Component file damaged ‚Äî check with ‚éïFCHK				Error Message	
24::FILE TIED	Attempt to tie file that is exclusively tied, or to exclusively tie file that is tied				Error Message	
25::FILE TIED REMOTELY	Attempt to tie file that another processor has exclusively tied, or to exclusively tie file that another processor has exclusively tied				Error Message	
26::FILE SYSTEM ERROR	Input/output error during file read/write ‚Äî use ‚éïFCHK when file becomes available				Error Message	
28::FILE SYSTEM NOT AVAILABLE	Lock attempt failed ‚Äî may be due to opportunistic locks being enabled on Windows				Error Message	oplock
30::FILE SYSTEM TIES USED UP	User already has the maximum number of files tied				Error Message	‚éïftie fstie ‚éïfcreate
31::FILE TIE QUOTA USED UP	Maximum number of file ties for this APL instance has been reached				Error Message	
32::FILE NAME QUOTA USED UP	User already has the maximum number of files named				Error Message	‚éïfcreate ‚éïftie ‚éïfstie ‚éïfrename
34::FILE SYSTEM NO SPACE	There is insufficient disk space				Error Message	
35::FILE ACCESS ERROR - CONVERTING FILE	Operating system did not allow APL to upgrade component file structure				Error Message	
38::FILE COMPONENT DAMAGED	Attempt is made to access a component that is not a valid APL object ‚Äî use ‚éïFCHK				Error Message	
52::FIELD CONTENTS RANK ERROR	Field content of rank greater than 2 is assigned to ‚éïSM				Error Message	
53::FIELD CONTENTS TOO MANY COLUMNS	Content of a numeric or date field assigned to ‚éïSM has more than one column				Error Message	
54::FIELD POSITION ERROR	Location of the field assigned to ‚éïSM is outside the screen				Error Message	
55::FIELD SIZE ERROR					Error Message	
56::FIELD CONTENTS/TYPE MISMATCH	Field contents assigned to ‚éïSM does not conform with the given field type e.g. character content with numeric type				Error Message	
57::FIELD TYPE/BEHAVIOUR UNRECOGNISED	Field type or behaviour code assigned to ‚éïSM is invalid				Error Message	
58::FIELD ATTRIBUTES RANK ERROR	The current video attribute assigned to ‚éïSM is non-scalar but its rank does not match that of the field contents				Error Message	
59::FIELD ATTRIBUTES LENGTH ERROR	The current video attribute assigned to ‚éïSM is non-scalar but its dimensions do not match those of the field contents				Error Message	
60::FULL-SCREEN ERROR	The required full screen capabilities are not available to ‚éïSM				Error Message	
61::KEY CODE UNRECOGNISED	A key code supplied to ‚éïSR or ‚éïPFKEY is not recognised as a valid code, or attempt at creating a KeyPress event with invalid Input Code				Error Message	
62::KEY CODE RANK ERROR	A key code supplied to ‚éïSR or ‚éïPFKEY is not a scalar or a vector				Error Message	
63::KEY CODE TYPE ERROR	A key code supplied to ‚éïSR or ‚éïPFKEY is numeric or nested; i.e. is not a valid key code				Error Message	
70::FORMAT FILE ACCESS ERROR	The date format file to be used by ‚éïSM does not exist or cannot be accessed				Error Message	
71::FORMAT FILE ERROR	The date format file to be used by ‚éïSM is ill-formed				Error Message	
72::NO PIPES	The limit on the number of pipes communicating between tasks is during startup, ‚éïSH, or use of an external variable				Error Message	
76::PROCESSOR TABLE FULL	The limit on the number of processes (tasks) that the computer system can support would be exceeded				Error Message	
84::TRAP ERROR	Searching for a definition set for the system variable ‚éïTRAP, after a trappable error has occurred, caused WS FULL				Error Message	
90::EXCEPTION	A Microsoft .NET object threw an exception				Error Message	
92::TRANSLATION ERROR	The system cannot convert a character from Unicode to an Atomic Vector (‚éïAV) index or vice versa				Error Message	‚éïavu unicode classic codepage characterset charset encoding sbcs
99::INTERNAL ERROR	Severe system error ‚Äî save your work(space), and report the issue to Dyalog				Error Message	
1000::any exception	Covers all exceptions (errors 1001‚Äì1009)			Exception	Error Message	try catch errorhandling trapping exception
1001::STOP VECTOR	Execution stopped due to ‚éïSTOP or stop bit set from editor			Exception	Error Message	halt inspect breakpoint
1002::WEAK INTERRUPT	Execution stopped by weak interrupt			Exception	Error Message	
1003::INTERRUPT	Execution stopped by strong interrupt			Exception	Error Message	
1004::INPUT INTERRUPT	EOF to ‚éï or soft interrupt to ‚çû			Exception	Error Message	end-of-file
1005::EOF INTERRUPT	EOF when reading input from a file (when an input to APL is from a file)			Exception	Error Message	end-of-file
1006::TIMEOUT	Time limit specified by ‚éïRTL exceeded while awaiting input through ‚çû or ‚éïSR			Exception	Error Message	character input stdin prompt
1007::RESIZE	User resizes the ‚éïSM window			Exception	Error Message	
1008::DEADLOCK	Two threads acquiring a hold of two different tokens, and then each asks to hold the other token			Exception	Error Message	
]CALC.Factors	Determine the prime factors of the argument	Non-syntax	Ucmd	CALC	User command	User commands that relate to manipulation of data ]Factors
]CALC.FromHex	Convert a list of hexadecimal representations of integers to a numeric vector	Non-syntax	Ucmd	CALC	User command	User commands that relate to manipulation of data ]FromHex
]CALC.PivotTable	Create a pivot table from an appropriate matrix	Non-syntax	Ucmd	CALC	User command	User commands that relate to manipulation of data ]PivotTable
]CALC.ToHex	Convert integer(s) to a vector of text vectors containing the hexadecimal representation of each number	Non-syntax	Ucmd	CALC	User command	User commands that relate to manipulation of data ]ToHex
]DEVOPS.DBuild	Run one or more DyalogBuild script files (.dyalogbuild)	Non-syntax	Ucmd	DEVOPS	User command	User commands that relate to development and operations ]DBuild
]DEVOPS.DTest	Run (a selection of) functions named test_* from a namespace, file or directory	Non-syntax	Ucmd	DEVOPS	User command	User commands that relate to development and operations ]DTest
]FILE.CD	Report (and, optionally, change) the current directory	Non-syntax	Ucmd	FILE	User command	User commands that relate to files ]CD
]FILE.Collect	Merge all the files with the specified path/name{-nnn} into a single file	Non-syntax	Ucmd	FILE	User command	User commands that relate to files ]Collect
]FILE.Compare	Compare two component files	Non-syntax	Ucmd	FILE	User command	User commands that relate to files ]Compare
]FILE.Edit	Open the specified native file as an editable text file	Non-syntax	Ucmd	FILE	User command	User commands that relate to files ]Edit
]FILE.Find	List line numbers and lines that contain the specified string for each file that has a match	Non-syntax	Ucmd	FILE	User command	User commands that relate to files ]Find
]FILE.Open	Open a file or directory with the specified application	Non-syntax	Ucmd	FILE	User command	User commands that relate to files ]Open
]FILE.Replace	Replace strings in files and return the number of changes made	Non-syntax	Ucmd	FILE	User command	User commands that relate to files ]Replace
]FILE.Split	Split a single file into (up to 999) smaller files	Non-syntax	Ucmd	FILE	User command	User commands that relate to files ]Split
]FILE.ToLarge	Transform component files in the specified directory from small-span to large-span	Non-syntax	Ucmd	FILE	User command	User commands that relate to files ]ToLarge
]FILE.ToQuadTS	Convert a component file timestamp (single float number) to ‚éïTS format (vector of 7 numbers)	Non-syntax	Ucmd	FILE	User command	User commands that relate to files ]ToQuadTS
]FILE.Touch	Check whether the specified file exists in the current/specified location and create it if it cannot be found	Non-syntax	Ucmd	FILE	User command	User commands that relate to files ]Touch
]FN.Align	Align end-of-line comments	Non-syntax	Ucmd	FN	User command	User commands that relate to functions and operators ]Align
]FN.Calls	Produce the calling tree of a function in a class/namespace/scriptfile	Non-syntax	Ucmd	FN	User command	User commands that relate to functions and operators ]Calls
]FN.Compare	Compare two functions	Non-syntax	Ucmd	FN	User command	User commands that relate to functions and operators ]Compare
]FN.Defs	List single-line dfns, dops, derived functions and trains	Non-syntax	Ucmd	FN	User command	User commands that relate to functions and operators ]Defs
]FN.DInput	Define a multi-line dfn, dop or derived function/operator, or execute a multi-line expression	Non-syntax	Ucmd	FN	User command	User commands that relate to functions and operators ]DInput
]FN.Latest	List functions modified since a specified date (default is today), most-recently-changed first	Non-syntax	Ucmd	FN	User command	User commands that relate to functions and operators ]Latest
]FN.ReorderLocals	Sort local names in the header of tradfns and tradops	Non-syntax	Ucmd	FN	User command	User commands that relate to functions and operators ]ReorderLocals
]LINK.Add	Associate item in linked namespace with new file/directory in corresponding directory	Non-syntax	Ucmd	LINK	User command	User commands for namespace-directory synchronisation (see https//github.com/dyalog/link/wiki) ]Add
]LINK.Break	Break link between namespace and corresponding directory	Non-syntax	Ucmd	LINK	User command	User commands for namespace-directory synchronisation (see https//github.com/dyalog/link/wiki) ]Break
]LINK.CaseCode	Append filename with numeric encoding of capitalisation	Non-syntax	Ucmd	LINK	User command	User commands for namespace-directory synchronisation (see https//github.com/dyalog/link/wiki) ]CaseCode
]LINK.Create	Link a namespace with a directory (create one or both if absent)	Non-syntax	Ucmd	LINK	User command	User commands for namespace-directory synchronisation (see https//github.com/dyalog/link/wiki) ]Create
]LINK.Export	Export a namespace to a directory (create the directory if absent); does not create a link	Non-syntax	Ucmd	LINK	User command	User commands for namespace-directory synchronisation (see https//github.com/dyalog/link/wiki) ]Export
]LINK.Expunge	Erase item and associated file	Non-syntax	Ucmd	LINK	User command	User commands for namespace-directory synchronisation (see https//github.com/dyalog/link/wiki) ]Expunge
]LINK.GetFileName	Return name of file associated with item	Non-syntax	Ucmd	LINK	User command	User commands for namespace-directory synchronisation (see https//github.com/dyalog/link/wiki) ]GetFileName
]LINK.GetItemName	Return name of item associated with file	Non-syntax	Ucmd	LINK	User command	User commands for namespace-directory synchronisation (see https//github.com/dyalog/link/wiki) ]GetItemName
]LINK.Import	Import a namespace from a directory (create the namespace if absent); does not create a link	Non-syntax	Ucmd	LINK	User command	User commands for namespace-directory synchronisation (see https//github.com/dyalog/link/wiki) ]Import
]LINK.List	List active namespace-directory links	Non-syntax	Ucmd	LINK	User command	User commands for namespace-directory synchronisation (see https//github.com/dyalog/link/wiki) ]List
]LINK.Refresh	Fully synchronise namespace-directory content	Non-syntax	Ucmd	LINK	User command	User commands for namespace-directory synchronisation (see https//github.com/dyalog/link/wiki) ]Refresh
]MSWIN.Assemblies	List all .NET assemblies currently loaded into memory	Non-syntax	Ucmd	MSWIN	User command	User commands that relate to the Microsoft Windows operating system ]Assemblies
]MSWIN.Caption	Query or change window captions	Non-syntax	Ucmd	MSWIN	User command	User commands that relate to the Microsoft Windows operating system ]Caption
]MSWIN.CopyReg	Copy registry entries to file and, optionally, between Dyalog versions	Non-syntax	Ucmd	MSWIN	User command	User commands that relate to the Microsoft Windows operating system ]CopyReg
]MSWIN.FileAssociations	Change the file associations of Dyalog workspaces, applications and scripts (.dws, .dyapp and .dyalog files)	Non-syntax	Ucmd	MSWIN	User command	User commands that relate to the Microsoft Windows operating system ]FileAssociations
]MSWIN.GUIProps	List property names and values for given or current object	Non-syntax	Ucmd	MSWIN	User command	User commands that relate to the Microsoft Windows operating system ]GUIProps
]MSWIN.KeyPress	Return message arguments of KeyPress events	Non-syntax	Ucmd	MSWIN	User command	User commands that relate to the Microsoft Windows operating system ]KeyPress
]NS.ScriptUpdate	Synchronise namespace/class script to match current content	Non-syntax	Ucmd	NS	User command	User commands that relate to namespaces ]ScriptUpdate
]NS.Summary	Summarise (scope, size, syntax) the functions in a namespace/class/scriptfile	Non-syntax	Ucmd	NS	User command	User commands that relate to namespaces ]Summary
]NS.Xref	Describe the inter-object cross-references in a class/namespace/scriptfile	Non-syntax	Ucmd	NS	User command	User commands that relate to namespaces ]Xref
]OUTPUT.Box	Display output with borders indicating shape, type and structure	Non-syntax	Ucmd	OUTPUT	User command	User commands that affect the way items are displayed ]Box
]OUTPUT.Boxing	Display output with borders indicating shape, type and structure	Non-syntax	Ucmd	OUTPUT	User command	User commands that affect the way items are displayed ]Boxing
]OUTPUT.Disp	Display specified array with borders indicating sub-array shape and type	Non-syntax	Ucmd	OUTPUT	User command	User commands that affect the way items are displayed ]Disp
]OUTPUT.Display	Display specified array with borders indicating array and sub-array shape and type	Non-syntax	Ucmd	OUTPUT	User command	User commands that affect the way items are displayed ]Display
]OUTPUT.Find	Precede output with a reference to the line of code that generated it	Non-syntax	Ucmd	OUTPUT	User command	User commands that affect the way items are displayed ]Find
]OUTPUT.Format	Format text into vector of text vectors (or matrix if called from Session) to fit ‚éïPW using specified margins	Non-syntax	Ucmd	OUTPUT	User command	User commands that affect the way items are displayed ]Format
]OUTPUT.HTML	Render HTML or SVG	Non-syntax	Ucmd	OUTPUT	User command	User commands that affect the way items are displayed ]HTML
]OUTPUT.Layout	Format text into vector of text vectors (or matrix if called from Session) to fit ‚éïPW using margins inferred from the text	Non-syntax	Ucmd	OUTPUT	User command	User commands that affect the way items are displayed ]Layout
]OUTPUT.Plot	Plot data	Non-syntax	Ucmd	OUTPUT	User command	User commands that affect the way items are displayed ]Plot
]OUTPUT.Rows	Cut, wrap, fold or extend the display of output lines to fit the Session window	Non-syntax	Ucmd	OUTPUT	User command	User commands that affect the way items are displayed ]Rows
]PERFORMANCE.Profile	Report performance details (optionally through GUI)	Non-syntax	Ucmd	PERFORMANCE	User command	User commands that relate to consumption of computing resources ]Profile
]PERFORMANCE.RunTime	Report execution time of one or more expressions	Non-syntax	Ucmd	PERFORMANCE	User command	User commands that relate to consumption of computing resources ]RunTime
]PERFORMANCE.SpaceNeeded	Compute memory needed to run expression(s)	Non-syntax	Ucmd	PERFORMANCE	User command	User commands that relate to consumption of computing resources ]SpaceNeeded
]SALT.Boot	Boot from a file containing instructions or a function	Non-syntax	Ucmd	SALT	User command	User command covers for SALT functionality ]Boot
]SALT.Clean	Remove SALT tags from the ws or specific items so that SALT no longer saves changes to associated files	Non-syntax	Ucmd	SALT	User command	User command covers for SALT functionality ]Clean
]SALT.Compare	Compare two versions of a SALTed item	Non-syntax	Ucmd	SALT	User command	User command covers for SALT functionality ]Compare
]SALT.List	List files (default: .dyalog only) and directories in the specified directory	Non-syntax	Ucmd	SALT	User command	User command covers for SALT functionality ]List
]SALT.Load	Load item from native text file	Non-syntax	Ucmd	SALT	User command	User command covers for SALT functionality ]Load
]SALT.Refresh	Reload all SALTed items from their associated files	Non-syntax	Ucmd	SALT	User command	User command covers for SALT functionality ]Refresh
]SALT.RemoveVersions	Remove one or more versions of a file managed by SALT	Non-syntax	Ucmd	SALT	User command	User command covers for SALT functionality ]RemoveVersions
]SALT.Save	Save item in a native text file (default: same place if already SALTed)	Non-syntax	Ucmd	SALT	User command	User command covers for SALT functionality ]Save
]SALT.Set	Return one or all parameters or set one parameter	Non-syntax	Ucmd	SALT	User command	User command covers for SALT functionality ]Set
]SALT.Settings	Return one or all parameters or set one parameter	Non-syntax	Ucmd	SALT	User command	User command covers for SALT functionality ]Settings
]SALT.Snap	Save all new or modified items to native text files (unscripted namespaces become directories)	Non-syntax	Ucmd	SALT	User command	User command covers for SALT functionality ]Snap
]TOOLS.ADoc	Generate documentation automatically	Non-syntax	Ucmd	TOOLS	User command	Development and presentation user commands ]ADoc
]TOOLS.Calendar	Display calendar	Non-syntax	Ucmd	TOOLS	User command	Development and presentation user commands ]Calendar
]TOOLS.Chart	Chart the specified expression	Non-syntax	Ucmd	TOOLS	User command	Development and presentation user commands ]Chart
]TOOLS.Demo	Provide playback mechanism for live demonstrations	Non-syntax	Ucmd	TOOLS	User command	Development and presentation user commands ]Demo
]TOOLS.Help	Browse or get link to information about any APL concept	Non-syntax	Ucmd	TOOLS	User command	Development and presentation user commands ]Help
]TOOLS.Version	Report version numbers of APL, OS, SALT, UCMD, .NET and/or workspace	Non-syntax	Ucmd	TOOLS	User command	Development and presentation user commands ]Version
]TRANSFER.In	Import a workspace from a workspace transfer file	Non-syntax	Ucmd	TRANSFER	User command	User commands that convert workspaces between APL versions and dialects ]In
]TRANSFER.Out	Export the current workspace to a workspace transfer file	Non-syntax	Ucmd	TRANSFER	User command	User commands that convert workspaces between APL versions and dialects ]Out
]UCMD.UDebug	Facilitate debugging of user commands	Non-syntax	Ucmd	UCMD	User command	User commands that manage the user command framework ]UDebug
]UCMD.ULoad	Load a user command's script into the current namespace	Non-syntax	Ucmd	UCMD	User command	User commands that manage the user command framework ]ULoad
]UCMD.UMonitor	Gather user command execution data	Non-syntax	Ucmd	UCMD	User command	User commands that manage the user command framework ]UMonitor
]UCMD.UNew	Create one or more new user commands (optionally using a GUI)	Non-syntax	Ucmd	UCMD	User command	User commands that manage the user command framework ]UNew
]UCMD.UReset	Refresh cache of all user command definitions	Non-syntax	Ucmd	UCMD	User command	User commands that manage the user command framework ]UReset
]UCMD.USetup	Run Setup from setup.dyalog	Non-syntax	Ucmd	UCMD	User command	User commands that manage the user command framework ]USetup
]UCMD.UVersion	Report version information of a user command	Non-syntax	Ucmd	UCMD	User command	User commands that manage the user command framework ]UVersion
]WS.Check	Perform workspace integrity check	Non-syntax	Ucmd	WS	User command	User commands that relate to workspaces ]Check
]WS.Compare	Compare two workspaces	Non-syntax	Ucmd	WS	User command	User commands that relate to workspaces ]Compare
]WS.Document	List (part of) the workspace content, displaying each item separately	Non-syntax	Ucmd	WS	User command	User commands that relate to workspaces ]Document
]WS.FindRefs	Follow references in the workspace until all references have been found	Non-syntax	Ucmd	WS	User command	User commands that relate to workspaces ]FindRefs
]WS.FnsLike	List functions and operators matching a pattern	Non-syntax	Ucmd	WS	User command	User commands that relate to workspaces ]FnsLike
]WS.Locate	Locate (and, optionally, replace) strings in the workspace	Non-syntax	Ucmd	WS	User command	User commands that relate to workspaces ]Locate
]WS.Map	Display namespace treeview	Non-syntax	Ucmd	WS	User command	User commands that relate to workspaces ]Map
]WS.NamesLike	List names followed by their class matching the pattern	Non-syntax	Ucmd	WS	User command	User commands that relate to workspaces ]NamesLike
]WS.Nms	List names followed by their class matching the pattern	Non-syntax	Ucmd	WS	User command	User commands that relate to workspaces ]Nms
]WS.ObsLike	List objects matching the pattern	Non-syntax	Ucmd	WS	User command	User commands that relate to workspaces ]ObsLike
]WS.Peek	Execute expression in temporary copy of workspace	Non-syntax	Ucmd	WS	User command	User commands that relate to workspaces ]Peek
]WS.SizeOf	Report size of variables in descending order	Non-syntax	Ucmd	WS	User command	User commands that relate to workspaces ]SizeOf
]WS.VarsLike	List variables matching the pattern	Non-syntax	Ucmd	WS	User command	User commands that relate to workspaces ]VarsLike
(√ó/‚ç¥)Y	Count the number of elements in an array	Tacit	Monadic Function		Array Properties	tallyall ‚ç¥, numberofelements numberofitems howmanyelements howmanyitems whole array scalars countall √ó/‚ç¥ √ó‚åø‚ç¥ ‚â¢, ‚ç¥,
(+/,)N	Sum all elements in an array	Tacit	Monadic Function		Arithmetic	sumall +‚åø, grandtotal items
(+/,)B	Number of trues	Tacit	Monadic Function		Boolean/Logical	sumall howmanytrue
(‚â¢‚ç∏)B	Number of trues	Tacit	Monadic Function		Boolean/Logical	+/, +‚åø, sum all howmanytrue
(‚â¢‚ç¥)Y	Rank (number of dimensions) of Y	Tacit	Monadic Function		Array Properties	howmanyaxes numberofaxes axiscount ‚ç¥‚ç¥
X(‚äÉ‚ç∑)Y	If Y begins with X	Tacit	Dyadic Function		Boolean/Logical	prefixof startswith
captured_output‚Üê‚éïCMD cmd	Execute Microsoft Windows cmd	System	Function	System	System Function	shell os operatingsystem commandprocessor ‚éïsh )cmd
r‚Üê‚éïCSV data	Convert CSV data data to APL array	System	Function	Data Conversion	System Function	tsv table import parse commaseparatedvalues tabseparatedvalues characterseparatedvalues
r‚Üêdata {header} ‚éïCSV format_spec	Convert APL array to CSV data	System	Function	Data Conversion	System Function	tsv table export generate commaseparatedvalues tabseparatedvalues characterseparatedvalues
r‚Üêtype ‚éïDR x	Interpret internal representation as array of type 'type'	System	Function	Array Properties	System Function	datarepresentation internalrepresentation
type‚Üê‚éïDR x	Return internal data type of x	System	Function	Array Properties	System Function	datarepresentation internalrepresentation
r‚Üê{format_spec} ‚éïFMT x	Convert x into character matrix according to spec	System	Function	Data Conversion	System Function	displayform formatbyspecification cobolpictureformat fortranformatter ‚éïdf ‚çï
r‚Üê{flag} ‚éïJSON data	APL array from (flag=0) or to (flag=1) JSON text	System	Function	Data Conversion	System Function	javascriptobjectnotation importexport generateparse
name‚Üê{type}{shape} ‚éïMAP file {rw} {offset}	Associate name with mapped file (from offset)	System	Function	File Access	System Function	memorymap array
{name}‚Üê{name} ‚éïNA fn_desc	Associate name with external DLL function	System	Function	System	System Function	.dll .so .dylib .a c++ dynamiclinkedlibrary sharedlibrary dynamiclibrary
r‚Üê{tn} (reg_ex ‚éïS trans) text	Search text for PCRE reg_ex returning trans (optional tn to spool output to native file)	System	Operator	Data Conversion	System Function	regex search find locate perlcompatibleregularexpression
r‚Üê{tn} (reg_ex ‚éïR trans) text	Replace text selected by reg_ex using trans	System	Operator	Data Conversion	System Function	regex substitute pcre perlcompatibleregularexpression
captured_output‚Üê‚éïSH cmd	Execute UNIX shell cmd	System	Function	System	System Function	shell os operatingsystem commandprocessor linux macos aix rasbianpios ‚éïcmd )sh
r‚Üê{encoding} ‚éïUCS vec	Map characters to/from Unicode code points	System	Function	Data Conversion	System Function	utf-8 utf8 utf-16 utf16 utf-32 utf32 encoding ucs-4 ucs4 ucs-2 ucs2 iso10646 ord chr ascii latin-1 windows-1252 ansi
‚éïUSING ‚Üêns_specs	Set search path for .NET Namespace(s)	System	Variable	System	System Function	microsoft mscorlib.dll dotnet
valid nums‚Üê{seps} ‚éïVFI text	Validate numeric input: returns Boolean validity mask and numeric vector of converted input	System	Function	Data Conversion	System Function	verifyandfixinput atoi parse numbers fields formdata
r‚Üê{xml_options} ‚éïXML data	XML string to/from APL array	System	Function	Data Conversion	System Function	extensiblemarkuplanguage xhtmltag xmltag
r‚Üê‚éïAI	User number, compute, connect, keying time (ms)	System	Constant	System	System Function	accountinformation session milliseconds uptime useridentification cpuusage processorusage idle
user_name‚Üê‚éïAN	User (login) name	System	Constant	System	System Function	accountname
‚éïCLEAR	Clear the active workspace	System	Constant	System	System Function	new refresh empty # erase delete remove purge expunge reset all )clear
{0‚ç¥‚äÇ''}‚Üê{names} ‚éïCY file	Copy (optionally selected) names from saved ws	System	Function	File Access	System Function	import load use transfer import load include item object otherworkspace )copy
{num}‚Üê‚éïDL num	Delay and return seconds actually delayed	System	Function	System	System Function	await sleep idle
‚éïLOAD file	Load saved workspace	System	Function	File Access	System Function	open fetch get bringin )load
‚éïOFF	Terminate the APL session	System	Constant	System	System Function	exit stop close )off
‚éïPATH ‚Üênss	Set search path (blank-separated list of namespace names) for functions and operators	System	Variable	System	System Function	stdlib standardlibrary include
{r}‚Üê{flag} ‚éïSAVE file	Save active ws (with stack if flag=0) in file with 0 returned on reload of saved ws, else 1	System	Function	File Access	System Function	archive store )save
‚éïSE	Session object	System	Namespace	System	System Function	environment gui persistent utilities
numvec‚Üê‚éïTS	Current time (y m d h m s ms)	System	Constant	System	System Function	now current localtimestamp datetime
r‚Üê{selector} ‚éïAT names	Syntactical attributes of named functions or operators	System	Function	System	System Function	valence arity shyness locked niladicmonadicdyadicambivalent functionoperator variadic properties author timestamp modificationtime result
r‚Üê‚éïCR name	Source of function or operator as a character matrix	System	Function	Data Conversion	System Function	code representation
{names}‚Üê{types} ‚éïED names	Open one or more objects (names) in the editor	System	Function	System	System Function	open modify code source definition define value )ed
{boolvec}‚Üê‚éïEX names	Delete named objects from the active workspace (1 if each name is now free for use, else 0)	System	Function	System	System Function	expunge erase remove item )erase
{r}‚Üê‚éïFX cr|nr|vr|or	Name of fn or op defined from its matrix, nested, vector or object representation (or failing line no)	System	Function	Data Conversion	System Function	define fix code source function operator
{level}‚Üê{level} ‚éïLOCK name|ref	Hide source and optionally disallow suspension	System	Function	System	System Function	secure closedsource encrypt
r‚Üê‚éïNR name	Source of function or operator as a nested vector	System	Function	Data Conversion	System Function	code representation vtv character
state|data‚Üê{settings} ‚éïPROFILE action	"Profile" CPU or elapsed time consumption of code	System	Function	System	System Function	performance monitor statistics stats observe processor resources
names‚Üê‚éïREFS name	List the names referenced by a function	System	Function	System	System Function	xref crossreference identifiers symbols
{linenos}‚Üê{linenos} ‚éïSTOP name	Enable/report the current state of stops for a function	System	Function	System	System Function	halt inspect breakpoint
{linenos}‚Üê{linenos} ‚éïTRACE name	Enable/report the current state of tracing for a function	System	Function	System	System Function	monitor
r‚Üê‚éïVR name	Source of function or operator as a simple vector	System	Function	Data Conversion	System Function	code representation
‚éïBASE.name	Invoke the base class definition of name	Syntax	Namespace	System	System Function	template up :base
class_hierarchy‚Üê‚éïCLASS ref	Class hierarchy for a class|instance	System	Function	System	System Function	parents ancestors
ref‚Üê{class|interface} ‚éïCLASS instance	Extract specific interface to an instance	System	Function	Data Conversion	System Function	parents ancestors
{old_ns}‚Üê{names} ‚éïCS ns	Switch to a ns, optionally exporting names	System	Function	Data Conversion	System Function	change namespace into current ‚éïthis )cs
old_df‚Üê‚éïDF char_array	Set the display form of the current space	System	Function	Data Conversion	System Function	visualrepresentation format ‚çï ‚éïfmt
{ref}‚Üê{flags} ‚éïFIX source	Define objects from source (vector of vectors or file name starting with 'file://')	System	Function	Data Conversion	System Function	define ‚éïfx code source function operator namespace class interface
refs‚Üê‚éïINSTANCES class	Current instances of class	System	Function	Data Conversion	System Function	children derived
instance‚Üê‚éïNEW class {conargs}	Create an instance of class	System	Function	Data Conversion	System Function	.new
{me|ref}‚Üê{name} ‚éïNS names|ns	Create (optionally named) namespace copying names or contents of ns into it	System	Function	Data Conversion	System Function	object make new construct collect )ns
script‚Üê‚éïSRC ref	The source code of a ref	System	Function	Data Conversion	System Function	representation script definition
ref‚Üê‚éïTHIS	Reference to the current namespace	System	Namespace	Data Conversion	System Function	here me myself
cn‚Üêx ‚éïFAPPEND tn {pn}	Append x to end of file (optional passnumber)	System	Function	Component Files	System Function	dcf
r‚Üê‚éïFAVAIL	1 if file system is available, else 0	System	Function	Component Files	System Function	dcf active usable accessible
cns‚Üê{fchk_opts} ‚éïFCHK file	Inspect and optionally repair file 	System	Function	Component Files	System Function	dcf check externalvariable
{tn}‚Üêfile ‚éïFCOPY tn {pn}	Create copy of named file tied to tn	System	Function	Component Files	System Function	dcf duplicate
{tn}‚Üêfile ‚éïFCREATE tn {64}	Create new component file	System	Function	Component Files	System Function	dcf touch make
{cn}‚Üê‚éïFDROP tn n {pn}	Drop n components from start (n>0) or end (n<0)	System	Function	Component Files	System Function	dcf remove trim slice resize cap clamp
{tn}‚Üêfile ‚éïFERASE tn {pn}	Erase exclusively-tied file	System	Function	Component Files	System Function	dcf delete expunge remove
r‚Üê‚éïFHIST tn {pn}	Return tied file tn's history (user/time of last operations)	System	Function	Component Files	System Function	dcf log
{tn}‚Üê‚éïFHOLD tn {pn}	Hold tied file tn (can be a matrix of tn {pn})	System	Function	Component Files	System Function	dcf block wait synchronisation synchronization parallel threading greenthreading
names‚Üê‚éïFLIB folder	List component files in the specified folder	System	Function	Component Files	System Function	dcf ls dir
names‚Üê‚éïFNAMES	Names of tied files in same order as ‚éïFNUMS	System	Constant	Component Files	System Function	dcf
tns‚Üê‚éïFNUMS	Vector containing tie numbers of tied files	System	Constant	Component Files	System Function	dcf access
r‚Üêpnames ‚éïFPROPS tn {pn}	Current values of the named properties of file tn	System	Function	Component Files	System Function	dcf settings query get retreive
r‚Üênvpairs ‚éïFPROPS tn {pn}	Set properties of file tn using name-value pairs	System	Function	Component Files	System Function	dcf settings update modify change
ax_mx‚Üê‚éïFRDAC tn {pn}	Read access matrix	System	Function	Component Files	System Function	dcf
r‚Üê‚éïFRDCI tn cn {pn}	Size in bytes, user and timestamp of last update to cn	System	Function	Component Files	System Function	dcf readaccess
r‚Üê‚éïFREAD tn cn {pn}	The array stored in component(s) cn in file tn	System	Function	Component Files	System Function	dcf get retrieve load copy fetch
{tn}‚Üêfile ‚éïFRENAME tn {pn}	Rename exclusively-tied file	System	Function	Component Files	System Function	dcf
{cn}‚Üêx ‚éïFREPLACE tn cn {pn}	Store array x in component number cn	System	Function	Component Files	System Function	dcf put overwrite store
{tn}‚Üê{bytes} ‚éïFRESIZE tn {pn}	Compact exclusively-tied file tn and set its max size	System	Function	Component Files	System Function	dcf maximum limit clamp
r‚Üê‚éïFSIZE tn {pn}	First cn, next-free cn, used and max size in bytes	System	Function	Component Files	System Function	dcf maximum
{tn}‚Üêax_mx ‚éïFSTAC tn {pn}	Set access matrix for file tn	System	Function	Component Files	System Function	dcf
{tn}‚Üêfile ‚éïFSTIE tn {pn}	Share-tie component file	System	Function	Component Files	System Function	dcf multiple parallel
{tn}‚Üêfile ‚éïFTIE tn {pn}	Exclusively tie component file	System	Function	Component Files	System Function	dcf single
{tn}‚Üê‚éïFUNTIE tns	Untie one or more component files	System	Function	Component Files	System Function	dcf release
numvec‚Üê‚éïLC	Lines at which each function on stack is suspended	System	Constant	Workspace	System Function	linecounter number state
‚éïLX‚Üêexpression	Expression to be executed when workspace is loaded	System	Variable	Workspace	System Function	latentexpression autoexec bootstrap startup automatic ‚éïload )load )xload
numvec‚Üê‚éïNC names	Class of each name (fractional if names is encl. vec)	System	Function	Workspace	System Function	itemtype
names‚Üê{init_chars} ‚éïNL nums	Active names of specified class(es), optionally filtered	System	Function	Workspace	System Function	namelist
names‚Üê{init_chars} ‚éïNL ¬Ø9.4	Active classes, optionally filtered	System	Function	Workspace	System Function	namelist )classes
names‚Üê{init_chars} ‚éïNL ¬Ø8.6	Active events, optionally filtered	System	Function	Workspace	System Function	namelist )events
names‚Üê{init_chars} ‚éïNL ¬Ø3	Active functions, optionally filtered	System	Function	Workspace	System Function	namelist )fns
names‚Üê{init_chars} ‚éïNL ¬Ø9.5 ¬Ø9.7	Active interfaces, optionally filtered	System	Function	Workspace	System Function	namelist )interfaces
names‚Üê{init_chars} ‚éïNL ¬Ø3.6	Active methods, optionally filtered	System	Function	Workspace	System Function	namelist )methods
names‚Üê{init_chars} ‚éïNL ¬Ø9	Active objects, optionally filtered	System	Function	Workspace	System Function	namelist )objects )obs
names‚Üê{init_chars} ‚éïNL ¬Ø4.1	Active operators, optionally filtered	System	Function	Workspace	System Function	namelist )ops
names‚Üê{init_chars} ‚éïNL ¬Ø2.3	Active properties, optionally filtered	System	Function	Workspace	System Function	namelist )props
names‚Üê{init_chars} ‚éïNL ¬Ø2.1	Active variables, optionally filtered	System	Function	Workspace	System Function	namelist )vars
space_references‚Üê‚éïRSI	The spaces from which functions on stack were called	System	Function	Workspace	System Function	referencestateindicator namespaces suspended
{r}‚Üê‚éïSHADOW names	Make names local to most recently invoked defined fn	System	Function	Workspace	System Function	localise localize encapsulate shield scope
names‚Üê‚éïSI	Vector of names of functions on the stack	System	Constant	Workspace	System Function	stateindicator )si
bytes‚Üê‚éïSIZE names	Space consumed by code/data attached to names	System	Function	Workspace	System Function	workspaceusage workspaceuse memoryconsumption
r‚Üê‚éïSTACK	Definition of each function on the stack	System	Constant	Workspace	System Function	state definitions
r‚Üê‚éïSTATE name	Details of the usage of name at each level of the stack	System	Function	Workspace	System Function	state definition )sinl
bytes‚Üê‚éïWA	Workspace available (unused)	System	Constant	Workspace	System Function	freememory
‚éïWSID‚Üêname	The name of the active workspace	System	Function	Workspace	System Function	filename currentworkspace )wsid
names‚Üê‚éïXSI	Full names of functions on the stack	System	Constant	Workspace	System Function	extended state namespacepath references )si
tdno‚Üê‚éïTCNUMS tdno	The child thread numbers of the given thread numbers	System	Function	System	System Function	synchronisation synchronization parallel threading greenthreading
tdno‚Üê‚éïTID	The number of the current thread	System	Constant	System	System Function	synchronisation synchronization parallel threading greethread )tid
{tdno}‚Üê{0|1} ‚éïTKILL tdno	Kill threads tdno and (default 1 is true) descendants	System	Function	System	System Function	synchronisation synchronization parallel threading stop terminate greenthreading
‚éïTNAME‚Üê{tdname}	Report/set the name (tdname) of the current thread	System	Variable	System	System Function	synchronisation synchronization parallel threading greenthreading
tdno‚Üê‚éïTNUMS	Report the numbers of all current threads	System	Constant	System	System Function	synchronisation synchronization parallel threading greenthreading
tdres‚Üê‚éïTSYNC tdno	Wait for threads tdno to terminate and return results	System	Function	System	System Function	synchronisation synchronization parallel threading greenthreading
{tkval}‚Üê{timeout} ‚éïTGET tktype	Remove tokens of types tktype from the token pool	System	Function	System	System Function	synchronisation synchronization parallel threading greenthreading
tktype‚Üê‚éïTPOOL	Type of each token in the token pool	System	Constant	System	System Function	synchronisation synchronization parallel threading greenthreading
{tdno}‚Üê{tkval} ‚éïTPUT tktype	Add tokens to pool and return any tdno this unblocks	System	Function	System	System Function	synchronisation synchronization parallel threading greenthreading
tktype‚Üê‚éïTREQ tdno	List token types that threads tdno are waiting for	System	Function	System	System Function	synchronisation synchronization parallel threading greenthreading
{r}‚Üê{flags} ‚éïMKDIR dir	Create or ensure existence of directory dir	System	Function	Native Files	System Function	md newfolder make
{offset}‚Üêx ‚éïNAPPEND tn type	Append x using internal representation type	System	Function	Native Files	System Function	extend concatenate
{tn}‚Üêfile ‚éïNCREATE tn	Create file (tn =0 to generate tn)	System	Function	Native Files	System Function	make new
{r}‚Üê{flags} ‚éïNDELETE file	Delete file (if flags =1, tolerate 'file not found')	System	Function	Native Files	System Function	erase remove expunge )drop
{tn}‚Üêfile ‚éïNERASE tn	Erase tied file tn	System	Function	Native Files	System Function	delete remove expunge drop
r‚Üê‚éïNEXISTS file	Return 1 if file exists, else 0	System	Function	Native Files	System Function	present present check lookfor
r‚Üê{encoding} ‚éïNGET file {flags}	Read Unicode text file as lines into array r	System	Function	Native Files	System Function	fetch read load get
t‚Üê{properties}1 ‚éïNINFO tn|file	Return values of properties 1 for file tn|file (‚ç†1 will expand wildcards in file)	System	Function	Native Files	System Function	dir ls list information
{rarg}‚Üêlock {secs} ‚éïNLOCK tn {offset} {bytes}	Change lock status of file region (0=unlock, 1=read, 2=write)(optional timeout in seconds)	System	Function	Native Files	System Function	restrict access seal passcode
file‚Üê‚éïNNAMES	Names of tied files in same order as ‚éïNNUMS	System	Constant	Native Files	System Function	
tns‚Üê‚éïNNUMS	Tie numbers of tied files	System	Constant	Native Files	System Function	
r‚Üê{flags} ‚éïNPARTS file	Splits file into path, base name and extension (normalising file if flags=1)	System	Function	Native Files	System Function	directory
{bytes}‚Üêvec ‚éïNPUT file {flags}	Write (overwrite if flags=1) lines to Unicode file	System	Function	Native Files	System Function	dump cat
vec‚Üê‚éïNREAD tn type n {offset}	Read n items of specified type from file tn	System	Function	Native Files	System Function	load fetch get
{tn}‚Üêfile ‚éïNRENAME tn	Rename tied file to have name file	System	Function	Native Files	System Function	move
{end_offset}‚Üêx ‚éïNREPLACE tn offset {typ}	Write x to file at offset as type	System	Function	Native Files	System Function	overwrite
{tn}‚Üê{bytes} ‚éïNRESIZE tn	Resize file to have specified size	System	Function	Native Files	System Function	cap limit clamp
bytes‚Üê‚éïNSIZE tn	Current size of file	System	Function	Native Files	System Function	bytes diskspace
{tn}‚Üêfile ‚éïNTIE tn {file_mode}	Tie a file in the specified mode	System	Function	Native Files	System Function	
{tn}‚Üê‚éïNUNTIE tn	Untie one or more files	System	Function	Native Files	System Function	release
{r}‚Üê‚éïDQ object	Process events generated by object(s)	System	Function	Native Files	System	dequeue wait
{exported}‚Üê{flags} ‚éïEXPORT nm	Specify fns to be exported by an OLEClient	System	Function	Native Files	System	
{r}‚Üê{action} ‚éïNQ object event {params}	Enqueue an event for processing	System	Function	Native Files	System	push request
{name}‚Üê{name} ‚éïWC type {ordered_props} {nvpairs} ‚Ä¶	Create an instance of a built-in type and set property values	System	Function	Native Files	System	window gui new
r‚Üê{object} ‚éïWG props ‚Ä¶	The values of the properties of an object	System	Function	Native Files	System	window gui get fetch query
children‚Üê{class} ‚éïWN parent	Child objects (of class) of parent	System	Function	Native Files	System	window gui names
{old_values}‚Üê{object} ‚éïWS nvpairs...	Set the values of one or more specified properties of object	System	Function	Native Files	System	window gui assign
‚éïDMX	Namespace containing details of most recent error in current thread	System	Namespace	Error Message	System	extended diagnostic
‚éïEXCEPTION	Details of most recent .NET exception	System	Namespace	Error Message	System	
{r}‚Üê{msg} ‚éïSIGNAL errno|{nvpairs}‚Ä¶	Signal an error; nvpairs set ‚éïDMX props	System	Function	Error Message	System	throw emulate
{0}‚Üê‚éïSIGNAL 0	Reset error-related system constants	System	Function	Error Message	System	clear
‚éïTRAP‚Üêtrap_spec	Define error handling	System	Function	Error Message	System	try catch
Xv(8‚å∂)Yv	Inverted Table Index-of (Xv‚ç≥Yv)	I-beam	Dyadic Function	Non-scalar Function	Index Generation	iota indicesin indexof position columndatabase
As(85‚å∂)Dv	Execute (‚çé) Silent Expression 	I-beam	Dyadic Function	Non-scalar Function	Data Conversion	evaluate apl compute numbers atoi run call parseexpression shy noresult
127‚å∂‚ç¨	Overwrite Free Pockets	I-beam	Constant		System	memory wipe
180‚å∂Dv	Canonical Representation (‚éïCR) for methods	I-beam	Function		Data Conversion	code representation oo classes private instance
181‚å∂Y	Unsqueezed Type (‚éïDR)	I-beam	Function		Array Properties	datarepresentation internalrepresentation
200‚å∂Dv	Syntax Colouring	I-beam	Function		Data Conversion	coloring highlighting parse parsing tokentypes
201‚å∂‚ç¨	Syntax Colour Tokens	I-beam	Constant		Data Conversion	coloring highlighting parse parsing tokentypes
Mv(219‚å∂)Jv	Compress/Decompress Vector of Short Integers	I-beam	Function		Data Conversion	lz4 zlib gzip deflate uncompress inflate
As(220‚å∂)Y	Serialise/Deserialise Array	I-beam	Function		Data Conversion	
{Xs}(400‚å∂)Y	Compiler Control	I-beam	Function		System	performance
600‚å∂Js	Trap Control	I-beam	Function		System	debugging repl try catch error handling
739‚å∂0	Temporary Directory	I-beam	Constant		System	tmp
{Xs}(819‚å∂)Y	Case Convert	I-beam	Function		Data Conversion	casefold casemap uppercase lowercase lettercase
900‚å∂Y	Called Monadically (tradfns/tradops only)	I-beam	Function		Function Application	arity ambivalent ambivalence variadic leftargument ‚éïnc
0=‚éïNC'‚ç∫'	Called Monadically (dfns/dops only)			Function Application	Expression	arity ambivalent ambivalence variadic leftargument 900‚å∂
950‚å∂‚ç¨	Loaded Libraries	I-beam	Constant		System	‚éïna .dll .so .dylib .a c++ dynamiclinkedlibrary sharedlibrary dynamiclibrary
1111‚å∂Jv	Number of Threads	I-beam	Function		Function Application	multithreading parallelprocessing performance affinity
1112‚å∂Js	Parallel Execution Threshold	I-beam	Function		Function Application	multithreading parallelprocessing performance affinity
X(1159‚å∂)Y	Update Function Time and User Stamp	I-beam	Function		System	‚éïat properties operator
Is(1500‚å∂)Y	Hash Array	I-beam	Function		Array Properties	performance hashing
Iv(2000‚å∂)Jv	Memory Manager Statistics	I-beam	Function		System	management performance
2002‚å∂Js	Specify Workspace Available (‚éïWA)	I-beam	Function		System	freememory
{Av}(2010‚å∂)Yv	Update DataTable	I-beam	Function		Expression	databinding assignment redefine inplace update
{Av}(2011‚å∂)Yv	Read¬†DataTable	I-beam	Function		Expression	databinding get fetch value
2014‚å∂Y	Remove Data Binding	I-beam	Function		Array Properties	disconnect databinding
{Xs}(2015‚å∂)Dv	Create Data Binding Source	I-beam	Function		Array Properties	connect
2016‚å∂Yv	Create .NET Delegate	I-beam	Function		Array Properties	make new
2017‚å∂Dv	Identify .NET Type	I-beam	Function		Array Properties	
2022‚å∂0	Flush Session Caption	I-beam	Constant		System	titlebar
2023‚å∂0	Close all Windows	I-beam	Constant		System	shut
2035‚å∂Dv	Set Dyalog Pixel Type ('ScaledPixel'|'RealPixel')	I-beam	Function		System	scaling highresolution hires retina px
{X}(2041‚å∂)Js	Override COM Default Value	I-beam	Function		System	
2100‚å∂0	Export Workspace to in-Memory .NET Assembly	I-beam	Constant		System	
2101‚å∂0	Close .NET¬†AppDomain	I-beam	Constant		System	
2400‚å∂Bs	Set Workspace Save Options	I-beam	Function		System	clear trace stop monitor flags breakpoints halt inspect monitor
2401‚å∂Bs	Expose Root Properties	I-beam	Function		System	oo dotting
2501‚å∂Bs	Discard incoming .NET thread on exit	I-beam	Function		System	
2501‚å∂0	Discard parked incoming .NET threads	I-beam	Constant		System	
2503‚å∂Js	Mark Thread as Uninterruptible	I-beam	Function		System	greenthreading launch run suspend suspension
2520‚å∂Bs	Use Separate Thread For .NET	I-beam	Function		System	
2701‚å∂Bs	Continue Autosave	I-beam	Function		System	)continue
3002‚å∂Bs	Disable Component Checksum Validation	I-beam	Function		System	dcf
{Cv}(3500‚å∂)Dv	Send Text Dv to RIDE-embedded Browser with caption Cv	I-beam	Function		System	html svg rendering cef remoteintegrateddevelopmentenvironment
3501‚å∂0	Connected to the RIDE	I-beam	Constant		System	remoteintegrateddevelopmentenvironment
3502‚å∂Yv	Manage RIDE Connections	I-beam	Function		System	remoteintegrateddevelopmentenvironment
4000‚å∂‚ç¨	Fork New Task	I-beam	Constant		System	aix multithreading parallel
4001‚å∂Dv	Change User	I-beam	Function		System	aix multithreading parallel
4002‚å∂‚ç¨	Reap Forked Tasks	I-beam	Constant		System	aix multithreading parallel
4007‚å∂‚ç¨	Signal Counts	I-beam	Constant		System	SIGHUP SIGINT SIGQUIT SIGTERM SIGWINCH
5176‚å∂0	List Loaded Files	I-beam	Constant		System	‚éïfix source text
5177‚å∂‚ç¨	List Loaded File Objects	I-beam	Constant		System	‚éïfix source text
5178‚å∂Yv	Remove Loaded File Object Info	I-beam	Function		System	‚éïfix source text
5179‚å∂Yv	Loaded File Object Info	I-beam	Function		System	‚éïfix source text
As(7162‚å∂)Dv	JSON Translate Name	I-beam	Function		Data Conversion	‚éïjson namemangling
8415‚å∂Nm	Singular Value Decomposition	I-beam	Function		Mathematical	‚åπ
50100‚å∂Js	Line Count	I-beam	Function		System	‚äÉ‚éïlc ‚Üë‚éïlc linecounter number state stack suspension
(819‚å∂819‚å∂‚ç®‚àò1)D	Normalise Case	Tacit	Monadic Function			lettercase caseless caseinsensitive normalize
C f{(‚çµ‚çµ ‚ç∫) ‚ç∫‚ç∫ (‚çµ‚çµ ‚çµ)}(819‚å∂819‚å∂‚ç®‚àò1) D	Caseless operation	Tacit	Dyadic Function	Monadic Operator		lettercase caseless caseinsensitive comparison lookup
‚äÇ‚ç§¬Ø1‚àò‚ÜëYv	Pad elements of vector of arrays Yv to equal shape	Tacit	Monadic Function		Structural	
(X{(‚äÇ‚çã‚çµ‚çµ,‚ç®‚ç≥‚â¢‚çµ)‚å∑‚çµ,‚ç∫‚ç∫}Jv)Y	Insert X after positions Jv in Y (‚â¢Jv)=‚â¢X	Dop	Monadic Function	Dyadic Operator	Structural	slotin
80=‚éïDR''	Is this Dyalog APL Unicode?	Constant			System	
82=‚éïDR''	Is this Dyalog APL Classic?	Constant			System	
{‚çµ:X ‚ãÑ Y}Bs	Ternary: if Bs then execute and return X else execute and return Y	Dfn	Monadic Function	Structure	Expression	conditionaloperator inlineiff ternaryiff ?:
X‚ä£‚ç£Bs‚ä¢Y	Ternary: if Bs then return X else return Y	Dfn	Monadic Function	Structure	Expression	conditionaloperator inlineiff ternaryiff ?:
As f{‚ç∫:‚ç∫‚ç∫ ‚çµ ‚ãÑ ‚çµ‚çµ ‚çµ}g Y	Ternary: if As then apply f to Y else apply g to Y1	Dop	Dyadic Function	Dyadic Operator	Function Application	conditionaloperator inlineiff ternaryiff ?:
y‚Üêdfns.Cholesky x	Decomposition of Hermitian positive-definite matrix	Dfn	Function			Choleskydecomposition
rslt‚Üê{x} (u dfns.Cut case) y	Cut operator	Dop		Dyadic Operator		Cut gameoflife GoL
{larg}(fn dfns.Depth k)rarg	Apply fn at depths k	Dop		Dyadic Operator		depth rank
z‚Üê{larg}(fn dfns.H)rarg	Quaternion arithmetic	Dop		Monadic Operator		Quaternion
distribution‚Üêaverage + standard_deviation √ó dfns.NormRand (shape)	Random numbers with normal distribution	Dfn	Function			
commit‚Üê(‚éïNS'') dfns.UndoRedo	Derive undo/redo function	Dop		Monadic Operator		undo redo
V‚Üê{rcols‚Üê1..} dfns.X M	Exact cover: Knuth's Algorithm X	Dfn	Function			exactcover AlgorithmX exactcover gameofsudoku N-Queens pentomino NQueens
rslt‚Üê{larg} I dfns._fk J fk_ K rarg	Simulation of "fork" syntax	Dop		Dyadic Operator		hook fork co-operator cooperator
rslt‚Üê(func dfns.acc) argt	Accumulating reduction	Dop		Monadic Operator		reduction
digs‚Üêalph dfns.adic numb	Bijective base-‚ç∫ numeration	Dfn	Function			k-adicnumbers shortlex bijectivenumeration unary kadicnumbers
val‚Üêlist dfns.alget key	Value for key ‚çµ from list ‚ç∫	Dfn	Function			associationlist dictionary look-uptable symboltable graph lists lookuptable
val list‚Üêlist dfns.alpop key	Value for key ‚çµ, and reduced list ‚ç∫	Dfn	Function			associationlist dictionary look-uptable symboltable graph lists lookuptable
list‚Üêlist dfns.alpush key val	List ‚ç∫ extended with key-value pair ‚çµ	Dfn	Function			associationlist dictionary look-uptable symboltable graph lists lookuptable
list‚Üêlist dfns.alset key val	List ‚ç∫ with key-value ‚çµ replacement	Dfn	Function			associationlist dictionary look-uptable symboltable graph lists lookuptable
rslt‚Üê(f dfns.alt g) mat	Alternant	Dop		Dyadic Operator		alternant determinant innerproduct SAX
{name}‚Üê{ref} dfns.ambiv namelist	Ambivalize traditional function	Dfn	Function			ambivalent tradfn
rslt‚Üê(f dfns.and g) arg	Sequential test	Dop		Dyadic Operator		lazyevaluation sequentialtest adjacentguard &&
alloc‚Üê{seats‚Üê435} dfns.apportion populations	Huntington-Hill apportionment	Dfn	Function			USHousepfRepresentatives apportionment assignment
enco‚Üêbase (dfns.ary) ratnum	‚ç∫-ary representation of rational ‚çµ	Dfn	Function			rationalnumber binary ternary IEEEFPprecision
vect‚Üê (fn dfns.ascan) vect	Associative vector scan	Dop		Monadic Operator		scanoperators
array‚Üê{ascan} (fn dfns.ascana) array	Associative higher rank scan	Dop		Monadic Operator		scanoperators
bmat‚Üêdfns.assign costs	Hungarian method cost assignment	Dfn	Function			assignment Hungarianmethod maximise optimise graph independentzeros
rslt‚Üê{‚ç∫‚Üê‚ä¢} (new dfns.at sel) old	Prefix-friendly @	Dop		Dyadic Operator		atoperator prefixagreement whereclause SigmaAPL semicolonseparator @
cmat‚Üê{attributes} dfns.attrib namelist	Function/operator attributes	Dfn	Function			attributes ‚éïAT ‚éïSIZE syntax name-clashproblem nameclashproblem
rslt‚Üê{larg)(op dfns.avl) rarg	Adelson-Velskii, Landis (AVL) trees	Dop		Monadic Operator		tree binarysearchtree typenotation expressiontransformation
bmat‚Üê{A CI} dfns.baby bmat	Manchester Small Scale Experimental Machine	Dfn	Function			SSEM firstcomputer assembler disassembler diversions bottom‚ä• Baby
z‚Üêl (fn dfns.bags) r	Multisets/bags	Dop		Monadic Operator		multiset bags FinnAPLIdiomList
coded‚Üêdfns.base64 plain	Base64 encoding and decoding as used in MIME	Dfn	Function			Base64encoding MIME
prob‚Üêcond dfns.bayes prior	Bayes' formula	Dfn	Function			Bayesformula
{tape}‚Üê{tape} dfns.bf toks	Brainfuck	Dfn	Function			Brainfuck turingcomplete lists hyperator 2-adicnumbers Turingtape tape 2adicnumbers
cvec‚Üê{larg} (fn dfns.big) rarg	Arithmetic on large integers	Dop		Monadic Operator		infiniteprecision factorial
p‚Üês dfns.birthday n	Probability of same birthday	Dfn	Function			birthday probability
cmat‚Üê{h v t‚Üê‚ç¨ ‚ç¨ 0} dfns.box text	Box the simple text array ‚çµ	Dfn	Function			border box box-drawingcharacters displayofarrays boxing boxdrawingcharacters
indx‚Üê(fun dfns.bsearch) range	Binary search	Dop		Monadic Operator		binarysearch
tvec‚Üê{larg} (fn dfns.bt) rarg	Balanced Ternary Arithmetic	Dop		Monadic Operator		balancedternary ternary Setuncomputer TERNAC BurroughsB1700
sref‚Üêdfns.cache ivec	Ref to space with initial cache	Dfn	Function			memoization cache persistentlocalvariable fibonaccinumber
calendar‚Üêdfns.cal date	Calendar	Dfn	Function			calendar winningLoto
rslt‚Üêi j k ¬∑¬∑¬∑ F dfns.case G case H ¬∑¬∑¬∑ arg	Select statement	Dop		Dyadic Operator		conditionaloperator selectoperator co-operator cooperator
rslt‚Üê{larg} (land dfns.cf rand) rarg	Ratio of operand timings	Dop		Dyadic Operator		performance timing expressioncomparison hyperator
nvec‚Üê{tolerance‚Üê‚éïCT} dfns.cfract numb	Continued fraction approx of real ‚çµ	Dfn	Function			continuedfraction goldenmean fibonaccinumber
sum‚Üê{digs‚Üê6} dfns.chksum array	Simple ‚ç∫-digit checksum	Dfn	Function			checksum hashing
mat‚Üêm dfns.cmat n	‚ç∫-combination matrix of ‚ç≥‚çµ	Dfn	Function			combination expressiontransformation Pascal'striangle fibonaccinumber Pascalstriangle
table‚Üê{opts‚Üê‚ç¨} dfns.cmpx exprs	Approx expression timings	Dfn	Function			performance timing expressioncomparison histogram ‚éïML
cmat‚Üê{gap‚Üê1 {max‚Üê‚éïPW}} dfns.cols items	Multi-column display	Dfn	Function			
sumvec‚Üê{base‚Üê10} dfns.colsum cols	Sum of (default decimal) columns	Dfn	Function			addition sum columnsum infiniteprecision
TimeStamp‚ÜêTieNo dfns.compidn CompNo	Component timestamp in IDN format	Dfn	Function			
rslt‚Üê(if dfns.cond then cond else) arg	Proposition:consequence:alternative	Dop		Dyadic Operator		conditionaloperator Helsing√∏r hyperator co-operator cooperator
{mbrot‚Üê0}(cxfn dfns.cxdraw) zoom	Complex function drawing	Dop		Monadic Operator		complexnumbers drawing unitcircle fixpoint Mandelbrotset dual under
rslt‚Üê{blank} dfns.dab argt	Drop All Blanks	Dfn	Function			blanks compression
dates‚Üê{g‚Üê¬Ø53799} dfns.date daynos	‚éïTS format from day number	Dfn	Function			Gregoriancalendar 1752 calendar
daynos‚Üê{g‚Üê17520902} dfns.days dates	Day number from ‚éïTS format	Dfn	Function			date 1752 InternationalDayNumber
rslt‚Üê{blank} dfns.deb argt	Drop Ending Blanks	Dfn	Function			blanks compression
nums‚Üê{signed‚Üê0} dfns.dec cvex	Decimal from hexadecimal	Dfn	Function			hexadecimal decimalfromhex
defns‚Üê{names‚Üê0 {list‚Üê0 {space‚Üê‚éïTHIS}}} dfns.defs namelist	Extended ]defs	Dfn	Function			defs display latebinding ‚éïNC ]defs
num‚Üêdfns.det nmat	Determinant of square matrix	Dfn	Function			determinant Gaussianmethod Hilbertmatrix
tree‚Üêgraph dfns.dfspan from	Depth-first spanning tree: graph ‚ç∫ from vertex ‚çµ	Dfn	Function			depth-firstsearch spanningtree graph abstraction depthfirstsearch
tree‚Üê{slant‚Üê1}(fn dfns.dft) spread	Display of function tree	Dop		Monadic Operator		tree derivedfunction combinator hook fork box-drawingcharacters boxdrawingcharacters
cvec‚Üê dfns.dice ?6 6	Interpret a throw of dice	Dfn	Function			guard diversions
rslt ‚Üêdfns.din ''	Evaluation of multi-line D-expression	Dfn	Function			definefunction sessioninput ‚éïSE REPL
cmat‚Üê{dec‚Üê0 {cen‚Üê0}} dfns.disp array	Boxed sketch of nested array	Dfn	Function			displayofarrays box boxing Kumquat box-drawingcharacters nestedarray boxdrawingcharacters
cmat‚Üêdfns.display array	Boxed display of array	Dfn	Function			displayofarrays box boxing box-drawingcharacters boxdrawingcharacters
cmat‚Üêdfns.displayr array	Boxed display of array with axis lengths and subarray depths	Dfn	Function			displayofarrays box boxing box-drawingcharacters boxdrawingcharacters
cmat‚Üêdfns.displays array	Boxed display of array with axis lengths	Dfn	Function			displayofarrays box boxing box-drawingcharacters boxdrawingcharacters
d‚ÜêL dfns.dist R	Levenshtein distance	Dfn	Function			stringcomparison fuzzy
rslt‚Üê{blank} dfns.dlb argt	Drop Leading Blanks	Dfn	Function			blanks compression
rslt‚Üê{blank} dfns.dmb argt	Drop Multiple Blanks	Dfn	Function			blanks compression
rslt‚Üê(dewy dfns.do) rarg	Apply no-result function "en passant"	Dop		Monadic Operator		no-result is-yfunction do-yfunction enpassant noresult isyfunction doyfunction
crep‚Üê{dot‚Üê'¬∑'} dfns.dots crep	Show dfn with "white dots"	Dfn	Function			whitedots functionsformatting name-clashproblem stuff nameclashproblem
cmat‚Üê{marker‚Üê'*'} dfns.draw cmat	Draw over '*'s	Dfn	Function			box box-drawingcharacters diversions boxdrawingcharacters
nvec‚Üê{axis} dfns.dscan nvec	Divide scan	Dfn	Function			scanoperators
cmat‚Üê{topbar‚Üê1} dfns.dsp array	Reduced version of disp	Dfn	Function			boxing displayofarrays tape
rslt‚Üê{blank} dfns.dtb argt	Drop Trailing Blanks	Dfn	Function			blanks compression
rslt‚Üê{blank} dfns.dxb argt	Drop eXtraneous Blanks	Dfn	Function			blanks compression
rslt‚Üê(‚ç∫‚ç∫ dfns.each) array	Fast each for pure operand function	Dop		Monadic Operator		each purefunction
yyyymmdd‚Üêdfns.easter year	Easter Sunday in year ‚çµ	Dfn	Function			date CouncilofNicaea canonpaschalis pervasivefunction histogram
nvec‚ÜêP dfns.efract Q	Egyptian fractions	Dfn	Function			Egyptianfraction
nested‚Üê{left} dfns.eis right	Enclose-if-simple / link	Dfn	Function			link enclose-if-simple encloseifsimple
rslt‚Üêcond (‚ç∫‚ç∫ dfns.else ‚çµ‚çµ) argt	Condition f else g ..	Dop		Dyadic Operator		conditionaloperator
list‚Üê{leaves} dfns.enlist array	List ‚ç∫-leaves of nested array	Dfn	Function			enlist nestedarray
dfns.esh digits	Shell for Eide-number sums	Dfn	Function			Eidenumbers rationalnumber balancedternary hexadecimal shell REPL
cvec‚Üêdfns.exit code	Return to calling environment	Dfn	Function			
names‚Üê{expr‚Üê0} dfns.externs dfn	External references from dfn ‚çµ	Dfn	Function			externalreferences
v83‚Üêdfns.f32 nums	Conversion to 32-bit floats as ‚éïDR 83	Dfn	Function			32-bitfloatingpoint 32bitfloatingpoint
num‚Üêdfns.factorial num	Tail recursive factorial	Dfn	Function			tailrecursion accumulator factorial
nvec‚Üêdfns.factors numb	Prime factors of ‚çµ	Dfn	Function			primenumber
nvec‚Üêdfns.fibonacci num	Tail-recursive Fibonacci	Dfn	Function			tailrecursion accumulator fibonaccinumber goldenmean continuedfraction
rslt‚Üê(fun dfns.file) fname	Apply function to native file tie	Dop		Monadic Operator		nativefile railwaydiagram
cnos‚Üêfile dfns.filefind string	Find 'string' ‚çµ in component file ‚ç∫	Dfn	Function			find componentfile
cmat‚Üê{space‚Üê‚éïTHIS} dfns.find string	Lines containing string(s) ‚çµ	Dfn	Function			name-clashproblem stringsearch nameclashproblem
{name}‚Üêdfns.fix rep	Fix function/operator rep	Dfn	Function			fixfunction
rslt‚Üê{larg} I dfns.fk J fk K rarg	Slower but elegant simulation of "fork" syntax	Dop		Dyadic Operator		hook fork co-operator cooperator
rslt ‚Üê {larg} I ##._fk J fk_ K rarg	Simulation of "fork" syntax	Dop		Dyadic Operator		hook fork co-operator cooperator
refs‚Üê(fn dfns.fnarray) fns	Array of functions	Dop		Monadic Operator		functionarray functionarray
cmat‚Üê{excl} dfns.fndiff (fna fnb)	Defined function differences	Dfn	Function			functionsdifference comparefunctions
cvecs‚Üêdfns.fnrefs func	External refs from tradfn ‚çµ	Dfn	Function			functionreferences cross-reference crossreference
{fns}‚Üê{space‚Üê‚éïTHIS} dfns.fnrepl (from to)	Function string replacement	Dfn	Function			stringreplacement
rslt‚Üêival (func dfns.foldl) vals	Fold (reduce) from the left	Dop		Monadic Operator		reduction fold typenotation
rslt‚Üêi j k¬∑¬∑¬∑ F dfns.for G for H¬∑¬∑¬∑ arg	Multiple selection of function list	Dop		Dyadic Operator		conditionaloperator functionselection functionarray co-operator cooperator
rslt‚Üêindx dfns.from array	Select (1‚Üì‚ç¥‚çµ)-cells from array ‚çµ	Dfn	Function			arrayindexing
inv‚Üê{vals} dfns.gauss_jordan mat	Gauss-Jordan elimination	Dfn	Function			Gauss-Jordan Hilbertmatrix IEEEFPprecision purefunction GaussJordan
num‚Üênum dfns.gcd num	Greatest Common Divisor	Dfn	Function			greatestcommondivisor leastcommonmultiple tailrecursion
lines‚Üê{tabs‚Üê0 {ctype‚Üê80}} dfns.getfile filename	Text file ‚çµ as nested vector	Dfn	Function			nativefile textfile Unicode
graph‚Üêgraph dfns.gperm perm	‚çµ-permutation of vertices of graph ‚ç∫	Dfn	Function			unweightedgraph
cvex‚Üê {width} dfns.hex nums	Hexadecimal from decimal	Dfn	Function			hexadecimal decimalfromhex
{cmds‚Üê''} dfns.hexdump file	Hex dump of native file	Dfn	Function			hexadecimal macro nativefile destructiveassignment endian offsiderule
hex‚Üêdfns.hexf num	IEEE 754/854 binary floating point	Dfn	Function			hexadecimal endian DecimalFloatingPoint 128-bitFloatingPoint 128bitFloatingPoint
segs‚Üêtag dfns.htx html	Extract html segments	Dfn	Function			XML XMLtag Kumquat
paths‚Üêitem dfns.in array	Locations of item ‚ç∫ in array ‚çµ	Dfn	Function			find index path pick location
indx‚Üênotespace dfns.index class	‚çµ-index of notes in space ‚ç∫	Dfn	Function			index
graph‚Üêgraph dfns.inslink (from to)	Insert edge ‚çµ in graph ‚ç∫	Dfn	Function			graph
graph‚Üêgraph dfns.insnode vertex	Insert vertex ‚çµ in graph ‚ç∫	Dfn	Function			graph
i‚Üêbits dfns.int u	Signed from unsigned integers	Dfn	Function			typeconversion unsigned integer pervasivefunction nativefile cast
rslt‚Üê{guess‚Üê1+‚éïCT} (fn dfns.invr) argt	Inverse of real-valued function	Dop		Monadic Operator		functioninverse inverse Newton-Raphson absolutezero NewtonRaphson
rslt‚Üê{array} dfns.iotag array	Generalized iota	Dfn	Function			generialisediota generalised‚ç≥ Unicode
bool‚Üêdfns.isdfn name	Test for D function	Dfn	Function			testforD-function name-clashproblem testforDfunction nameclashproblem
stack‚Üê{repl‚Üê0} dfns.joy program	Subset of the Joy language	Dfn	Function			lists concatenative applicative Ackermann'sfunction Ackermannsfunction Metacircular
rslt‚Üê{dirn‚Üê¬Ø1} dfns.just chars	Justify text array	Dfn	Function			justifytext aligntext
lvec‚Üê{cols} dfns.justify lvec	Justify line-vector to ‚ç∫ columns	Dfn	Function			justifytext aligntext linevector
seq‚Üêdfns.k6174 nnnn	Kaprekar's operation	Dfn	Function			sequence 6174 Kaprekar'soperation Kaprekarsoperation
rslt‚Üê{c‚Üê1} dfns.kball p	Relationship between point and k-ball	Dfn	Function			K-ball sphere hypersphere Kball
rslt‚Üêb (f dfns.kcell) p	Relationship between point and k-cell	Dop		Monadic Operator		K-cell boundary hypercube Kcell
kinds‚Üêdfns.kind namelist	Parse-category of name(s) ‚çµ	Dfn	Function			kind nameclass category namecolouring hybrid
kmap‚Üê{xk‚Üê(‚äÇ,‚äÇ‚àòkind)‚éïNL-‚ç≥10} dfns.kk fnop	Kind Koloring of d-fnop named ‚çµ	Dfn	Function			namecolouring parsing kind Bunda-Gerthparser polymorphism selfie BundaGerthparser
area‚Üêdim dfns.ksphere radius	Hypersphere surface area	Dfn	Function			sphere hypersphere Newton-Raphson localmaximum K-sphere manifolds NewtonRaphson Ksphere
nmats‚Üê{sreq‚Üê1} dfns.kt (rows cols)	Knight's Tour Chess Problem	Dfn	Function			chesspuzzle knight'stour knightstour graph treesearching diversions torus
chars‚Üêdfns.lcase chars	Lower-casification	Dfn	Function			uppercase lowercase upperorlowercase caseinsensitive
precedes‚Üêthis dfns.le that	Total array ordering (TAO) comparison	Dfn	Function			sort quicksort Totalarrayordering order(ofarrays) comparearrays
bmat‚Üêdfns.life bmat	John Conway's "Game of Life"	Dfn	Function			gameoflife cellularautomaton glider diversions Asteroids YouTube
rslt‚Üê(fun dfns.limit) arg	Function power limit (fixpoint)	Dop		Monadic Operator		functionpower palindrome arithmetic-geometricmean goldenmean arithmeticgeometricmean
rslt‚Üê{eval‚Üê1} dfns.lisp expr	Evaluator for a subset of Scheme	Dfn	Function			Lisp Scheme closure Metacircular SICP lambdaexpression evaluator
list‚Üêdfns.list vect	List from vector ‚çµ	Dfn	Function			accumulator lambdaexpression min(workspace) parsing lists cons
rslt‚Üê{larg} {''} dfns.lof F lof G lof H ... rarg	List of functions	Dop		Dyadic Operator		conditionaloperator listoffunctions co-operator cooperator
rslt‚Üêlarg (selector dfns.logic) rarg	Logical function array	Dop		Monadic Operator		conditionaloperator booleanfunctions truthtables
rslt‚Üêpvec dfns.lsys axiom	Lindenmayer L-system expansion	Dfn	Function			L-Systems fractal rewriting termrewriting Turtlegraphics LSystems
nvec‚Üê{sepr} dfns.ltov lvec	Lines to nested vector	Dfn	Function			linevector
rslt‚Üêinit (acc dfns.ltrav) list	List traversal	Dop		Monadic Operator		accumulator lambdaexpression minworkspace parsing lists cons
m‚Üêdfns.m91 n	McCarthy's M91 function	Dfn	Function			91
bfobj‚Üê(dfns.mac) src	Simple macro processor for bf	Dfn	Function			Brainfuck macro continuation-passingstyle continuationpassingstyle
hits‚Üêpatn {w‚Üê'*'} dfns.match array	Find with wildcards	Dfn	Function			
cols‚Üê{base‚Üê1} dfns.mayan numb	Mayan numbers	Dfn	Function			numbersystem stela calendar date astronomy vigesimalnumbersystem abacus
cmat‚Üê {‚éïRL‚Üê2‚äÉ‚éïAI} dfns.maze shape	Kidz maze	Dfn	Function			diversions indexedassignment maze
num‚Üêdfns.mean nvec	Arithmetic mean	Dfn	Function			localnames standarddeviation APL'88 APL88 1988
rslt‚Üê{larg} (‚ç∫‚ç∫ dfns.memo cache) rarg	Function memoization	Dop		Dyadic Operator		memoization cache persistentlocalvariable fibonaccinumber
dfns.mmind ‚éïA[?4‚ç¥6]	Mastermind or "cows and bulls"	Dfn	Function			Mastermind gameofcowsandbulls diversions REPL
ref‚Üêdfns.mns defn	Make Namespace from association list ‚çµ	Dfn	Function			namespace associationlist
code‚Üêdfns.morse text	Conversion to/from Morse code	Dfn	Function			Morsecode
{files}‚Üê{type‚Üê''} dfns.mp3 dirs	Create playlist(s) for music directories	Dfn	Function			MP3(mediaplayer) playlist music mediaplayer(MP3) diversions
nvec‚Üê{axis} dfns.mscan nvec	Minus scan	Dfn	Function			scanoperators
cmat‚Üêdfns.mtrim cmat	Trim off trailing blank cols	Dfn	Function			blanks trailingblanks
cvec‚Üêlarg (fn dfns.nats) rarg	Natural number arithmetic	Dop		Monadic Operator		naturalnumber infiniteprecision expressiontransformation
cvec‚Üê{path‚Üê‚éïPATH} dfns.ncpath names	‚éïpath-aware ‚éïNC	Dfn	Function			nameclassification extended‚éïNC
nvec‚Üêp dfns.nicediv q	‚çµ similar integers with sum ‚ç∫	Dfn	Function			histogram
n‚Üêdfns.nlines simple	Number of display lines for simple array	Dfn	Function			defaultdisplay linesofoutput
saved‚Üê{seed} dfns.nspack ref	Share arrays across space tree	Dfn	Function			packing compression enlist
rslt‚Üêpick dfns.of F of G of H ... arg	Pick'th fn applied to arg	Dop		Dyadic Operator		functionarray conditionaloperator co-operator cooperator
rslt‚Üê(f dfns.or g) arg	Sequential test	Dop		Dyadic Operator		lazyevaluation sequentialtest adjacentguard &&
num‚Üêdfns.osc num	Oscillate - probably returns 1	Dfn	Function			Oscillate cashprize wondrousnumber G√∂del,Escher,Bach Goedel,Escher,Bach G√∂delEscherBach GodelEscherBach GoedelEscherBach engineer'sproof engineersproof
array‚Üêdfns.pack array	Saves WS by sharing subarrays	Dfn	Function			compression arraysharing
rslt‚Üê{cmp‚Üê1} dfns.pack4 image	Quad-tree packing	Dfn	Function			packing compression quad-tree quadtree
cmp‚Üê{cmp‚Üê1} dfns.packB exp	Pack a simple array	Dfn	Function			packing compression
cmp‚Üê{cmp‚Üê1} dfns.packD data	Pack char array to boolean vector	Dfn	Function			packing compression encryption
cmp‚Üê{cmp‚Üê1} dfns.packH exp	Huffman packing	Dfn	Function			packing compression Huffmancode
cmp‚Üê{cmp‚Üê1} dfns.packN exp	Null packing	Dfn	Function			packing compression stuff
cmp‚Üê{cmp‚Üê1} dfns.packQ data	Assorted uniQues packer	Dfn	Function			packing compression
cmp‚Üê{cmp‚Üê1} dfns.packR exp	Run-Length Encoding (RLE packing)	Dfn	Function			packing compression run-lengthencoding runlengthencoding
cmp‚Üê{cmp‚Üê1} dfns.packS exp	Shannon-Fano packing	Dfn	Function			packing compression Shannon-Fano ShannonFano
cmp‚Üê{cmp‚Üê1} dfns.packT exp	Simple text vector packager	Dfn	Function			packing compression
cmp‚Üê{cmp‚Üê1} dfns.packU exp	Unique packing	Dfn	Function			packing compression
cmp‚Üê{cmp‚Üê1} dfns.packX txt	TeXt Packer	Dfn	Function			packing compression
cmp‚Üê{cmp‚Üê12} dfns.packZ exp	Abraham Lempel, Jacob Ziv, Terry Welch	Dfn	Function			packing compression suffixtrie Lempel-Ziv-Welch LempelZivWelch
tree‚Üê {trace‚Üê0} defn dfns.parse expr	Bunda-Gerth parse of expression ‚çµ	Dfn	Function			parsing currying Bunda-Gerthparser bindingstrength BIDMAS BundaGerthparser
vvec‚Üêgraph dfns.path (fm to)	Shortest path between ‚çµ in graph ‚ç∫	Dfn	Function			unweightedgraph breadth-firstsearch breadthfirstsearch
p‚Üêdfns.pco ‚çµ	‚çµ-th prime	Dfn	Monadic Function			primenumber J
b‚Üê0 dfns.pco ‚çµ	1 iff ‚çµ is not prime	Dfn	Dyadic Function			primenumber J nonprime? non-prime? composite?
b‚Üê1 dfns.pco ‚çµ	1 iff ‚çµ is prime	Dfn	Dyadic Function			primenumber J prime?
n‚Üê¬Ø1 dfns.pco ‚çµ	number of primes less than ‚çµ	Dfn	Dyadic Function			primenumber J
v‚Üê2 dfns.pco ‚çµ	prime factors and exponents	Dfn	Dyadic Function			primenumber J
v‚Üê3 dfns.pco ‚çµ	prime factorization of ‚çµ	Dfn	Dyadic Function			primenumber J
p‚Üê4 dfns.pco ‚çµ	next prime larger than ‚çµ	Dfn	Dyadic Function			primenumber J
p‚Üê¬Ø4 dfns.pco ‚çµ	next prime smaller than ‚çµ	Dfn	Dyadic Function			primenumber J
b‚Üê10 dfns.pco ‚çµ	m+b/‚ç≥‚ç¥b are all the primes between m and n, where ‚çµ‚â°m,n	Dfn	Dyadic Function			primenumber J
rslt‚Üê{lft} (fun dfns.perv) rgt	Scalar pervasion	Dop		Monadic Operator		scalar-wise pervasivefunction scalarwise
pnum‚Üê{fmt‚Üê1} (dfns.phinary) nums	Phinary representation of numbers ‚çµ	Dfn	Function			goldenmean goldenrectangle phinarynumber
mat‚Üêdfns.pmat n	Permutation matrix of ‚ç≥‚çµ	Dfn	Function			permutationmatrix
to‚Üê{dirn‚Üê1} dfns.polar fm	Polar from/to cartesian coordinates	Dfn	Function			polarcoordinates cartesiancoordinates coordinates
rslt‚Üêcount (fun dfns.pow) argt	Explicit function power	Dop		Monadic Operator		poweroperator functionpower fibonaccinumber
rslt‚Üêpart (redn dfns.pred) rarg	Partitioned reduction	Dop		Monadic Operator		partionedreduction
rslt‚Üê{larg} (func dfns.profile subs) rarg	Performance profiling	Dop		Dyadic Operator		performance timing profiling monitor ‚éïprofile
{size}‚Üê{term‚Üê2} dfns.putfile (fid rows)	Put rows to text-file	Dfn	Function			nativefile textfile Unicode
cmats‚Üêdfns.queens N	The N-Queens Problem	Dfn	Function			diversions chesspuzzle treesearching purefunction N-Queens YouTube NQueens
soln‚Üêdfns.quzzle grid	A hard, simple problem	Dfn	Function			diversions puzzle
indx‚Üêbrks dfns.range nums	Numeric range classification	Dfn	Function			
rats‚Üê{tolerance‚Üê‚éïCT} dfns.rational nums	Rational approximation to real ‚çµ	Dfn	Function			rationalnumber Pi numberoftheBeast
rslt‚Üê{larg} (fn dfns.rats) rarg	Rational arithmetic	Dop		Monadic Operator		rationalnumber primenumber
sum‚Üê{larg} (digs dfns.ratsum) rarg	‚ç∫‚ç∫-rational sum of ‚ç∫ and ‚çµ	Dop		Monadic Operator		Eidenumbers rationalnumber balancedternary skewedfour
rslt‚Üêival (accm dfns.ravt subs) tree	Trav: parent-first, ravt: parent last	Dop		Dyadic Operator		tree currying typenotation fibonaccinumber N-Queens NQueens
rslt‚Üê{larg) (op dfns.redblack) rarg	Red-black trees	Dop		Monadic Operator		tree red-blacktrees binarysearchtree enlist redblacktrees
match‚Üêthis dfns.refmatch that	Space reference match	Dfn	Function			comparenamespaces namespacecomparison
crep‚Üê{tabs csep‚Üê4} dfns.refmt crep	Reformat dfn/op representation	Dfn	Function			functionsformatting
refs‚Üêdfns.refpath ref	Refs path from root to ‚çµ	Dfn	Function			parentspace ancestorspace namespacereferences
rvec‚Üê{exclude‚Üê‚ç¨} dfns.refs ref	Vector of sub-space references	Dfn	Function			refs namespacereferences ‚éïWX root-space rootspace
ref‚Üêdfns.refws wsid	Ref to saved ws ‚çµ	Dfn	Function			workspacereferences externalworkspace workspace remoteexecution
graph‚Üêgraph dfns.remlink (from to)	Remove edge ‚çµ from graph ‚ç∫	Dfn	Function			unweightedgraph
graph‚Üêgraph dfns.remnode vertex	Graph ‚ç∫ with vertex ‚çµ removed	Dfn	Function			unweightedgraph
enc‚Üêdfns.rep name	Encapsulate function/operator	Dfn	Function			functionarray encapsulatefunction
{prompt‚Üê4‚Üë''} (eval dfns.repl) stop	Read-eval-print loop	Dop		Monadic Operator		loop shell error-guard,dynamic REPL shell errorguard,dynamic
nvec‚Üêdfns.ripple nvec	Perfect Ripple Shuffle	Dfn	Function			shuffle grade carddeck diversions riffleshuffle
line‚Üêdfns.rmcm line	APL source with comments removed	Dfn	Function			functionsformatting commentremoval one-liner oneliner
res‚Üê{sin} (fvn dfns.roman) dex	Roman numeral arithmetic	Dop		Monadic Operator		romannumerals numbersystem diversions
num‚Üê{num‚Üê2} dfns.root num	‚ç∫'th root	Dfn	Function			defaultleftargument ‚ç∫throot
nvec‚Üêdfns.roots triple	Real roots of quadratic	Dfn	Function			realrootsofquadratic complexnumbers
rslt‚Üê(fun dfns.rows) {array}	Operand function applied to argument rows	Dop		Monadic Operator		vector-wise vectorwise
rounds‚Üêdfns.rr players	Round-robin tournament	Dfn	Function			Round-robintournament combination Roundrobintournament
new‚Üê{larg} (sel dfns.sam mod) old	Select and modify	Dop		Dyadic Operator		selectandmodify destructiveassignment purefunction
rslt‚Üê{left} (fun dfns.saw) right	Apply function Simple-Array-Wise	Dop		Monadic Operator		simple-array-wise simplearraywise
rslt‚Üê{larg} (op dfns.sbst) rarg	Simple Binary Search Trees	Dop		Monadic Operator		tree binarysearchtree typenotation enlist
C‚Üê{trace‚Üê0} dfns.scc G	Strongly connected components of directed graph ‚çµ	Dfn	Function			Stronglyconnectedcomponents graph depth-firstsearch DAG depthfirstsearch
vvec‚Üêgraph dfns.search from	Breadth-first search of graph ‚ç∫	Dfn	Function			unweightedgraph breadth-firstsearch breadthfirstsearch
vecs‚Üêseps dfns.segs vec	‚ç∫-separated segments of vector ‚çµ	Dfn	Function			words split text partition
rslt‚Üêindx dfns.select avec	‚ç∫-selection of items from vector ‚çµ	Dfn	Function			indexedassignment destructiveassignment purefunction
entropy‚Üêdfns.shannon string	Shannon entropy of message ‚çµ	Dfn	Function			Entropy informationtheory
nvec‚Üêdfns.sieve nvec	Sieve of Eratosthenes	Dfn	Function			primenumber sieve
tree‚Üêgraph dfns.span fm	Breadth-first span tree for graph ‚ç∫ from vertex ‚çµ	Dfn	Function			unweightedgraph spanningtree breadth-firstsearch breadthfirstsearch
rslt‚Üê{larg} (op dfns.splay) rarg	Splay trees	Dop		Monadic Operator		tree binarysearchtree enlist
cvec‚Üêdfns.squeeze cvec	Compress multiple blanks	Dfn	Function			compression linevector
cvec‚Üêdfns.ss (srce from into)	Approx alternative to xutils' ss	Dfn	Function			ssxutils stringreplacement substitution
cmat‚Üêdfns.ssmat (cmat from into)	Matrix search/replace	Dfn	Function			ssxutils stringreplacement substitution
cvec‚Üê{prim supp} dfns.ssword (srce from into)	Approx alternative to xutils ss	Dfn	Function			ssxutils stringreplacement substitution
nvec‚Üê{denoms‚Üê1 5 6 10 26 39 43} dfns.stamps value	Postage stamps for ‚çµ	Dfn	Function			postagestamps graph balancedternary
dvec‚Üêdfns.stdists tree	Spanning-tree path lengths	Dfn	Function			graph spanningtree path
vvec‚Üêtree dfns.stpath to	Path through spanning tree ‚ç∫ to vertex ‚çµ	Dfn	Function			graph spanningtree path
pvec‚Üêdfns.stpaths tree	Spanning tree paths	Dfn	Function			graph spanningtree path
array‚Üê(from repl) dfns.subs array	Vector substitution	Dfn	Function			stringreplacement substitution
yes‚Üêlarg dfns.subvec rarg	Is ‚ç∫ a subvector of ‚çµ?	Dfn	Function			subvector? subset?
svec‚Üê{shape‚Üê‚ç¨‚ç¥(‚ç¥‚çµ)*√∑2} dfns.sudoku prob	Solution vector for Sudoku problem ‚çµ	Dfn	Function			diversions gameofsudoku K YouTube
rslt‚Üê{larg} (func dfns.tc) rarg	Trace of function application	Dop		Monadic Operator		trace monitor debugging
{ok}‚Üê{opts‚Üê'q'} dfns.test script	Run test script: no news => good news	Dfn	Function			qualityassurance unittesting autoformat QA testing
cmat‚Üêdfns.tfmt tree	Char matrix from tree(s)	Dfn	Function			treesformatting tree
{rslt}‚Üê{larg} (fun dfns.time) rarg	Function application time	Dop		Monadic Operator		performance monitor timing
cvec‚Üê{time‚Üê‚éïTS} dfns.timestamp cvec	Time-stamped message	Dfn	Function			time date
tree‚Üêdfns.tnest (depth leaves)	Array from TreeView style tree	Dfn	Function			tree treesformatting
nvec‚Üêfrom dfns.to unto	Sequence ‚ç∫ .. ‚çµ	Dfn	Function			sequence stepping
cvecs‚Üê{nv‚Üê0} dfns.tokens cvec	Lex of APL src line	Dfn	Function			parsing lexicalscan
vec‚Üê(fun dfns.traj) arg	Function limit 'trajectory'	Dop		Monadic Operator		trajectory debugging Newton-Raphson sequence NewtonRaphson
rslt‚Üêival (accm dfns.trav subs) tree	Generic depth-first tree traversal	Dop		Dyadic Operator		tree currying typenotation fibonaccinumber N-Queens NQueens
cvec‚Üê{maxcols‚Üê‚éïPW} dfns.tree space	Display of namespace tree	Dfn	Function			workspace name-clashproblem nameclashproblem
{lines}‚Üê{defs‚Üêdefault} dfns.turtle cmds	Flying-turtle graphics	Dfn	Function			Turtlegraphics L-Systems fractal palindrome Flyingturtle polyhedron LSystems
(depth leaves)‚Üêdfns.tview tree	TreeView style from nested array	Dfn	Function			tree
rslt‚Üêcode dfns.type array	Widen ‚çµ to type ‚ç∫	Dfn	Function			dataconversion type ‚éïDR
chars‚Üêdfns.ucase chars	Upper-casification	Dfn	Function			uppercase lowercase upperorlowercase caseinsensitive
expr‚Üêvars dfns.unify expr expr ¬∑¬∑¬∑	Unification of expressions	Dfn	Function			unification parsing polymorphism
rslt‚Üê(func dfns.until cond) argt	Conditional function power	Dop		Dyadic Operator		conditionaloperator
cvec‚Üê dfns.unwrap lvec	Replace [LF] with blanks	Dfn	Function			text wordswrapping linevector
sref‚Üê{from‚Üê‚éïTHIS} dfns.up gens	Reference to ancestor space	Dfn	Function			parentspace ancestorspace namespacereferences
cvec‚Üêdfns.utf8get fid	Char vector from UTF-8 file ‚çµ	Dfn	Function			UTF-8 encoding Unicode UTF8
{size}‚Üêcvec dfns.utf8put fid	Char vector ‚ç∫ to UTF-8 file ‚çµ	Dfn	Function			UTF-8 encoding Unicode UTF8
rslt‚Üê{larg} {''} dfns.vof F vof G vof ¬∑¬∑¬∑ rarg	Vector of functions	Dop		Dyadic Operator		functionarray vectoroffunctions fork co-operator cooperator
caps‚Üê{ack ign‚Üê'' ''} dfns.von chars	Capitalise first letters of names	Dfn	Function			diversions capitalisation
lvec‚Üê{sepr} dfns.vtol nvec	Nested vector to lines	Dfn	Function			linevector
cvec‚Üêdfns.vtrim cvec	Remove trailing blanks	Dfn	Function			blanks compression
rslt‚Üê(fn dfns.vwise) ref	Variable-wise: apply ‚ç∫‚ç∫ to each var in space ‚çµ	Dop		Monadic Operator		variable-wise variablewise
cvec‚Üêwgraph dfns.wcost path	Cost vector for path ‚çµ through weighted graph ‚ç∫	Dfn	Function			weightedgraph costvector
rslt‚Üê(func dfns.while cond) argt	Conditional function power	Dop		Dyadic Operator		conditionaloperator
tree‚Üêwug dfns.wmst root	Minimum Spanning Tree for weighted graph ‚ç∫	Dfn	Function			weightedgraph spanningtree mininumspanningtree
cvecs‚Üê{prim supp} dfns.words cvec	Source vector split into words	Dfn	Function			text
path‚Üêwgraph dfns.wpath (from to)	Quickest path from/to ‚çµ in weighted graph ‚ç∫	Dfn	Function			weightedgraph path destructiveassignment indexedassignment
lvec‚Üê {cols‚Üê‚éïPW} dfns.wrap cvec	Wrap word vector at ‚ç∫ columns	Dfn	Function			words text linevector transitiveclosure
note‚Üê{new‚Üê‚éïPW {old‚Üê‚éïPW}} dfns.wrapnote note	Wrap text paras in note vect	Dfn	Function			words text linevector box-drawingcharacters boxdrawingcharacters
{excl‚Üê'‚çµ'} dfns.wsdiff (wsa wsb)	Workspace differences	Dfn	Function			compareworkspaces workspace name-clashproblem nameclashproblem
{protected‚Üê0} dfns.wsmerge wsid	Merge saved ws into current active ws	Dfn	Function			workspace workspacemerge
tree‚Üêwgraph dfns.wspan from	Spanning tree for weighted graph ‚ç∫ from ‚çµ	Dfn	Function			weightedgraph spanningtree
bytes‚Üêdfns.wsreq expr	WS required to execute expression ‚çµ	Dfn	Function			performance monitor fudgefactor calibration
digits‚Üêdigits dfns.xpower number	Fast multi-digit power using FFT	Dfn	Function			FastFourierTransform
refs‚Üêdfns.xrefs array	Extract refs vector from array ‚çµ	Dfn	Function			namespacereferences
cvec‚Üê{tabstops‚Üê8} dfns.xtabs cvec	Expand/compress HT chars	Dfn	Function			tabexpansion horizontaltabs adjacent1s flipflopRS
z‚Üêx dfns.xtimes y	Fast multi-digit product using FFT	Dfn	Function			FastFourierTransform convolution polynomial
{0::0‚ãÑ1‚ä£8‚å∂‚ç®‚çµ}	Validate inverted table	Dfn	Monadic Function		Array Properties	
X f{(‚çµ‚çµ ‚ç∫)‚ç∫‚ç∫(‚çµ‚çµ ‚çµ)}g Y	Over: preprocess (g) arguments before applying main function (f)	Dop	Dyadic Functtion	Dyadic Operator	Function Application	circlediaeresis on ‚ç•
X f{‚ç∫‚Üê‚ä¢ ‚ãÑ ‚ç∫‚ç∫‚ç£¬Ø1‚ä¢(‚çµ‚çµ ‚ç∫)‚ç∫‚ç∫(‚çµ‚çµ ‚çµ)}g Y	Under: preprocess (g) arguments before applying main function (f), then undo preprocessing	Dop	Function	Dyadic Operator	Function Application	deldiaeresis computationalunder dual while ‚ç¢
X f{‚ç∫‚Üê{‚çµ ‚ãÑ ‚çµ‚çµ} ‚ãÑ w‚Üê‚çµ ‚ãÑ ((‚çµ‚çµ)w)‚Üê(‚çµ‚çµ ‚ç∫)‚ç∫‚ç∫(‚çµ‚çµ ‚çµ) ‚ãÑ w}g Y	Under: apply main function (f) to selection (g) of arguments	Dop	Function	Dyadic Operator	Function Application	deldiaeresis computationalunder dual while ‚ç¢
(‚äÉ0‚ç¥‚äÇ)Y	Type: 'a' 1 ‚éïNULL ‚Üí ' ' 0 ‚éïNULL (‚àä with ‚éïML‚Üê0)	Tacit	Monadic Function	Non-scalar function	Array Properties	prototype ‚àä ‚ç∑
{‚ç∫‚Üê‚äÉ‚åà/‚çµ ‚ãÑ 1@‚çµ‚ä¢‚ç∫‚ç¥0}B	Inverse of monadic ‚ç∏ with optional result shape as left argument	Dfn	Function	Non-scalar Function	Index Generation	truesat ‚ç∏‚ç£¬Ø1
X f{‚çµ ‚çµ‚çµ‚ç®‚ç∫‚ç∫ ‚ç∫}g Y	Reverse composition: g on f X and Y, that is, (f X) g Y	Dop	Dyadic Function	Dyadic Operator	Function Application	jotunderbar composewith bind ringunderbar functioncomposition ‚çõ
X f‚ç®‚àòg‚ç®‚àòh Y	Split compose: f between g X and h Y, that is, (g X) f (h Y)	Tacit	Dyadic Function			
X f‚ç®‚àòg‚ç®‚àòh Y	Split compose: f between g X and h Y, that is, (g X) f (h Y)	Tacit	Dyadic Function			
(‚ç≥‚àò‚â¢=(‚ç≥‚ç®‚à™‚ç≥‚ä¢))Y	Nub sieve: mask for major cells to leave the distinct (‚à™Y)	Tacit	Monadic Function	Non-Scalar Function	Sets	unique Boolean indication ‚çß
Iv{‚çµ‚ç¥‚ç®‚ç∫√ó@(<‚àò0)‚ç®(√ó/‚ç¥‚çµ)√∑√ó/‚ç∫~0}Y	Reshape (‚ç¥) Y to shape Iv, allowing ¬Ø1 to automatically determine missing length	Dfn	Dyadic Function	Non-scalar Function	Structural	mold form dimension array autoshape
Iv‚å∑‚ç®‚àò‚äÇ‚ç®Y	Select major cells Iv of Y	Tacit	Dyadic Function	Non-scalar function	Selection	rightshoeunderbar saneindexing ‚äá
((‚à™‚àò.=‚ä¢)‚ç≥‚ç®)Y	Self-classify: table of unique vs all major cells of Y	Tacit	Monadic Function	Non-scalar function	Sets	nub distinctitems uniqueelemenets