SYNTAX	DESCRIPTION	CLASS	TYPE	GROUP	CATERGORY	KEYWORDS
+Y	Conjugate ('Identity' if Y not complex)	Primitive	Monadic Function		Mathematical	plus complex ¯10○ ¯10∘○ conj()
-N	Negate: 0-N	Primitive	Monadic Function		Mathematical	minus hyphen invert additiveinverse opposite dash negation signchange −
×N	Direction ('Signum' if N is real)	Primitive	Monadic Function		Mathematical	cross sgn() sign()
÷N	Reciprocal: 1÷N	Primitive	Monadic Function		Mathematical	multiplicativeinverse opposite obelus invert
⌊N	Round down to integer	Primitive	Monadic Function		Mathematical	downstile floor rounddown
⌈N	Round up to integer	Primitive	Monadic Function		Mathematical	upstile roundup
|N	Magnitude (absolute value)	Primitive	Monadic Function		Mathematical	verticalbar pipe stile stroke verticalline modulo modulus abs magnitude amplitude 10○ 10∘|
*N	e raised to the power N	Primitive	Monadic Function		Mathematical	power star asterisk exponential etothepowerof naturalexponential exp()
⍟N	Natural logarithm of N	Primitive	Monadic Function		Mathematical	naturallogarithm circlestar starcircle splat 2.718281828459045235360287471352662 ln()
○N	pi times N	Primitive	Monadic Function		Circular/Trigonometric	archimedesconstant 3.141592653589793238462643383279503 π 𝜋
!N	Factorial (Gamma function of N+1)	Primitive	Monadic Function		Mathematical	countpermutations exclamation bang shriek combinatorics fact() gamma() Γ
?J	Random number selected from ⍳J	Primitive	Monadic Function		Mathematical	questionmark roll randominteger interrogationpoint query eroteme
?B	Random real number between (0,1) if B=0 or ⎕IO if B=1	Primitive	Monadic Function		Mathematical	questionmark roll randomfloat interrogationpoint query eroteme
~B	Logical Inverse: 0=B	Primitive	Monadic Function		Mathematical	tilde not logicalnot logicalnegation logicalcomplement ¬
M+N	Add N to M	Primitive	Dyadic Function		Mathematical	plus addition
M-N	Subtract N from M	Primitive	Dyadic Function		Mathematical	minus dash hyphen subtraction difference −
M×N	Multiply M and N	Primitive	Dyadic Function		Mathematical	cross times multiplication ∙ ⋅ ·
M÷N	Divide M by N	Primitive	Dyadic Function		Mathematical	division over ⁄
M|N	Residue after dividing N by M	Primitive	Dyadic Function		Mathematical	verticalbar pipe stile stroke verticalline modulo modulus residue divisionremainder mod()
M*N	M raised to the power N	Primitive	Dyadic Function		Mathematical	power star asterisk raisedtothepowerof exponentiation pow()
M⍟N	Base-M logarithm of N	Primitive	Dyadic Function		Mathematical	logarithm circlestar starcircle splat log()
M⌈N	Maximum of M and N	Primitive	Dyadic Function		Mathematical	upstile maximum greater larger max()
M⌊N	Minimum of M and N	Primitive	Dyadic Function		Mathematical	downstile minimum lesser smaller min()
I○N	Circular functions	Primitive	Dyadic Function		Mathematical	circular trigonometric hyperbolic complex imaginary arcus angle goniometric
M!N	Number of selections of size M from N (Beta fn)	Primitive	Dyadic Function		Mathematical	exclamation bang shriek binomial combinatorics beta() Β Ꞵ B()
M∧N	Lowest Common Multiple of M and N	Primitive	Dyadic Function		Mathematical	least smallest lcm() denominator lcd()
M∨N	Greatest Common Divisor of M and N	Primitive	Dyadic Function		Mathematical	gcd() gcf() factor hcf() highest gcm() measure hcd
M<N	Less Than	Primitive	Dyadic Function		Comparison	lt before precedes ≺
M≤N	Less Than Or Equal To	Primitive	Dyadic Function		Comparison	le before precedes ≦
M≥N	Greater Than Or Equal To	Primitive	Dyadic Function		Comparison	ge after follows ≧
M>N	Greater Than	Primitive	Dyadic Function		Comparison	gt after follows ≻
X=Y	Equal To	Primitive	Dyadic Function		Comparison	same
X≠Y	Not Equal To	Primitive	Dyadic Function		Comparison	ne unequal different
A<B	Converse Nonimplication	Primitive	Dyadic Function		Boolean/Logical	⇍
A≤B	Implication	Primitive	Dyadic Function		Boolean/Logical	materialconditional materialconsequence implies imply therefore ∴ ⇒
A≥B	Converse Implication	Primitive	Dyadic Function		Boolean/Logical	because ∵ ⇐ if
A>B	Nonimplication	Primitive	Dyadic Function		Boolean/Logical	abjunction ⇏
A=B	XNOR	Primitive	Dyadic Function		Boolean/Logical	materialbiconditional eqv nxor bothorneither exclusivenor materialequivalence ⇔ iff
A≠B	XOR	Primitive	Dyadic Function		Boolean/Logical	exclusivedisjunction eor exor ⊕ ⊻ ⇎
A∧B	AND	Primitive	Dyadic Function		Boolean/Logical	conjunction caret wedge hat circumflex
A∨B	OR	Primitive	Dyadic Function		Boolean/Logical	disjunction vel alternation Caron hacek invertedcircumflex check hachek
A⍲B	NAND	Primitive	Dyadic Function		Boolean/Logical	shefferstroke notand andtilde carettilde alternativedenial
A⍱B	NOR	Primitive	Dyadic Function		Boolean/Logical	peirce'sarrow quine'sdagger ampheck neithernor jointdenial
0○N	cos ←→ sin: (1-N*2)*.5	Primitive	Dyadic Function		Circular/Trigonometric	pythagorean complementary cop()
¯1○N	Arcsin N	Primitive	Dyadic Function		Circular/Trigonometric	arcsine asin() arcussinus
¯2○N	Arccos N	Primitive	Dyadic Function		Circular/Trigonometric	arccosine acos() arcuscosinus
¯3○N	Arctan N	Primitive	Dyadic Function		Circular/Trigonometric	arctangent atan() arcustangent
¯4○N	cosh → sinh: (N+1)×((N-1)÷N+1)*.5	Primitive	Dyadic Function		Circular/Trigonometric	pythagorean complementary cohn()
¯5○N	Hyperbolic Arcsinh N	Primitive	Dyadic Function		Circular/Trigonometric	arcsine asinh() arcussinus arsinh() area
¯6○N	Hyperbolic Arccosh N	Primitive	Dyadic Function		Circular/Trigonometric	arccosine acosh() arcuscosinus arcosh() area
¯7○N	Hyperbolic Arctanh N	Primitive	Dyadic Function		Circular/Trigonometric	arctangent atanh() arcustangent artanh() area
¯8○N	icos ←→ -isin: -(-1+N*2)*.5	Primitive	Dyadic Function		Circular/Trigonometric	pythagorean complementary nconh()
¯9○N	N	Primitive	Dyadic Function		Circular/Trigonometric	identity
¯10○N	+N	Primitive	Dyadic Function		Circular/Trigonometric	complexconjugate
¯11○N	N×0J1	Primitive	Dyadic Function		Circular/Trigonometric	imaginary complex itimes
¯12○N	*N×0J1	Primitive	Dyadic Function		Circular/Trigonometric	antiphase phasor cis()
1○N	Sine N	Primitive	Dyadic Function		Circular/Trigonometric	sinus sin()
2○N	Cosine N	Primitive	Dyadic Function		Circular/Trigonometric	cosinus cos()
3○N	Tangent N	Primitive	Dyadic Function		Circular/Trigonometric	tan()
4○N	sinh → cosh: (1+N*2)*.5	Primitive	Dyadic Function		Circular/Trigonometric	pythagorean complementary coh()
5○N	Hyperbolic sine N	Primitive	Dyadic Function		Circular/Trigonometric	sinus sinh()
6○N	Hyperbolic cosine N	Primitive	Dyadic Function		Circular/Trigonometric	cosinus cosh()
7○N	Hyperbolic tangent N	Primitive	Dyadic Function		Circular/Trigonometric	tanh()
8○N	icos ←→ isin: (-1+N*2)*.5	Primitive	Dyadic Function		Circular/Trigonometric	pythagorean complementary conh()
9○N	Real part of N	Primitive	Dyadic Function		Circular/Trigonometric	re()
10○N	Magnitude of N	Primitive	Dyadic Function		Circular/Trigonometric	abs() modulo modulus abs magnitude amplitude
11○N	Imaginary part of N	Primitive	Dyadic Function		Circular/Trigonometric	im()
12○N	phase N	Primitive	Dyadic Function		Circular/Trigonometric	argument arc()
⌹Nm	Matrix inverse of Nm (square Nm)	Primitive	Monadic Function		Mathematical	domino quaddivide
⌹Nm	Matrix pseudo-inverse of Nm (over-determined Nm)	Primitive	Monadic Function		Mathematical	domino quaddivide leastsquares
Mm⌹Nm	Multiply Mm with inverse of Nm	Primitive	Dyadic Function		Mathematical	domino matrixdivide quaddivide
M⊤N	Encode value N in number system M	Primitive	Dyadic Function		Mathematical	antibase tobase encode number downtack representation unpack tomixedradix toradix
M⊥N	Decode: Evaluate N in number system M	Primitive	Dyadic Function		Mathematical	frombase decode uptack pack frommixedradix fromradix polynomial basevalue
⍴Y	Shape: Length of each axis of Y	Primitive	Monadic Function		Array Properties	dimensions rho ρ ϱ
≡Y	Depth: Maximum level of nesting in Y (negative if uneven)	Primitive	Monadic Function		Array Properties	equalunderbar
≢Y	Tally: Number of items in leading axis	Primitive	Monadic Function		Array Properties	equalunderbarslash unequalunderbar count length cells
⊂Y	Enclose: Scalar containing Y	Primitive	Monadic Function		Structural	leftshoe
⊆Y	Nest: Y if already nested, else scalar containing Y	Primitive	Monadic Function		Structural	leftshoeunderbar encloseifsimple conditionalenclose nested boxsimple eis condencl
↑Y	Mix: Remove nesting	Primitive	Monadic Function		Structural	uparrow
↓Y	Split: Nest sub-arrays	Primitive	Monadic Function		Structural	downarrow
∊Y	Enlist: Simple vector from elements of Y	Primitive	Monadic Function		Structural	flatten raze ϵ ε ∈
,[ax]Y	Ravel with Axes: insert new axis or combine axes	Primitive	Monadic Function		Structural	increaserank decreaserank reducerank comma
,Y	Ravel: Reshape into a vector	Primitive	Monadic Function		Structural	comma flatten raze
⍪Y	Table: Reshape into 2-dimensional array	Primitive	Monadic Function		Structural	commabar ravelcells flattencells razecells
⌽Y	Reverse last axis of Y	Primitive	Monadic Function		Structural	circlestile mirror
⊖Y	Reverse leading axis of Y	Primitive	Monadic Function		Structural	circlebar rowel upset flip upend
⍉Y	Transpose: Reverse order of axes of Y	Primitive	Monadic Function		Structural	circlebackslash cant reverseaxes ^T ⸆ ᵀ
Iv⍴Y	Reshape Y to have shape Iv	Primitive	Dyadic Function		Structural	rho mold form dimension array ρ ϱ
I⌽Y	Rotate vectors along last axis of Y	Primitive	Dyadic Function		Structural	circlestile
I⊖Y	Rotate vectors along leading axis of Y	Primitive	Dyadic Function		Structural	circlebar
Iv⍉Y	Reorder the axes of Y	Primitive	Dyadic Function		Structural	circlebackslash diagonal reorderaxes
X,[ax]Y	Laminate: Join along new axis	Primitive	Dyadic Function		Structural	comma concatenate
X,Y	Catenate: Join along last axis	Primitive	Dyadic Function		Structural	comma concatenate juxtapose horizontally
X⍪Y	Catenate First: Join along leading axis	Primitive	Dyadic Function		Structural	commabar concatenate over ontop atop vertically
⍳Jv	Indices of all items of array of shape Jv	Primitive	Dyadic Function		Index Generation	iota integers ints countto sequence numbers range ɩ ι positions locations
⍸B	Indices of all 1s in B	Primitive	Monadic Function		Index Generation	wheretrues iotaunderbar locationsoftrues positions
⍋Y	Upgrade: Indices to reorder Y ascending	Primitive	Monadic Function		Index Generation	gradeup deltastile upgrade pine concordetakingoff
⍋Jv	Invert permutation	Primitive	Monadic Function		Index Generation	deltastile upgrade pine concordetakingoff
⍒Y	Downgrade: Indices to reorder Y descending	Primitive	Monadic Function		Index Generation	gradedown delstile downgrade spine concordelanding
X⍳Y	Index of: First indices in X of major cells Y	Primitive	Dyadic Function		Index Generation	iota indexin indexof position ɩ ι
X⍸Y	Indices of items of Y in intervals with cut-offs X	Primitive	Dyadic Function		Index Generation	intervalindex iotaunderbar bin group range bucket
Is?Js	Deal: Is distinct items from ⍳Js	Primitive	Dyadic Function		Index Generation	questionmark interrogationpoint query eroteme
C⍋D	Upgrade using collation sequence C	Primitive	Dyadic Function		Index Generation	gradeup deltastile upgrade pine concordetakingoff customalphabet
C⍒D	Downgrade using collation sequence C	Primitive	Dyadic Function		Index Generation	gradedown delstile downgrade spine concordelanding customalphabet
∪Y	Unique: Distinct major cells of Y	Primitive	Monadic Function		Sets	cup downshoe distinctitems uniqueelements nub
X∊Y	For each item of X, 1 if found in Y, else 0	Primitive	Dyadic Function		Sets	epsilon isin membership containedin has ϵ ε ∈
X⍷Y	Occurrences of entire array X within Y	Primitive	Dyadic Function		Sets	findin epsilonunderbar search locate
X≡Y	Match: 1 if X is identical to Y, else 0	Primitive	Dyadic Function		Sets	match equalunderbar identical?
X≢Y	Not Match: ~X≡Y	Primitive	Dyadic Function		Sets	notmatch natch equalunderbarslash unequalunderbar notidentical differentfrom
Xv~Y	Without: (~Xv∊Y)/Xv	Primitive	Dyadic Function		Sets	tilde butnot without except setdifference setsubtraction setminus ∖
Xv∪Yv	Union: Xv,Yv~Xv	Primitive	Dyadic Function		Sets	cup union downshoe setor
Xv∩Yv	Intersection: (Xv∊Yv)/Xv	Primitive	Dyadic Function		Sets	cap intersection upshoe setand
/⊃Y	First item of Y	Primitive	Monadic Function		Selection	disclose rightshoe first unbox open contentof
Iv⊃Y	Reach into Y along path given by Iv	Primitive	Dyadic Function		Selection	rightshoe pickfrom selectfrom
Iv⌷Y	Index Y using indices Iv	Primitive	Dyadic Function		Selection	squishquad squad indexinto selectfrom
Iv↑Y	Take Iv items along axes of Y	Primitive	Dyadic Function		Selection	uparrow take first last beginning end leading trailing head tail
Iv↓Y	Drop Iv items along axes of Y	Primitive	Dyadic Function		Selection	downarrow split drop remove trim cut
Iv/Y	Replicate along last axis of Y	Primitive	Dyadic Function		Selection	compress slash solidus filter
Iv⌿Y	Replicate along leading axis of Y	Primitive	Dyadic Function		Selection	compress slashbar solidus filter first
Iv\Y	Expand last axis of Y	Primitive	Dyadic Function		Selection	reversesolidus slope
Iv⍀Y	Expand leading axis of Y	Primitive	Dyadic Function		Selection	reversesolidusbar slopebar
Av⊂Y	Partitioned enclose of Y according to Av	Primitive	Dyadic Function		Selection	segment chop split cut separate
Mv⊆Y	Partition Y according to Mv	Primitive	Dyadic Function		Selection	segment chop split cut separate
⍎Dv	Execute: Result of expression Dv	Primitive	Monadic Function		Data Conversion	evaluate uptackjot hydrant apl compute numbers atoi run call parseexpression
⍕Y	Format: Character representation of Y	Primitive	Monadic Function		Data Conversion	downtackjot thorn itoa tostringify totext representation ⎕fmt ⎕df
NS⍎Dv	Execute Dv within namespace NS	Primitive	Dyadic Function		Data Conversion	evaluate uptackjot hydrant apl compute numbers atoi run call inside
Iv⍕Y	Format Y using (width, decimals) pairs Iv	Primitive	Dyadic Function		Data Conversion	downtackjot thorn itoa tostringify totext representation round width ⎕fmt
⌷Y	Materialise items of Y in workspace	Primitive	Monadic Function		Identity	squishquad squad materialise materialize defaultproperty elements items
⊣Y	Same: Y	Primitive	Monadic Function		Identity	lev lefttack identity defer ignore where
⊢Y	Same: Y	Primitive	Monadic Function		Identity	dex righttack sameright identity default
X⊣Y	Left: X	Primitive	Dyadic Function		Identity	lev lefttack sameleft identity
X⊢Y	Right: Y	Primitive	Dyadic Function		Identity	dex righttack sameright identity
f/Y	Reduce: f between all items of Y on last axis	Primitive	Monadic Function	Monadic Operator	Function Application	slash reduce fold insert solidus filter over rowwise
f⌿Y	Reduce First: f between all items of Y on first axis	Primitive	Monadic Function	Monadic Operator	Function Application	slashbar reducefirst foldfirst insertfirst reversesolidus columnwise
Is f/Y	Reduce: f between all items of Y in groups of Is on last axis	Primitive	Dyadic Function	Monadic Operator	Function Application	slash reduce fold insert select solidus filter over rowwise
Is f⌿Y	Reduce First: f between all items of Y in groups of Is on first axis	Primitive	Dyadic Function	Monadic Operator	Function Application	slashbar reducefirst foldfirst insertfirst reversesolidus columnwise
f\Y	Scan: f between items of Y in progressively longer vectors along last axis	Primitive	Monadic Function	Monadic Operator	Function Application	backslash slope scan cumulativereduce rowwise
f⍀Y	Scan First: f between items of Y in progressively longer vectors along first axis	Primitive	Monadic Function	Monadic Operator	Function Application	slopebar backslashbar reversesolidusbar scanfirst cumulativereducefirst filterfirst columnwise
f¨Y	Each: f on items of Y	Primitive	Monadic Function	Monadic Operator	Function Application	foreach diaeresis map
X f¨Y	Each: f between items of X and Y	Primitive	Dyadic Function	Monadic Operator	Function Application	foreach diaeresis map
X f⌸Y	Key: f on items of Y grouped by unique X values	Primitive	Dyadic Function	Monadic Operator	Sets	equalquad quadequal group classify bin bucket
f⌸Y	Key: f on first axis indices of Y grouped by unique Y values	Primitive	Monadic Function	Monadic Operator	Sets	equalquad quadequal unique
f⍨Y	Selfie: same as Y f Y	Primitive	Monadic Function	Monadic Operator	Function Application	commute tildediaeresis frown duplicate
X f&Y	Spawn: f between X and Y in a new thread	Primitive	Monadic Function	Monadic Operator	System	ampersand spawn et and greenthreading launch run
Ns⌶Y	I-beam: Call experimental system-related monadic function Ns	Primitive	Monadic Function	Monadic Operator	System	ibeam systemservice special foreign
X f⍨Y	Commute: same as Y f X	Primitive	Dyadic Function	Monadic Operator	Function Application	commute switch tildediaeresis swap frown
f&Y	Spawn: f on in a new thread	Primitive	Dyadic Function	Monadic Operator	System	ampersand spawn et and greenthreading launch run
X(Ns⌶)Y	I-beam: Call experimental system-related dyadic function Ns	Primitive	Dyadic Function	Monadic Operator	System	ibeam systemservice special foreign
(f⍤r)Y	Rank: f on or between trailing rank-r subarrays	Primitive	Monadic Function	Dyadic Operator	Function Application	jotdiaeresis rank paw
(f⌺Jm)Y	Stencil: f on (possibly overlapping) rectangles of Y	Primitive	Monadic Function	Dyadic Operator	Function Application	diamondquad quaddiamond stencil tessellate tile cellularautomaton gameoflife
f⍣g Y	Power: iterates f on Y until condition Y g f Y is true	Primitive	Monadic Function	Dyadic Operator	Iteration	poweroperator stardiaeresis powerlimit fixedpoint fixpoint converge while until repeat
(f⍣Js)Y	Power: f (or X∘f) on Y Js times	Primitive	Monadic Function	Dyadic Operator	Iteration	poweroperator stardiaeresis while until inverse repeat
X f.g Y	Inner Product: f / g between trailing vectors of X and leading vectors of Y	Primitive	Monadic Function	Dyadic Operator	Mathematical	dotproduct innerproduct crossproduct vectorproduct matrixproduct period fullstop
X∘.g Y	Outer Product: g between each item of X and every item of Y	Primitive	Monadic Function	Dyadic Operator	Mathematical	jotdot outerproduct table cartesianproduct allcombinationsof
f∘g Y	Atop: f on the result of g on Y, that is, f g Y	Primitive	Monadic Function	Dyadic Operator	Composition	jot composewith bind ring functioncomposition
X f∘g Y	With: X∘f on the result of g on Y, that is, X f g Y	Primitive	Monadic Function	Dyadic Operator	Composition	jot composewith bind ring functioncomposition
X∘g Y	Curry: g between X and Y, that is, XgY	Primitive	Monadic Function	Dyadic Operator	Composition	jot composewith bind curry ring
(f∘Y2)Y1	Curry: f between Y1 and Y2, that is, Y1fY2	Primitive	Monadic Function	Dyadic Operator	Composition	jot composewith bind curry ring
(f⍠Zv)Y	Variant: f qualified by Zv on Y	Primitive	Monadic Function	Dyadic Operator	System	colonquad quadcolon option setting mode
(X@N)Y	At: use values in X to replace positions N in Y	Primitive	Monadic Function	Dyadic Operator	Structural	at substitute merge amend replace update
(f@N)Y	At: apply f to modify positions N in Y	Primitive	Monadic Function	Dyadic Operator	Function Application	at amend update
(X@g)Y	At use values in X to replace positions identified by Boolean mask (g Y) in Y	Primitive	Monadic Function	Dyadic Operator	Structural	at substitute merge amend replace update
(f@g)Y	At: apply f (or X∘f) to modify positions identified by Boolean mask (g Y) in Y	Primitive	Monadic Function	Dyadic Operator	Function Application	at amend update
X(f⍤r)Y	Rank: f on or between trailing rank-r subarrays	Primitive	Dyadic Function	Dyadic Operator	Function Application	jotdiaeresis rank paw
X(f⍣g)Y	Power: iterates X∘f on Y until condition Y g X f Y is true	Primitive	Dyadic Function	Dyadic Operator	Iteration	poweroperator stardiaeresis powerlimit fixedpoint fixpoint converge while until repeat
X(f⍣Js)Y	Power: X∘f on Y Js times	Primitive	Dyadic Function	Dyadic Operator	Iteration	poweroperator stardiaeresis while until inverse repeat
X(f⍠Zv)Y	Variant: f qualified by Zv between X and Y	Primitive	Dyadic Function	Dyadic Operator	System	colonquad quadcolon option setting mode
X(f@N)Y	At: apply X∘f to modify positions N in Y	Primitive	Dyadic Function	Dyadic Operator	Function Application	at substitute merge amend replace update
X(f@g)Y	At: apply X∘f to modify positions identified by Boolean mask (g Y) in Y	Primitive	Dyadic Function	Dyadic Operator	Function Application	at substitute merge amend replace update
ns.name	Namespace Member	Syntax			Expression	namespaceseparator dotinto point period
int.frac	Decimal Point	Syntax	Array		Expression	decimal point period rational
mantEexp	Scaled Notation	Syntax	Array		Expression	exponent timestento scale mantissa
realJimag	Complex Notation	Syntax	Array		Expression	complex plusitimes imaginary
]name	User Command	Non-syntax				rightsquarebracket rightbracket usercommand ucmd
{ns}⎕SE.UCMD Dv	Execute user command Dv under program control (from within 'ns')		Monadic Function		Function Application	ucmd
)name	System Command	Non-syntax				rightroundparentheses rightparenthesis systemcommand syscmd
X[I;J;…]	Indexing	Syntax	Dyadic Function		Selection	squarebrackets indexing subscript choose
f[ax]Y	f on Y along axis/axes ax	Syntax	Monadic Function	Monadic Operator	Function Application	squarebrackets axisoperator along
X f[ax]Y	f between X and Y along axis ax	Syntax	Dyadic Function	Monadic Operator	Function Application	squarebrackets axisoperator along
(X1 X2)(Y1 Y2)	Stranding: (⊂(⊂X1),(⊂X2)),(⊂(⊂Y1),(⊂Y2))	Syntax			Expression	roundparentheses roundparens grouping stranding nestedarraynotation nestedvectornotation
(X1+X2)×Y	Precedece: Y×X1+X2	Syntax			Expression	roundparentheses grouping precedence roundparens
(f g)Y	Atop: f g Y	Syntax	Monadic Function	Train	Expression	tacit roundparentheses roundparens grouping derived train fg atop 2train 2-train
(f g h)Y	Fork: (f Y)g(h Y)	Syntax	Monadic Function	Trian	Expression	tacit roundparentheses roundparens grouping derived train fgh fork 3train 3-train
(X g h)Y	Fork: X g h Y	Syntax	Monadic Function	Trian	Expression	tacit roundparentheses roundparens grouping derived train Agh fork 3train 3-train
X(f g)Y	Atop: f X g Y	Syntax	Dyadic Function	Train	Expression	tacit roundparentheses roundparens grouping derived train fg atop 2train 2-train 
X(f g h)Y	Fork: (X f Y)g(X h Y)	Syntax	Dyadic Function	Train	Expression	tacit roundparentheses roundparens grouping derived train fgh fork 3train 3-train
X1(X2 g h)Y	Fork: X2 g X1 h Y	Syntax	Dyadic Function	Train	Expression	tacit roundparentheses roundparens grouping derived train Agh fork 3train 3-train
f←{⍵}	Dfn	Syntax	Monadic Function		Definition	direct dynamic lambda anonymous curlybraces function dfn assignment
op←{⍺⍺ ⍵}	Dop	Syntax	Monadic Function	Monadic Operator	Definition	direct dynamic lambda anonymous curlybraces operator dop assignment
op←{⍺⍺ ⍺}	Dop	Syntax	Dyadic Function	Monadic Operator	Definition	direct dynamic lambda anonymous curlybraces operator dop assignment
f←{⍺}	Dfn	Syntax	Dyadic Function		Definition	direct dynamic lambda anonymous curlybraces function dfn assignment
op←{⍵⍵ ⍵}	Dop	Syntax	Monadic Function	Dyadic Operator	Definition	direct dynamic lambda anonymous curlybraces operator dop assignment
op←{⍵⍵ ⍺}	Dop	Syntax	Dyadic Function	Dyadic Operator	Definition	direct dynamic lambda anonymous curlybraces operator dop assignment
{R}←f Y	Shy Tradfn/Tradop Result	Syntax			Definition	curlybraces function operator shy hideresult traditional
{X}f Y	Optional Left Tradfn/Tradop Argument	Syntax			Definition	curlybraces function operator optional default ambivalent variadic traditional
f;Y	Tradfn/Tradop Name Localisation	Syntax			Definition	indexing axes indices localisation localization shadow variable names scope
x←⍞	Return one line of user input from Stdin	Syntax	Array		Expression	quotequad quadquote input characterinput rawinput stdin
charvec←⎕	Evaluate user input and return result	Syntax	Array		Expression	quad evaluatedinput
⍞←x	Output x to session without trailing newline via stderr (without trailing line break)	Syntax	Assignment		Expression	quotequad quadquote output stderr
⎕←x	Output x to the session via stdout (with trailing line break)	Syntax	Assignment		Expression	quad evaluatedinput stdout
'	Character	Syntax	Array		Expression	quote apostrophe string text character
¯	Negative	Syntax	Array		Expression	macron negative highminus minus
⋄	Statement Separator	Syntax			Expression	diamond statementseparator break stop else then
⍝	Comment	Syntax			Expression	comment lamp ignore skip note nb
→	Abort (cut stack back one frame)	Primitive	Monadic Function		Expression	rightarrow branch abort stop switch
→J	Branch to line or label J	Primitive	Niladic Function		Expression	rightarrow branch goto switch
→0	Return: Leave function and return to caller	Primitive	Niladic Function		Expression	rightarrow branch goto switch
⍵	Dfn/Dop Right Argument	Primitive	Array		Expression	omega rightarg ω ꞷ
⍺	Dfn/Dop Left Argument	Primitive	Array		Expression	alpha leftarg α ɑ
∇	Dfn Self	Primitive	Monadic Function;Dyadic Function		Expression	del recurse function triangledown downtriangle carrot
⍵⍵	Dop Right Operand	Primitive	Array;Monadic Function;Dyadic Function		Expression	omega rightop
⍺⍺	Dop Left Operand	Primitive	Array;Monadic Function;Dyadic Function		Expression	alpha leftop
∇∇	Dop Self	Primitive	Monadic Function;Dyadic Function	Monadic Operator;Dyadic Operator	Expression	deldel recurse operator triangledown downtriangle carrot
name f←Y	Modified Assignment	Primitive	Dyadic Function	Monadic Operator	Expression	leftarrow assignment gets is copula let redefine name naming denotes means inplace update
name←Y	Assignment	Primitive	Dyadic Function		Expression	leftarrow assignment gets is copula let define name naming denotes means
(name1 name2)←Y	Multiple assignment	Primitive	Dyadic Function		Expression	leftarrow assignment get are copula let define name naming denote mean
⍬	Empty Numeric Vector	Primitive	Array		Expression	zilde emptylist emptynumericlist zerotilde emptyvector null emptyset none ∅
bx:Y	Dfn/Dop Guard (conditional result)	Syntax			Expression	guard if conditional ternary
errno::Y	Dfn/Dop Error Guard (result upon listed error)	Syntax			Expression	errorguard trap catch try
(+⌿÷≢)N	Mean of N	Tacit	Monadic Function		Mathematical	average arithmeticmean
Xs(≠⊆⊢)Yv	Cut Yv at occurences of Xs (removes separators and empty segments)	Tacit	Dyadic Function		Structural	cut split partition segment separate chop divide
X(1↓¨,⊂⍨⊣=,)Yv	Split Yv at occurences of Xs (removes separators)	Tacit	Dyadic Function		Structural	cut split partition segment separate chop divide
X(∨/⍷)Y	Is X a Subarray of Y?	Tacit	Dyadic Function		Structural	contains? has? isin? issubarray? appearsin?
Is(↑{⍺⍵}↓)Y	Y's Head of Length Is and its Tail	Tacit	Dyadic Function		Structural	headtail split divide separate
1∘+N	Increment	Tacit	Monadic Function		Mathematical	increase next
(-∘1)N	Decrement	Tacit	Monadic Function		Mathematical	decrease previous
(⌊0.5∘+)N	Round	Tacit	Monadic Function		Mathematical	round closestinteger nearestinteger nint
×⍨N	Square	Tacit	Monadic Function		Mathematical	square ²
(*∘3)N	Cube	Tacit	Monadic Function		Mathematical	cube ³
(*∘0.5)N	Square Root	Tacit	Monadic Function		Mathematical	squareroot sqrt ²√
M*∘÷⍨N	M'th Root of N	Tacit	Dyadic Function		Mathematical	nthroot ⁿ√ ³√
+⍨N	2×N	Tacit	Monadic Function		Mathematical	double
2∘|J	Parity of J (is J odd?)	Tacit	Monadic Function		Mathematical	parity odd
(~2∘|)J	J is Even	Tacit	Monadic Function		Mathematical	even
+⌿N	Sum of N (column-wise)	Tacit	Monadic Function		Mathematical	vertical summation enlargedsigma bigsigma capitalsigma ∑ Σ
×⌿N	Product of N (column-wise)	Tacit	Monadic Function		Mathematical	vertical product enlargedpi bigpi capitalpi ∏ Π
∘.×⍨∘⍳Js	Multiplication Table for Numbers up to Js	Tacit	Monadic Function		Mathematical	multiplicationtable cartesianproduct timestable
~0∘∊	All	Tacit	Monadic Function		Boolean/Logical	forall true givenany tautology universalquantification ∀
1∘∊B	Any	Tacit	Monadic Function		Boolean/Logical	thereexists forsome existentialquantification ∃
0∘∊B	Not All	Tacit	Monadic Function		Boolean/Logical	notall somenot
(~1∘∊)B	Not Any	Tacit	Monadic Function		Boolean/Logical	none notany
(⍳≢)Y	Indices of Major Cells of Y	Tacit	Monadic Function		Index Generation	enumerate number count
(,∘⍳⍴)Y	All Indices Of Y	Tacit	Monadic Function		Index Generation	indicesof
?⍨Js	Random Permutation of length Js	Tacit	Monadic Function		Index Generation	shuffle randompermutation
N+.×M	Dot/Vector/Cross Product of M and N	Tacit	Dyadic Function		Mathematical	dotproduct vectorproduct crossproduct matrixmultiply ∙⋅·
(1≥∘|≡)Y	Is Y a Simple Array?	Tacit	Monadic Function		Array Properties	simple?
(0=≡)Y	Is Y a Simple Scalar?	Tacit	Monadic Function		Array Properties	simple?
(2≤∘|≡)Y	Is Y a Nested Array?	Tacit	Monadic Function		Array Properties	nested?
(0>≡)Y	Does Y have Non-Uniform Depth?	Tacit	Monadic Function		Array Properties	ragged? nonuniform? nonorthogonal? nonrectangular?
(0≤≡)Y	Does Y have Uniform Depth?	Tacit	Monadic Function		Array Properties	uniform? orthogonal? rectangular?
(⍬≡⍴)Y	Is Y a Scalar?	Tacit	Monadic Function		Array Properties	scalar?
(1=×/∘⍴)Y	Is Y a Singleton?	Tacit	Monadic Function		Array Properties	singleton? unit? sole? one?
(⊃0⍴⊂)Y	Type (converts characters to spaces, numbers to zeros)	Tacit	Monadic Function		Array Properties	datatypeof
-⌿N	Alternating Sum: ((N[1]-N[2])+N[3])-N[4]+…	Tacit	Monadic Function		Mathematical	alternatingsum
(¯2-/⊢)N	Deltas: (N[2]-N[1])(N[3]-N[2])(N[4]-N[3])…	Tacit	Monadic Function		Mathematical	differences changes steps
Ms(+,-)Ns	Ms±Ns	Tacit	Dyadic Function		Mathematical	plusminus
Ms(-,+)Ns	Ms∓Ns	Tacit	Dyadic Function		Mathematical	minusplus
(1 ¯1∘.×⊢)N	±N increasing rank	Tacit	Monadic Function		Mathematical	plusminus
(¯1 1∘.×⊢)N	∓N increasing rank	Tacit	Monadic Function		Mathematical	minusplus
(⍋⍋)Y	Cardinals Up	Tacit	Monadic Function		Index Generation	ascendingcardinalnumbers
(⍋⍒)Y	Cardinals Down	Tacit	Monadic Function		Index Generation	descendingcardinalnumbers
((⊢~∘.×⍨)1↓⍳)Js	Primes until Js	Tacit	Monadic Function		Mathematical	primesuntil
(2=0+.=⍳|⊢)Ns	Ns is a Prime	Tacit	Monadic Function		Mathematical	isprime primality
I(0=|)J	I Divides J	Tacit	Dyadic Function		Mathematical	divisibility divisor ∣
I(0≠|)J	I does Not Divide J	Tacit	Dyadic Function		Mathematical	divisibility divisor ∤
Xv(∧/∊)Yv	Is Xv a Subset of Yv?	Tacit	Dyadic Function		Sets	subset? containedin ⊆
Xv(∧/∊⍨)Yv	Is Xv a Superset of Yv?	Tacit	Dyadic Function		Sets	superset? contains ⊇
(○÷180)∘×N	N Degrees in Radians	Tacit	Monadic Function		Mathematical	radians
(180÷○1)∘×N	N Radians in Degrees	Tacit	Monadic Function		Mathematical	degrees
(2∘⊥⍣¯1)J	Binary representation of J	Tacit	Monadic Function		Mathematical	digits base10 decimal base-10
(10∘⊥⍣¯1)N	Digits of N	Tacit	Monadic Function		Mathematical	digits base10 decimal base-10
M(⊥⍣¯1)N	N in Base M	Tacit	Dyadic Function		Mathematical	tobase
1∘|N	Fractional Part of N	Tacit	Monadic Function		Mathematical	fractional
(!-∘1)N	Gamma function of N	Tacit	Monadic Function		Mathematical	gamma() Γ
Xv(∪~∩)Yv	Symmetric Set Difference	Tacit	Dyadic Function		Sets	⊖
Xv(∊∧.∧∊⍨)Yv	Set Identity	Tacit	Monadic Function		Sets	setequivalence
(⊃⍒)Y	Index of Largest	Tacit	Monadic Function		Comparison	indexoflargest
(⊃⍋)Y	Index of Smallest	Tacit	Monadic Function		Comparison	indexofsmallest
(⊢⍉⍨⍴=⍴)Y	Diagonal	Tacit	Monadic Function		Structural	majordiagonal
(⌽⍉⍨⍴=⍴)Y	Anti-diagonal	Tacit	Monadic Function		Structural	minordiagonal
(0∊⍴)Y	Is Y an Empty Array?	Tacit	Monadic Function		Structural	isempty? isvoid? isnull?
(⊂∘⍋⌷⊢)Y	Sort Ascending	Tacit	Monadic Function		Mathematical	sort order up increasing
(⊂∘⍒⌷⊢)Y	Sort Descending	Tacit	Monadic Function		Mathematical	sort order down decreasing
(1∧.=2</⊢)Nv	Is Nv Strictly Increasing?	Tacit	Monadic Function		Mathematical	ascending? rising? up order
(1∧.=2>/⊢)Nv	Is Nv Strictly Decreasing?	Tacit	Monadic Function		Mathematical	ascending? rising? up order
(1∧.=2≤/⊢)Nv	Is Nv Non-decreasing?	Tacit	Monadic Function		Mathematical	descending? falling? down order Nondecreasing?
(1∧.=2>/⊢)Nv	Is Nv Non-increasing?	Tacit	Monadic Function		Mathematical	descending? falling? down order Nonincreasing?
⌈/N	Maximum of N	Tacit	Monadic Function		Mathematical	supremum
⌊/N	Minimum of N	Tacit	Monadic Function		Mathematical	infirmum
(¯1○÷)N	Arccosecant	Tacit	Monadic Function		Mathematical	arccosecant acsc acosec arcuscosecant
(¯2○÷)N	Arcsecant	Tacit	Monadic Function		Mathematical	arcsecant asec arcussecant
(¯3○÷)N	Arccotangent	Tacit	Monadic Function		Mathematical	arccotangent acotg actg actn arcuscotangent
(÷1∘○)N	Cosecant	Tacit	Monadic Function		Mathematical	cosecant csc
(÷2∘○)N	Secant	Tacit	Monadic Function		Mathematical	secant
(÷3∘○)N	Cotangent	Tacit	Monadic Function		Mathematical	cotangent cotg ctg ctn
(¯2○1○⊢)N	Complementry Angle	Tacit	Monadic Function		Mathematical	complement
X⌷⍨∘⊂J	Items of X at positions J	Tacit	Dyadic Function		Selection	index
X⌷⍨∘⊂J	Items of X at positions J	Tacit	Dyadic Function		Selection	index
X f{⍺←⊢ ⋄ ⍺⍺ ⍺ ⍵⍵ ⍵}g Y	Atop: f X g Y	Dop	Dyadic Function	Dyadic Operator	Function Application	on composewith functioncomposition fXgY
X f{⍺←⊢ ⋄ (⍺⍺ ⍺) ⍵⍵ ⍵}g Y	Reversed Compose: (f X) g Y	Dop	Dyadic Function	Dyadic Operator	Function Application	on composewith functioncomposition fXgY
X g⍨∘f⍨ Y	Reversed Compose: (f X) g Y	Dop	Dyadic Function	Dyadic Operator	Function Application	on composewith functioncomposition fXgY
X f{⍺←{⍵ ⋄ ⍺⍺} ⋄ (⍵⍵ ⍺) ⍺⍺ (⍵⍵ ⍵)}g Y	Over: (g X) f (g Y)	Dop	Dyadic Function	Dyadic Operator	Function Application	ontop composewith functioncomposition (gX)f(gY) (gX)fgY
X g⍨∘f⍨∘h Y	Split Compose: (f X) g (h Y)	Tacit	Dyadic Function		Function Application	composewith functioncomposition splitover (fX)g(hY) (fX)ghY
⎕CT←(0≤1E¯14≤2*¯32)	Max ratio between numbers considered equal when ⎕FR←645	System	Variable		Mathematical	comparison tolerance fuzz IEEE754 64-bit binaryfloatingpoint representation
⎕DCT←(0≤1E¯28≤2*¯32)	Max ratio between numbers considered equal when ⎕FR←1287	System	Variable		Mathematical	comparison tolerance fuzz IEEE754-2008 128-bit decimalfloatingpoint representation
⎕DIV←(0,1)	0: 1=0÷0, all other÷0 error; 1: 0=all÷0	System	Variable		Mathematical	divisionbyzero divisionmethod divmethod error nan indeterminate
⎕FR←(645,1287)	Specifies the result type of floating-point computations	System	Variable		Mathematical	IEEE754 64-bit binaryfloatingpoint IEEE754-2008 128-bit decimalfloatingpoint internal representation
⎕IO←(1,0)	Specifies whether array indices are counted from 0 or 1	System	Variable		Index Generation	indexing counting numbering natrualnumbers origin one zero based ordinals
⎕ML←(0≤1≤3)	Degree of compatibility with IBM APL2 (from 0=low to 3=high)	System	Variable		System	migration level conformance APLX APL*PLUS GNUAPL APL+Win APL2000 NARS2000 ≡↑⊃ depth first mix ⎕TC terminalcontrolcharacters
⎕PP←(1≤10≤34)	Number of significant digits in the display of numeric output	System	Variable		Data Conversion	print precision decimals rounding display
⎕RL←⍬ 1	Seed and Random Number Generator used by Roll/Deal	System	Variable		Index Generation	RNG rnd roll randominteger randomfloat randomness source
:For	:For var :In│:InEach ax ⋄ block ⋄ :EndFor	Syntax	Control	Structure	Expression	loop count iteration ¨
:Hold	:Hold tkn ⋄ block ⋄ :Else ⋄ block ⋄ :EndHold	Syntax	Control	Structure	Expression	synchronisation synchronization parallel threading tokens greenthreading
:If	:If bx ⋄ block ⋄ :ElseIf bx│:Else ⋄ block ⋄ :EndIf	Syntax	Control	Structure	Expression	conditional ternary branch ⍣ :
:Repeat	:Repeat ⋄ block ⋄ :Until bx ⋄ :AndIf bx│:OrIf bx	Syntax	Control	Structure	Expression	loop iteration ⍣
:Repeat	:Repeat ⋄ block ⋄ :EndRepeat	Syntax	Control	Structure	Expression	loop iteration ⍣
:Select	:Select ax ⋄ :Case val│:CaseList val ⋄ block ⋄ :Else ⋄ block ⋄ :EndSelect	Syntax	Control	Structure	Expression	switch inspect multiwaybranch
:Trap	:Trap ecode ⋄ block ⋄ :Case ecode│:CaseList ecode ⋄ block ⋄ :Else ⋄ block ⋄ :EndTrap	Syntax	Control	Structure	Expression	try catch errorhandling trapping exception
:While	:While bx ⋄ block ⋄ :AndIf bx│:OrIf bx ⋄ block ⋄ :EndWhile	Syntax	Control	Structure	Expression	loop do iteration ⍣
:While	:While bx ⋄ block ⋄ :AndIf bx│:OrIf bx ⋄ block ⋄ :Until bx	Syntax	Control	Structure	Expression	loop do iteration ⍣
:With	:With ns ⋄ block ⋄ :EndWith	Syntax	Control	Structure	Expression	scope namespace object
:GoTo J	Branch to line or label J	Syntax	Control	Keyword	Expression	branch switch →
:Return	Abort (cut stack back one frame)	Syntax	Control	Keyword	Expression	abort →0 stop
:Leave	Terminate execution :For/:Repeat/:While block	Syntax	Control	Keyword	Expression	break earlyexit
:Continue	Start iteration of the immediately surrounding :For/:Repeat/:While loop	Syntax	Control	Keyword	Expression	continuation
)CLEAR	Clear active workspace	Non-syntax			System Command	new refresh empty erase delete remove purge expunge reset all ⎕clear
)CMD cmd	Execute cmd (cmd is mandatory on Windows, optional on UNIX)	Non-syntax			System Command	shell dos operatingsystem commandprocessor windows
)CONTINUE	Save active workspace as CONTINUE and terminate session	Non-syntax			System Command	exit stop close ⎕off )off ⎕save
)COPY ws {nms}	Copy (selected) contents of workspace ws to active workspace	Non-syntax		File Access	System Command	import use load transfer include item object otherworkspace )pcopy ⎕cy
)CS {space}	Change current namespace	Non-syntax			System Command	into out of # ⎕se ⎕cs
)DROP {ws}	Erase file containing workspace ws	Non-syntax			System Command	delete remove expunge
)ED {etype} nms	Open Editor for named objects of type etype	Non-syntax			System Command	open modify code source definition define value ⎕ed
)ERASE nms	Delete named objects from the active workspace	Non-syntax			System Command	remove ⎕ex expunge item object
)HOLDS	List tokens currently held (acquired by :Hold)	Non-syntax			System Command	synchronisation synchronization parallel threading tokens greenthreading
)LIB {folder}	List workspaces either on WSPATH or in folder	Non-syntax			System Command	dir ls
)LOAD {ws}	Replace active workspace with workspace ws	Non-syntax		File Access	System Command	open fetch get bringin ⎕load
)NS {name}	Create new global namespace called name	Non-syntax			System Command	⎕NS
)OFF	Terminate the session	Non-syntax			System Command	exit stop close ⎕off )continue
)PCOPY ws {nms}	As )COPY but does not overwrite existing objects	Non-syntax		File Access	System Command	import load include item object otherworkspace )copy
)RESET {n}	Reset state indicator and empty event queue/clear top n suspensions	Non-syntax			System Command	)sic clear cutback stack
)SAVE {ws}	Save active workspace, optionally with new name ws	Non-syntax			System Command	archive store ⎕save
)SH cmd	Execute cmd (cmd is mandatory on Windows, optional on UNIX)	Non-syntax			System Command	shell os operatingsystem commandprocessor ⎕sh linux macos aix unix rasbianpios
)SI {n} {-tid=tdno}	Display (first n /last if n<0 lines of) state indicator (for  tdno)	Non-syntax			System Command	display stack ⎕si ⎕xsi
)SIC	Reset state indicator and empty event queue/clear top n suspensions	Non-syntax			System Command	)reset clear cutback stack
)SINL{n} {-tid=tdno}	Display (first n /last if n<0 lines of) state indicator (for thread tdno) with local names	Non-syntax			System Command	display stack list locals ⎕state
)TID {tdno}	Switch to thread tdno or report current thread number	Non-syntax			System Command	synchronisation synchronization parallel threading greenthreading ⎕tid
)WSID {ws}	Set or report the name of the active workspace	Non-syntax			System Command	identification filepath filename ⎕wsid
)XLOAD {ws}	Load workspace ws without executing ⎕LX	Non-syntax		File Access	System Command	open fetch get quiet latentexpression autoexec boot
)CLASSES {nm}	List classes in current namespace, optionally beginning with {nm}	Non-syntax			System Command	information listing report ¯9.4
)EVENTS {nm}	List events in current namespace, optionally beginning with {nm}	Non-syntax			System Command	information listing report ¯8.6
)FNS {nm}	List functions in current namespace, optionally beginning with {nm}	Non-syntax			System Command	information listing report ¯3.1 ¯3.2 ¯3.3 ¯3.6
)INTERFACES {nm}	List interfaces in current namespace, optionally beginning with {nm}	Non-syntax			System Command	information listing report ¯9.5 ¯9.7
)METHODS {nm}	List methods in current namespace, optionally beginning with {nm}	Non-syntax			System Command	information listing report ¯3.6
)OBJECTS {nm}	List objects in current namespace, optionally beginning with {nm}	Non-syntax			System Command	information listing report ¯9.1 ¯9.2 ¯9.4 ¯9.5 ¯9.6 ¯9.7
)OBS {nm}	List objects in current namespace, optionally beginning with {nm}	Non-syntax			System Command	information listing report ¯9.1 ¯9.2 ¯9.4 ¯9.5 ¯9.6 ¯9.7
)OPS {nm}	List operatoris in current namespace, optionally beginning with {nm}	Non-syntax			System Command	information listing report ¯4.1 ¯4.2 ¯4.3
)PROPS {nm}	List properties in current namespace, optionally beginning with {nm}	Non-syntax			System Command	information listing report ¯2.3
)VARS {nm}	List variables in current namespace, optionally beginning with {nm}	Non-syntax			System Command	information listing report ¯2.1 ¯2.2 ¯2.3 ¯2.6
⎕A	The letters from A to Z	System	Constant		System Function	abcdefghijklmnopqrstuvwxyz latinalphabet englishletters uppercase a-z
⎕D	The digits from 0 to 9	System	Constant		System Function	123456789 numbers arabicnumerals 0-9
⎕NULL	A reference to the null item	System	Constant		System Function	void emptycell .net nil
0::any error	Covers all errors (errors 1–999)				Error Message	try catch errorhandling trapping exception
1::WS FULL	There is insufficient workspace in which to perform an operation				Error Message	size memory resources maxws ⎕wa
2::SYNTAX ERROR	A line of characters does not constitute a meaningful statement				Error Message	parser parsing
3::INDEX ERROR	Index or axis is not in ⍳⍴Y or not in ⍳≢⍴Y				Error Message	bounds limits overflow beyond dimensions length
4::RANK ERROR	Array rank invalid for function/operator, or ranks of arguments do not conform				Error Message	dimensions conformability
5::LENGTH ERROR	The shape of the arguments of a function do not conform, but the ranks do conform				Error Message	conformability
6::VALUE ERROR	Undefined name in this scope, or function does not return result while required				Error Message	
7::FORMAT ERROR	Ill-formed specification in the left argument of ⎕FMT				Error Message	
10::LIMIT ERROR	A system limit is exceeded				Error Message	
11::DOMAIN ERROR	Type or value not permitted for the function/operator/system variable or unrepresentable numeric value				Error Message	
12::HOLD ERROR	Attempting ⎕SAVE while external arrays or component files are held by ⎕FHOLD				Error Message	
16::NONCE ERROR	System function or syntax or appropriate value is not currently implemented but is reserved for future use				Error Message	
18::FILE TIE ERROR	File tie number used as tied when not or available when tied, or missing external variable				Error Message	
19::FILE ACCESS ERROR	User is not authorised, or has supplied the wrong passnumber, or ⎕FERASE/⎕FRENAME on non-exclusive tie				Error Message	
20::FILE INDEX ERROR	An attempt is made to reference a non-existent component				Error Message	
21::FILE FULL	Operation would cause the file to exceed its file size limit				Error Message	
22::FILE NAME ERROR	File not found, file exists, incompatible file, or ⎕FERASE/⎕NERASE filename mismatch				Error Message	
23::FILE DAMAGED	Component file damaged — check with ⎕FCHK				Error Message	
24::FILE TIED	Attempt to tie file that is exclusively tied, or to exclusively tie file that is tied				Error Message	
25::FILE TIED REMOTELY	Attempt to tie file that another processor has exclusively tied, or to exclusively tie file that another processor has exclusively tied				Error Message	
26::FILE SYSTEM ERROR	Input/output error during file read/write — use ⎕FCHK when file becomes available				Error Message	
28::FILE SYSTEM NOT AVAILABLE	Lock attempt failed — may be due to opportunistic locks being enabled on Windows				Error Message	oplock
30::FILE SYSTEM TIES USED UP	User already has the maximum number of files tied				Error Message	⎕ftie fstie ⎕fcreate
31::FILE TIE QUOTA USED UP	Maximum number of file ties for this APL instance has been reached				Error Message	
32::FILE NAME QUOTA USED UP	User already has the maximum number of files named				Error Message	⎕fcreate ⎕ftie ⎕fstie ⎕frename
34::FILE SYSTEM NO SPACE	There is insufficient disk space				Error Message	
35::FILE ACCESS ERROR - CONVERTING FILE	Operating system did not allow APL to upgrade component file structure				Error Message	
38::FILE COMPONENT DAMAGED	Attempt is made to access a component that is not a valid APL object — use ⎕FCHK				Error Message	
52::FIELD CONTENTS RANK ERROR	Field content of rank greater than 2 is assigned to ⎕SM				Error Message	
53::FIELD CONTENTS TOO MANY COLUMNS	Content of a numeric or date field assigned to ⎕SM has more than one column				Error Message	
54::FIELD POSITION ERROR	Location of the field assigned to ⎕SM is outside the screen				Error Message	
55::FIELD SIZE ERROR					Error Message	
56::FIELD CONTENTS/TYPE MISMATCH	Field contents assigned to ⎕SM does not conform with the given field type e.g. character content with numeric type				Error Message	
57::FIELD TYPE/BEHAVIOUR UNRECOGNISED	Field type or behaviour code assigned to ⎕SM is invalid				Error Message	
58::FIELD ATTRIBUTES RANK ERROR	The current video attribute assigned to ⎕SM is non-scalar but its rank does not match that of the field contents				Error Message	
59::FIELD ATTRIBUTES LENGTH ERROR	The current video attribute assigned to ⎕SM is non-scalar but its dimensions do not match those of the field contents				Error Message	
60::FULL-SCREEN ERROR	The required full screen capabilities are not available to ⎕SM				Error Message	
61::KEY CODE UNRECOGNISED	A key code supplied to ⎕SR or ⎕PFKEY is not recognised as a valid code, or attempt at creating a KeyPress event with invalid Input Code				Error Message	
62::KEY CODE RANK ERROR	A key code supplied to ⎕SR or ⎕PFKEY is not a scalar or a vector				Error Message	
63::KEY CODE TYPE ERROR	A key code supplied to ⎕SR or ⎕PFKEY is numeric or nested; i.e. is not a valid key code				Error Message	
70::FORMAT FILE ACCESS ERROR	The date format file to be used by ⎕SM does not exist or cannot be accessed				Error Message	
71::FORMAT FILE ERROR	The date format file to be used by ⎕SM is ill-formed				Error Message	
72::NO PIPES	The limit on the number of pipes communicating between tasks is during startup, ⎕SH, or use of an external variable				Error Message	
76::PROCESSOR TABLE FULL	The limit on the number of processes (tasks) that the computer system can support would be exceeded				Error Message	
84::TRAP ERROR	Searching for a definition set for the system variable ⎕TRAP, after a trappable error has occurred, caused WS FULL				Error Message	
90::EXCEPTION	A Microsoft .NET object threw an exception				Error Message	
92::TRANSLATION ERROR	The system cannot convert a character from Unicode to an Atomic Vector (⎕AV) index or vice versa				Error Message	⎕avu unicode classic codepage characterset charset encoding sbcs
99::INTERNAL ERROR	Severe system error — save your work(space), and report the issue to Dyalog				Error Message	
1000::any exception	Covers all exceptions (errors 1001–1009)			Exception	Error Message	try catch errorhandling trapping exception
1001::STOP VECTOR	Execution stopped due to ⎕STOP or stop bit set from editor			Exception	Error Message	halt inspect breakpoint
1002::WEAK INTERRUPT	Execution stopped by weak interrupt			Exception	Error Message	
1003::INTERRUPT	Execution stopped by strong interrupt			Exception	Error Message	
1004::INPUT INTERRUPT	EOF to ⎕ or soft interrupt to ⍞			Exception	Error Message	end-of-file
1005::EOF INTERRUPT	EOF when reading input from a file (when an input to APL is from a file)			Exception	Error Message	end-of-file
1006::TIMEOUT	Time limit specified by ⎕RTL exceeded while awaiting input through ⍞ or ⎕SR			Exception	Error Message	character input stdin prompt
1007::RESIZE	User resizes the ⎕SM window			Exception	Error Message	
1008::DEADLOCK	Two threads acquiring a hold of two different tokens, and then each asks to hold the other token			Exception	Error Message	
]CALC.Factors	Determine the prime factors of the argument	Non-syntax	Ucmd	CALC	User command	User commands that relate to manipulation of data ]Factors
]CALC.FromHex	Convert a list of hexadecimal representations of integers to a numeric vector	Non-syntax	Ucmd	CALC	User command	User commands that relate to manipulation of data ]FromHex
]CALC.PivotTable	Create a pivot table from an appropriate matrix	Non-syntax	Ucmd	CALC	User command	User commands that relate to manipulation of data ]PivotTable
]CALC.ToHex	Convert integer(s) to a vector of text vectors containing the hexadecimal representation of each number	Non-syntax	Ucmd	CALC	User command	User commands that relate to manipulation of data ]ToHex
]DEVOPS.DBuild	Run one or more DyalogBuild script files (.dyalogbuild)	Non-syntax	Ucmd	DEVOPS	User command	User commands that relate to development and operations ]DBuild
]DEVOPS.DTest	Run (a selection of) functions named test_* from a namespace, file or directory	Non-syntax	Ucmd	DEVOPS	User command	User commands that relate to development and operations ]DTest
]FILE.CD	Report (and, optionally, change) the current directory	Non-syntax	Ucmd	FILE	User command	User commands that relate to files ]CD
]FILE.Collect	Merge all the files with the specified path/name{-nnn} into a single file	Non-syntax	Ucmd	FILE	User command	User commands that relate to files ]Collect
]FILE.Compare	Compare two component files	Non-syntax	Ucmd	FILE	User command	User commands that relate to files ]Compare
]FILE.Edit	Open the specified native file as an editable text file	Non-syntax	Ucmd	FILE	User command	User commands that relate to files ]Edit
]FILE.Find	List line numbers and lines that contain the specified string for each file that has a match	Non-syntax	Ucmd	FILE	User command	User commands that relate to files ]Find
]FILE.Open	Open a file or directory with the specified application	Non-syntax	Ucmd	FILE	User command	User commands that relate to files ]Open
]FILE.Replace	Replace strings in files and return the number of changes made	Non-syntax	Ucmd	FILE	User command	User commands that relate to files ]Replace
]FILE.Split	Split a single file into (up to 999) smaller files	Non-syntax	Ucmd	FILE	User command	User commands that relate to files ]Split
]FILE.ToLarge	Transform component files in the specified directory from small-span to large-span	Non-syntax	Ucmd	FILE	User command	User commands that relate to files ]ToLarge
]FILE.ToQuadTS	Convert a component file timestamp (single float number) to ⎕TS format (vector of 7 numbers)	Non-syntax	Ucmd	FILE	User command	User commands that relate to files ]ToQuadTS
]FILE.Touch	Check whether the specified file exists in the current/specified location and create it if it cannot be found	Non-syntax	Ucmd	FILE	User command	User commands that relate to files ]Touch
]FN.Align	Align end-of-line comments	Non-syntax	Ucmd	FN	User command	User commands that relate to functions and operators ]Align
]FN.Calls	Produce the calling tree of a function in a class/namespace/scriptfile	Non-syntax	Ucmd	FN	User command	User commands that relate to functions and operators ]Calls
]FN.Compare	Compare two functions	Non-syntax	Ucmd	FN	User command	User commands that relate to functions and operators ]Compare
]FN.Defs	List single-line dfns, dops, derived functions and trains	Non-syntax	Ucmd	FN	User command	User commands that relate to functions and operators ]Defs
]FN.DInput	Define a multi-line dfn, dop or derived function/operator, or execute a multi-line expression	Non-syntax	Ucmd	FN	User command	User commands that relate to functions and operators ]DInput
]FN.Latest	List functions modified since a specified date (default is today), most-recently-changed first	Non-syntax	Ucmd	FN	User command	User commands that relate to functions and operators ]Latest
]FN.ReorderLocals	Sort local names in the header of tradfns and tradops	Non-syntax	Ucmd	FN	User command	User commands that relate to functions and operators ]ReorderLocals
]LINK.Add	Associate item in linked namespace with new file/directory in corresponding directory	Non-syntax	Ucmd	LINK	User command	User commands for namespace-directory synchronisation (see https//github.com/dyalog/link/wiki) ]Add
]LINK.Break	Break link between namespace and corresponding directory	Non-syntax	Ucmd	LINK	User command	User commands for namespace-directory synchronisation (see https//github.com/dyalog/link/wiki) ]Break
]LINK.CaseCode	Append filename with numeric encoding of capitalisation	Non-syntax	Ucmd	LINK	User command	User commands for namespace-directory synchronisation (see https//github.com/dyalog/link/wiki) ]CaseCode
]LINK.Create	Link a namespace with a directory (create one or both if absent)	Non-syntax	Ucmd	LINK	User command	User commands for namespace-directory synchronisation (see https//github.com/dyalog/link/wiki) ]Create
]LINK.Export	Export a namespace to a directory (create the directory if absent); does not create a link	Non-syntax	Ucmd	LINK	User command	User commands for namespace-directory synchronisation (see https//github.com/dyalog/link/wiki) ]Export
]LINK.Expunge	Erase item and associated file	Non-syntax	Ucmd	LINK	User command	User commands for namespace-directory synchronisation (see https//github.com/dyalog/link/wiki) ]Expunge
]LINK.GetFileName	Return name of file associated with item	Non-syntax	Ucmd	LINK	User command	User commands for namespace-directory synchronisation (see https//github.com/dyalog/link/wiki) ]GetFileName
]LINK.GetItemName	Return name of item associated with file	Non-syntax	Ucmd	LINK	User command	User commands for namespace-directory synchronisation (see https//github.com/dyalog/link/wiki) ]GetItemName
]LINK.Import	Import a namespace from a directory (create the namespace if absent); does not create a link	Non-syntax	Ucmd	LINK	User command	User commands for namespace-directory synchronisation (see https//github.com/dyalog/link/wiki) ]Import
]LINK.List	List active namespace-directory links	Non-syntax	Ucmd	LINK	User command	User commands for namespace-directory synchronisation (see https//github.com/dyalog/link/wiki) ]List
]LINK.Refresh	Fully synchronise namespace-directory content	Non-syntax	Ucmd	LINK	User command	User commands for namespace-directory synchronisation (see https//github.com/dyalog/link/wiki) ]Refresh
]MSWIN.Assemblies	List all .NET assemblies currently loaded into memory	Non-syntax	Ucmd	MSWIN	User command	User commands that relate to the Microsoft Windows operating system ]Assemblies
]MSWIN.Caption	Query or change window captions	Non-syntax	Ucmd	MSWIN	User command	User commands that relate to the Microsoft Windows operating system ]Caption
]MSWIN.CopyReg	Copy registry entries to file and, optionally, between Dyalog versions	Non-syntax	Ucmd	MSWIN	User command	User commands that relate to the Microsoft Windows operating system ]CopyReg
]MSWIN.FileAssociations	Change the file associations of Dyalog workspaces, applications and scripts (.dws, .dyapp and .dyalog files)	Non-syntax	Ucmd	MSWIN	User command	User commands that relate to the Microsoft Windows operating system ]FileAssociations
]MSWIN.GUIProps	List property names and values for given or current object	Non-syntax	Ucmd	MSWIN	User command	User commands that relate to the Microsoft Windows operating system ]GUIProps
]MSWIN.KeyPress	Return message arguments of KeyPress events	Non-syntax	Ucmd	MSWIN	User command	User commands that relate to the Microsoft Windows operating system ]KeyPress
]NS.ScriptUpdate	Synchronise namespace/class script to match current content	Non-syntax	Ucmd	NS	User command	User commands that relate to namespaces ]ScriptUpdate
]NS.Summary	Summarise (scope, size, syntax) the functions in a namespace/class/scriptfile	Non-syntax	Ucmd	NS	User command	User commands that relate to namespaces ]Summary
]NS.Xref	Describe the inter-object cross-references in a class/namespace/scriptfile	Non-syntax	Ucmd	NS	User command	User commands that relate to namespaces ]Xref
]OUTPUT.Box	Display output with borders indicating shape, type and structure	Non-syntax	Ucmd	OUTPUT	User command	User commands that affect the way items are displayed ]Box
]OUTPUT.Boxing	Display output with borders indicating shape, type and structure	Non-syntax	Ucmd	OUTPUT	User command	User commands that affect the way items are displayed ]Boxing
]OUTPUT.Disp	Display specified array with borders indicating sub-array shape and type	Non-syntax	Ucmd	OUTPUT	User command	User commands that affect the way items are displayed ]Disp
]OUTPUT.Display	Display specified array with borders indicating array and sub-array shape and type	Non-syntax	Ucmd	OUTPUT	User command	User commands that affect the way items are displayed ]Display
]OUTPUT.Find	Precede output with a reference to the line of code that generated it	Non-syntax	Ucmd	OUTPUT	User command	User commands that affect the way items are displayed ]Find
]OUTPUT.Format	Format text into vector of text vectors (or matrix if called from Session) to fit ⎕PW using specified margins	Non-syntax	Ucmd	OUTPUT	User command	User commands that affect the way items are displayed ]Format
]OUTPUT.HTML	Render HTML or SVG	Non-syntax	Ucmd	OUTPUT	User command	User commands that affect the way items are displayed ]HTML
]OUTPUT.Layout	Format text into vector of text vectors (or matrix if called from Session) to fit ⎕PW using margins inferred from the text	Non-syntax	Ucmd	OUTPUT	User command	User commands that affect the way items are displayed ]Layout
]OUTPUT.Plot	Plot data	Non-syntax	Ucmd	OUTPUT	User command	User commands that affect the way items are displayed ]Plot
]OUTPUT.Rows	Cut, wrap, fold or extend the display of output lines to fit the Session window	Non-syntax	Ucmd	OUTPUT	User command	User commands that affect the way items are displayed ]Rows
]PERFORMANCE.Profile	Report performance details (optionally through GUI)	Non-syntax	Ucmd	PERFORMANCE	User command	User commands that relate to consumption of computing resources ]Profile
]PERFORMANCE.RunTime	Report execution time of one or more expressions	Non-syntax	Ucmd	PERFORMANCE	User command	User commands that relate to consumption of computing resources ]RunTime
]PERFORMANCE.SpaceNeeded	Compute memory needed to run expression(s)	Non-syntax	Ucmd	PERFORMANCE	User command	User commands that relate to consumption of computing resources ]SpaceNeeded
]SALT.Boot	Boot from a file containing instructions or a function	Non-syntax	Ucmd	SALT	User command	User command covers for SALT functionality ]Boot
]SALT.Clean	Remove SALT tags from the ws or specific items so that SALT no longer saves changes to associated files	Non-syntax	Ucmd	SALT	User command	User command covers for SALT functionality ]Clean
]SALT.Compare	Compare two versions of a SALTed item	Non-syntax	Ucmd	SALT	User command	User command covers for SALT functionality ]Compare
]SALT.List	List files (default: .dyalog only) and directories in the specified directory	Non-syntax	Ucmd	SALT	User command	User command covers for SALT functionality ]List
]SALT.Load	Load item from native text file	Non-syntax	Ucmd	SALT	User command	User command covers for SALT functionality ]Load
]SALT.Refresh	Reload all SALTed items from their associated files	Non-syntax	Ucmd	SALT	User command	User command covers for SALT functionality ]Refresh
]SALT.RemoveVersions	Remove one or more versions of a file managed by SALT	Non-syntax	Ucmd	SALT	User command	User command covers for SALT functionality ]RemoveVersions
]SALT.Save	Save item in a native text file (default: same place if already SALTed)	Non-syntax	Ucmd	SALT	User command	User command covers for SALT functionality ]Save
]SALT.Set	Return one or all parameters or set one parameter	Non-syntax	Ucmd	SALT	User command	User command covers for SALT functionality ]Set
]SALT.Settings	Return one or all parameters or set one parameter	Non-syntax	Ucmd	SALT	User command	User command covers for SALT functionality ]Settings
]SALT.Snap	Save all new or modified items to native text files (unscripted namespaces become directories)	Non-syntax	Ucmd	SALT	User command	User command covers for SALT functionality ]Snap
]TOOLS.ADoc	Generate documentation automatically	Non-syntax	Ucmd	TOOLS	User command	Development and presentation user commands ]ADoc
]TOOLS.Calendar	Display calendar	Non-syntax	Ucmd	TOOLS	User command	Development and presentation user commands ]Calendar
]TOOLS.Chart	Chart the specified expression	Non-syntax	Ucmd	TOOLS	User command	Development and presentation user commands ]Chart
]TOOLS.Demo	Provide playback mechanism for live demonstrations	Non-syntax	Ucmd	TOOLS	User command	Development and presentation user commands ]Demo
]TOOLS.Help	Browse or get link to information about any APL concept	Non-syntax	Ucmd	TOOLS	User command	Development and presentation user commands ]Help
]TOOLS.Version	Report version numbers of APL, OS, SALT, UCMD, .NET and/or workspace	Non-syntax	Ucmd	TOOLS	User command	Development and presentation user commands ]Version
]TRANSFER.In	Import a workspace from a workspace transfer file	Non-syntax	Ucmd	TRANSFER	User command	User commands that convert workspaces between APL versions and dialects ]In
]TRANSFER.Out	Export the current workspace to a workspace transfer file	Non-syntax	Ucmd	TRANSFER	User command	User commands that convert workspaces between APL versions and dialects ]Out
]UCMD.UDebug	Facilitate debugging of user commands	Non-syntax	Ucmd	UCMD	User command	User commands that manage the user command framework ]UDebug
]UCMD.ULoad	Load a user command's script into the current namespace	Non-syntax	Ucmd	UCMD	User command	User commands that manage the user command framework ]ULoad
]UCMD.UMonitor	Gather user command execution data	Non-syntax	Ucmd	UCMD	User command	User commands that manage the user command framework ]UMonitor
]UCMD.UNew	Create one or more new user commands (optionally using a GUI)	Non-syntax	Ucmd	UCMD	User command	User commands that manage the user command framework ]UNew
]UCMD.UReset	Refresh cache of all user command definitions	Non-syntax	Ucmd	UCMD	User command	User commands that manage the user command framework ]UReset
]UCMD.USetup	Run Setup from setup.dyalog	Non-syntax	Ucmd	UCMD	User command	User commands that manage the user command framework ]USetup
]UCMD.UVersion	Report version information of a user command	Non-syntax	Ucmd	UCMD	User command	User commands that manage the user command framework ]UVersion
]WS.Check	Perform workspace integrity check	Non-syntax	Ucmd	WS	User command	User commands that relate to workspaces ]Check
]WS.Compare	Compare two workspaces	Non-syntax	Ucmd	WS	User command	User commands that relate to workspaces ]Compare
]WS.Document	List (part of) the workspace content, displaying each item separately	Non-syntax	Ucmd	WS	User command	User commands that relate to workspaces ]Document
]WS.FindRefs	Follow references in the workspace until all references have been found	Non-syntax	Ucmd	WS	User command	User commands that relate to workspaces ]FindRefs
]WS.FnsLike	List functions and operators matching a pattern	Non-syntax	Ucmd	WS	User command	User commands that relate to workspaces ]FnsLike
]WS.Locate	Locate (and, optionally, replace) strings in the workspace	Non-syntax	Ucmd	WS	User command	User commands that relate to workspaces ]Locate
]WS.Map	Display namespace treeview	Non-syntax	Ucmd	WS	User command	User commands that relate to workspaces ]Map
]WS.NamesLike	List names followed by their class matching the pattern	Non-syntax	Ucmd	WS	User command	User commands that relate to workspaces ]NamesLike
]WS.Nms	List names followed by their class matching the pattern	Non-syntax	Ucmd	WS	User command	User commands that relate to workspaces ]Nms
]WS.ObsLike	List objects matching the pattern	Non-syntax	Ucmd	WS	User command	User commands that relate to workspaces ]ObsLike
]WS.Peek	Execute expression in temporary copy of workspace	Non-syntax	Ucmd	WS	User command	User commands that relate to workspaces ]Peek
]WS.SizeOf	Report size of variables in descending order	Non-syntax	Ucmd	WS	User command	User commands that relate to workspaces ]SizeOf
]WS.VarsLike	List variables matching the pattern	Non-syntax	Ucmd	WS	User command	User commands that relate to workspaces ]VarsLike
(×/⍴)Y	Count the number of elements in an array	Tacit	Monadic Function		Array Properties	tallyall ⍴, numberofelements numberofitems howmanyelements howmanyitems whole array scalars countall ×/⍴ ×⌿⍴ ≢, ⍴,
(+/,)N	Sum all elements in an array	Tacit	Monadic Function		Arithmetic	sumall +⌿, grandtotal sumitems
(+/,)B	Number of trues	Tacit	Monadic Function		Boolean/Logical	sumall howmanytrue
(≢⍸)B	Number of trues	Tacit	Monadic Function		Boolean/Logical	+/, +⌿, sum all howmanytrue
(≢⍴)Y	Rank (number of dimensions) of Y	Tacit	Monadic Function		Array Properties	howmanyaxes numberofaxes axiscount ⍴⍴
X(⊃⍷)Y	If Y begins with X	Tacit	Dyadic Function		Boolean/Logical	prefixof startswith
captured_output←⎕CMD cmd	Execute Microsoft Windows cmd	System	Function	System	System Function	shell os operatingsystem commandprocessor ⎕sh )cmd
r←⎕CSV data	Convert CSV data data to APL array	System	Function	Data Conversion	System Function	tsv table import parse commaseparatedvalues tabseparatedvalues characterseparatedvalues
r←data {header} ⎕CSV format_spec	Convert APL array to CSV data	System	Function	Data Conversion	System Function	tsv table export generate commaseparatedvalues tabseparatedvalues characterseparatedvalues
r←type ⎕DR x	Interpret internal representation as array of type 'type'	System	Function	Array Properties	System Function	datarepresentation internalrepresentation
type←⎕DR x	Return internal data type of x	System	Function	Array Properties	System Function	datarepresentation internalrepresentation
r←{format_spec} ⎕FMT x	Convert x into character matrix according to spec	System	Function	Data Conversion	System Function	displayform formatbyspecification cobolpictureformat fortranformatter ⎕df ⍕
r←{flag} ⎕JSON data	APL array from (flag=0) or to (flag=1) JSON text	System	Function	Data Conversion	System Function	javascriptobjectnotation importexport generateparse
name←{type}{shape} ⎕MAP file {rw} {offset}	Associate name with mapped file (from offset)	System	Function	File Access	System Function	memorymap array
{name}←{name} ⎕NA fn_desc	Associate name with external DLL function	System	Function	System	System Function	.dll .so .dylib .a c++ dynamiclinkedlibrary sharedlibrary dynamiclibrary
r←{tn} (reg_ex ⎕S trans) text	Search text for PCRE reg_ex returning trans (optional tn to spool output to native file)	System	Operator	Data Conversion	System Function	regex search find locate perlcompatibleregularexpression
r←{tn} (reg_ex ⎕R trans) text	Replace text selected by reg_ex using trans	System	Operator	Data Conversion	System Function	regex substitute pcre perlcompatibleregularexpression
captured_output←⎕SH cmd	Execute UNIX shell cmd	System	Function	System	System Function	shell os operatingsystem commandprocessor linux macos aix rasbianpios ⎕cmd )sh
r←{encoding} ⎕UCS vec	Map characters to/from Unicode code points	System	Function	Data Conversion	System Function	utf-8 utf8 utf-16 utf16 utf-32 utf32 encoding ucs-4 ucs4 ucs-2 ucs2 iso10646 ord chr ascii latin-1 windows-1252 ansi
⎕USING ←ns_specs	Set search path for .NET Namespace(s)	System	Variable	System	System Function	microsoft mscorlib.dll dotnet
valid nums←{seps} ⎕VFI text	Validate numeric input: returns Boolean validity mask and numeric vector of converted input	System	Function	Data Conversion	System Function	verifyandfixinput atoi parse numbers fields formdata
r←{xml_options} ⎕XML data	XML string to/from APL array	System	Function	Data Conversion	System Function	extensiblemarkuplanguage xhtmltag xmltag
r←⎕AI	User number, compute, connect, keying time (ms)	System	Constant	System	System Function	accountinformation session milliseconds uptime useridentification cpuusage processorusage idle
user_name←⎕AN	User (login) name	System	Constant	System	System Function	accountname
⎕CLEAR	Clear the active workspace	System	Constant	System	System Function	new refresh empty # erase delete remove purge expunge reset all )clear
{0⍴⊂''}←{names} ⎕CY file	Copy (optionally selected) names from saved ws	System	Function	File Access	System Function	import load use transfer import load include item object otherworkspace )copy
{num}←⎕DL num	Delay and return seconds actually delayed	System	Function	System	System Function	await sleep idle
⎕LOAD file	Load saved workspace	System	Function	File Access	System Function	open fetch get bringin )load
⎕OFF	Terminate the APL session	System	Constant	System	System Function	exit stop close )off
⎕PATH ←nss	Set search path (blank-separated list of namespace names) for functions and operators	System	Variable	System	System Function	stdlib standardlibrary include
{r}←{flag} ⎕SAVE file	Save active ws (with stack if flag=0) in file with 0 returned on reload of saved ws, else 1	System	Function	File Access	System Function	archive store )save
⎕SE	Session object	System	Namespace	System	System Function	environment gui persistent utilities
numvec←⎕TS	Current time (y m d h m s ms)	System	Constant	System	System Function	now current localtimestamp datetime
r←{selector} ⎕AT names	Syntactical attributes of named functions or operators	System	Function	System	System Function	valence arity shyness locked niladicmonadicdyadicambivalent functionoperator variadic properties author timestamp modificationtime result
r←⎕CR name	Source of function or operator as a character matrix	System	Function	Data Conversion	System Function	code representation
{names}←{types} ⎕ED names	Open one or more objects (names) in the editor	System	Function	System	System Function	open modify code source definition define value )ed
{boolvec}←⎕EX names	Delete named objects from the active workspace (1 if each name is now free for use, else 0)	System	Function	System	System Function	expunge erase remove item )erase
{r}←⎕FX cr/nr/vr/or	Name of fn or op defined from its matrix, nested, vector or object representation (or failing line no)	System	Function	Data Conversion	System Function	define fix code source function operator
{level}←{level} ⎕LOCK name/ref	Hide source and optionally disallow suspension	System	Function	System	System Function	secure closedsource encrypt
r←⎕NR name	Source of function or operator as a nested vector	System	Function	Data Conversion	System Function	code representation vtv character
state|data←{settings} ⎕PROFILE action	"Profile" CPU or elapsed time consumption of code	System	Function	System	System Function	performance monitor statistics stats observe processor resources
names←⎕REFS name	List the names referenced by a function	System	Function	System	System Function	xref crossreference identifiers symbols
{linenos}←{linenos} ⎕STOP name	Enable/report the current state of stops for a function	System	Function	System	System Function	halt inspect breakpoint
{linenos}←{linenos} ⎕TRACE name	Enable/report the current state of tracing for a function	System	Function	System	System Function	monitor
r←⎕VR name	Source of function or operator as a simple vector	System	Function	Data Conversion	System Function	code representation
⎕BASE.name	Invoke the base class definition of name	Syntax	Namespace	System	System Function	template up :base
class_hierarchy←⎕CLASS ref	Class hierarchy for a class/instance	System	Function	System	System Function	parents ancestors
ref←{class/interface} ⎕CLASS instance	Extract specific interface to an instance	System	Function	Data Conversion	System Function	parents ancestors
{old_ns}←{names} ⎕CS ns	Switch to a ns, optionally exporting names	System	Function	Data Conversion	System Function	change namespace into current ⎕this )cs
old_df←⎕DF char_array	Set the display form of the current space	System	Function	Data Conversion	System Function	visualrepresentation format ⍕ ⎕fmt
{ref}←{flags} ⎕FIX source	Define objects from source (vector of vectors or file name starting with 'file://')	System	Function	Data Conversion	System Function	define ⎕fx code source function operator namespace class interface
refs←⎕INSTANCES class	Current instances of class	System	Function	Data Conversion	System Function	children derived
instance←⎕NEW class {conargs}	Create an instance of class	System	Function	Data Conversion	System Function	.new
{me/ref}←{name} ⎕NS names/ns	Create (optionally named) namespace copying names or contents of ns into it	System	Function	Data Conversion	System Function	object make new construct collect )ns deepcopy clone
script←⎕SRC ref	The source code of a ref	System	Function	Data Conversion	System Function	representation script definition
ref←⎕THIS	Reference to the current namespace	System	Namespace	Data Conversion	System Function	here me myself
cn←x ⎕FAPPEND tn {pn}	Append x to end of file (optional passnumber)	System	Function	Component Files	System Function	dcf
r←⎕FAVAIL	1 if file system is available, else 0	System	Function	Component Files	System Function	dcf active usable accessible
cns←{fchk_opts} ⎕FCHK file	Inspect and optionally repair file 	System	Function	Component Files	System Function	dcf check externalvariable
{tn}←file ⎕FCOPY tn {pn}	Create copy of named file tied to tn	System	Function	Component Files	System Function	dcf duplicate
{tn}←file ⎕FCREATE tn {64}	Create new component file	System	Function	Component Files	System Function	dcf touch make
{cn}←⎕FDROP tn n {pn}	Drop n components from start (n>0) or end (n<0)	System	Function	Component Files	System Function	dcf remove trim slice resize cap clamp
{tn}←file ⎕FERASE tn {pn}	Erase exclusively-tied file	System	Function	Component Files	System Function	dcf delete expunge remove
r←⎕FHIST tn {pn}	Return tied file tn's history (user/time of last operations)	System	Function	Component Files	System Function	dcf log
{tn}←⎕FHOLD tn {pn}	Hold tied file tn (can be a matrix of tn {pn})	System	Function	Component Files	System Function	dcf block wait synchronisation synchronization parallel threading greenthreading
names←⎕FLIB folder	List component files in the specified folder	System	Function	Component Files	System Function	dcf ls dir
names←⎕FNAMES	Names of tied files in same order as ⎕FNUMS	System	Constant	Component Files	System Function	dcf
tns←⎕FNUMS	Vector containing tie numbers of tied files	System	Constant	Component Files	System Function	dcf access
r←pnames ⎕FPROPS tn {pn}	Current values of the named properties of file tn	System	Function	Component Files	System Function	dcf settings query get retreive
r←nvpairs ⎕FPROPS tn {pn}	Set properties of file tn using name-value pairs	System	Function	Component Files	System Function	dcf settings update modify change
ax_mx←⎕FRDAC tn {pn}	Read access matrix	System	Function	Component Files	System Function	dcf
r←⎕FRDCI tn cn {pn}	Size in bytes, user and timestamp of last update to cn	System	Function	Component Files	System Function	dcf readaccess
r←⎕FREAD tn cn {pn}	The array stored in component(s) cn in file tn	System	Function	Component Files	System Function	dcf get retrieve load copy fetch
{tn}←file ⎕FRENAME tn {pn}	Rename exclusively-tied file	System	Function	Component Files	System Function	dcf
{cn}←x ⎕FREPLACE tn cn {pn}	Store array x in component number cn	System	Function	Component Files	System Function	dcf put overwrite store
{tn}←{bytes} ⎕FRESIZE tn {pn}	Compact exclusively-tied file tn and set its max size	System	Function	Component Files	System Function	dcf maximum limit clamp
r←⎕FSIZE tn {pn}	First cn, next-free cn, used and max size in bytes	System	Function	Component Files	System Function	dcf maximum
{tn}←ax_mx ⎕FSTAC tn {pn}	Set access matrix for file tn	System	Function	Component Files	System Function	dcf
{tn}←file ⎕FSTIE tn {pn}	Share-tie component file	System	Function	Component Files	System Function	dcf multiple parallel
{tn}←file ⎕FTIE tn {pn}	Exclusively tie component file	System	Function	Component Files	System Function	dcf single
{tn}←⎕FUNTIE tns	Untie one or more component files	System	Function	Component Files	System Function	dcf release
numvec←⎕LC	Lines at which each function on stack is suspended	System	Constant	Workspace	System Function	linecounter number state
⎕LX←expression	Expression to be executed when workspace is loaded	System	Variable	Workspace	System Function	latentexpression autoexec bootstrap startup automatic ⎕load )load )xload
numvec←⎕NC names	Class of each name (fractional if names is nested)	System	Function	Workspace	System Function	itemtype
names←{init_chars} ⎕NL nums	Active names of specified class(es), optionally filtered	System	Function	Workspace	System Function	namelist classes
names←{init_chars} ⎕NL ¯9.4	Active classes, optionally filtered	System	Function	Workspace	System Function	namelist )classes
names←{init_chars} ⎕NL ¯8.6	Active events, optionally filtered	System	Function	Workspace	System Function	namelist )events
names←{init_chars} ⎕NL ¯3	Active functions, optionally filtered	System	Function	Workspace	System Function	namelist )fns
names←{init_chars} ⎕NL ¯9.5 ¯9.7	Active interfaces, optionally filtered	System	Function	Workspace	System Function	namelist )interfaces
names←{init_chars} ⎕NL ¯3.6	Active methods, optionally filtered	System	Function	Workspace	System Function	namelist )methods
names←{init_chars} ⎕NL ¯9	Active objects, optionally filtered	System	Function	Workspace	System Function	namelist )objects )obs
names←{init_chars} ⎕NL ¯4.1	Active operators, optionally filtered	System	Function	Workspace	System Function	namelist )ops
names←{init_chars} ⎕NL ¯2.3	Active properties, optionally filtered	System	Function	Workspace	System Function	namelist )props
names←{init_chars} ⎕NL ¯2.1	Active variables, optionally filtered	System	Function	Workspace	System Function	namelist )vars
space_references←⎕RSI	The spaces from which functions on stack were called	System	Function	Workspace	System Function	referencestateindicator namespaces suspended
{r}←⎕SHADOW names	Make names local to most recently invoked defined fn	System	Function	Workspace	System Function	localise localize encapsulate shield scope
names←⎕SI	Vector of names of functions on the stack	System	Constant	Workspace	System Function	stateindicator )si
bytes←⎕SIZE names	Space consumed by code/data attached to names	System	Function	Workspace	System Function	workspaceusage workspaceuse memoryconsumption
r←⎕STACK	Definition of each function on the stack	System	Constant	Workspace	System Function	state definitions
r←⎕STATE name	Details of the usage of name at each level of the stack	System	Function	Workspace	System Function	state definition )sinl
bytes←⎕WA	Workspace available (unused)	System	Constant	Workspace	System Function	freememory
⎕WSID←name	The name of the active workspace	System	Function	Workspace	System Function	filename currentworkspace )wsid
names←⎕XSI	Full names of functions on the stack	System	Constant	Workspace	System Function	extended state namespacepath references )si
tdno←⎕TCNUMS tdno	The child thread numbers of the given thread numbers	System	Function	System	System Function	synchronisation synchronization parallel threading greenthreading
tdno←⎕TID	The number of the current thread	System	Constant	System	System Function	synchronisation synchronization parallel threading greethread )tid
{tdno}←{0|1} ⎕TKILL tdno	Kill threads tdno and (default 1 is true) descendants	System	Function	System	System Function	synchronisation synchronization parallel threading stop terminate greenthreading
⎕TNAME←{tdname}	Report/set the name (tdname) of the current thread	System	Variable	System	System Function	synchronisation synchronization parallel threading greenthreading
tdno←⎕TNUMS	Report the numbers of all current threads	System	Constant	System	System Function	synchronisation synchronization parallel threading greenthreading
tdres←⎕TSYNC tdno	Wait for threads tdno to terminate and return results	System	Function	System	System Function	synchronisation synchronization parallel threading greenthreading
{tkval}←{timeout} ⎕TGET tktype	Remove tokens of types tktype from the token pool	System	Function	System	System Function	synchronisation synchronization parallel threading greenthreading
tktype←⎕TPOOL	Type of each token in the token pool	System	Constant	System	System Function	synchronisation synchronization parallel threading greenthreading
{tdno}←{tkval} ⎕TPUT tktype	Add tokens to pool and return any tdno this unblocks	System	Function	System	System Function	synchronisation synchronization parallel threading greenthreading
tktype←⎕TREQ tdno	List token types that threads tdno are waiting for	System	Function	System	System Function	synchronisation synchronization parallel threading greenthreading
{r}←{flags} ⎕MKDIR dir	Create or ensure existence of directory dir	System	Function	Native Files	System Function	md newfolder make
{offset}←x ⎕NAPPEND tn type	Append x using internal representation type	System	Function	Native Files	System Function	extend concatenate
{tn}←file ⎕NCREATE tn	Create file (tn 0 to generate tn)	System	Function	Native Files	System Function	make new
{r}←{flags} ⎕NDELETE file	Delete file (if flags 1, tolerate 'file not found')	System	Function	Native Files	System Function	erase remove expunge )drop
{tn}←file ⎕NERASE tn	Erase tied file tn	System	Function	Native Files	System Function	delete remove expunge drop
r←⎕NEXISTS file	Return 1 if file exists, else 0	System	Function	Native Files	System Function	present present check lookfor
r←{encoding} ⎕NGET file {flags}	Read Unicode text file as lines into array r	System	Function	Native Files	System Function	fetch read load get
t←{properties}1 ⎕NINFO tn/file	Return values of properties 1 for file tn/file (⍠1 will expand wildcards in file)	System	Function	Native Files	System Function	dir ls list information
{rarg}←lock {secs} ⎕NLOCK tn {offset} {bytes}	Change lock status of file region 0:unlock, 1:read, 2:write (optional timeout in seconds)	System	Function	Native Files	System Function	restrict access seal passcode
file←⎕NNAMES	Names of tied files in same order as ⎕NNUMS	System	Constant	Native Files	System Function	
tns←⎕NNUMS	Tie numbers of tied files	System	Constant	Native Files	System Function	
r←{flags} ⎕NPARTS file	Splits file into path, base name and extension (normalising file if flags=1)	System	Function	Native Files	System Function	directory
{bytes}←vec ⎕NPUT file {flags}	Write (overwrite if flags 1) lines to Unicode file	System	Function	Native Files	System Function	dump cat
vec←⎕NREAD tn type n {offset}	Read n items of specified type from file tn	System	Function	Native Files	System Function	load fetch get
{tn}←file ⎕NRENAME tn	Rename tied file to have name file	System	Function	Native Files	System Function	move
{end_offset}←x ⎕NREPLACE tn offset {typ}	Write x to file at offset as type	System	Function	Native Files	System Function	overwrite
{tn}←{bytes} ⎕NRESIZE tn	Resize file to have specified size	System	Function	Native Files	System Function	cap limit clamp
bytes←⎕NSIZE tn	Current size of file	System	Function	Native Files	System Function	bytes diskspace
{tn}←file ⎕NTIE tn {file_mode}	Tie a file in the specified mode	System	Function	Native Files	System Function	
{tn}←⎕NUNTIE tn	Untie one or more files	System	Function	Native Files	System Function	release
{r}←⎕DQ object	Process events generated by object(s)	System	Function	Native Files	System	dequeue wait
{exported}←{flags} ⎕EXPORT nm	Specify fns to be exported by an OLEClient	System	Function	Native Files	System	
{r}←{action} ⎕NQ object event {params}	Enqueue an event for processing	System	Function	Native Files	System	push request
{name}←{name} ⎕WC type {ordered_props} {nvpairs} …	Create an instance of a built-in type and set property values	System	Function	Native Files	System	window gui new
r←{object} ⎕WG props…	The values of the properties of an object	System	Function	Native Files	System	window gui get fetch query
children←{class} ⎕WN parent	Child objects (of class) of parent	System	Function	Native Files	System	window gui names
{old_values}←{object} ⎕WS nvpairs…	Set the values of one or more specified properties of object	System	Function	Native Files	System	window gui assign
⎕DMX	Namespace containing details of most recent error in current thread	System	Namespace	Error Message	System	extended diagnostic
⎕EXCEPTION	Details of most recent .NET exception	System	Namespace	Error Message	System	
{r}←{msg} ⎕SIGNAL errno/{nvpairs}…	Signal an error; nvpairs set ⎕DMX props	System	Function	Error Message	System	throw emulate
{0}←⎕SIGNAL 0	Reset error-related system constants	System	Function	Error Message	System	clear
⎕TRAP←trap_spec	Define error handling	System	Function	Error Message	System	try catch
Xv(8⌶)Yv	Inverted Table Index-of (Xv⍳Yv)	I-beam	Dyadic Function		Index Generation	iota indicesin indexof position columndatabase
As(85⌶)Dv	Execute (⍎) Silent Expression 	I-beam	Dyadic Function		Data Conversion	evaluate apl compute numbers atoi run call parseexpression shy noresult
127⌶⍬	Overwrite Free Pockets	I-beam	Constant		System	memory wipe
180⌶Dv	Canonical Representation (⎕CR) for methods	I-beam	Function		Data Conversion	code representation oo classes private instance
181⌶Y	Unsqueezed Type (⎕DR)	I-beam	Function		Array Properties	datarepresentation internalrepresentation
200⌶Dv	Syntax Colouring	I-beam	Function		Data Conversion	coloring highlighting parse parsing tokentypes
201⌶⍬	Syntax Colour Tokens	I-beam	Constant		Data Conversion	coloring highlighting parse parsing tokentypes
Mv(219⌶)Jv	Compress/Decompress Vector of Short Integers	I-beam	Function		Data Conversion	lz4 zlib gzip deflate uncompress inflate
As(220⌶)Y	Serialise/Deserialise Array	I-beam	Function		Data Conversion	
{Xs}(400⌶)Y	Compiler Control	I-beam	Function		System	performance
600⌶Js	Trap Control	I-beam	Function		System	debugging repl try catch error handling
739⌶0	Temporary Directory	I-beam	Constant		System	tmp
{Xs}(819⌶)Y	Case Convert	I-beam	Function		Data Conversion	casefold casemap uppercase lowercase lettercase
900⌶Y	Called Monadically (tradfns/tradops only)	I-beam	Function		Function Application	arity ambivalent ambivalence variadic leftargument ⎕nc
0=⎕NC'⍺'	Called Monadically (dfns/dops only)			Function Application	Expression	arity ambivalent ambivalence variadic leftargument 900⌶
950⌶⍬	Loaded Libraries	I-beam	Constant		System	⎕na .dll .so .dylib .a c++ dynamiclinkedlibrary sharedlibrary dynamiclibrary
1111⌶Jv	Number of Threads	I-beam	Function		Function Application	multithreading parallelprocessing performance affinity
1112⌶Js	Parallel Execution Threshold	I-beam	Function		Function Application	multithreading parallelprocessing performance affinity
X(1159⌶)Y	Update Function Time and User Stamp	I-beam	Function		System	⎕at properties operator
Is(1500⌶)Y	Hash Array	I-beam	Function		Array Properties	performance hashing
Iv(2000⌶)Jv	Memory Manager Statistics	I-beam	Function		System	management performance
2002⌶Js	Specify Workspace Available (⎕WA)	I-beam	Function		System	freememory
{Av}(2010⌶)Yv	Update DataTable	I-beam	Function		Expression	databinding assignment redefine inplace update
{Av}(2011⌶)Yv	Read DataTable	I-beam	Function		Expression	databinding get fetch value
2014⌶Y	Remove Data Binding	I-beam	Function		Array Properties	disconnect databinding
{Xs}(2015⌶)Dv	Create Data Binding Source	I-beam	Function		Array Properties	connect
2016⌶Yv	Create .NET Delegate	I-beam	Function		Array Properties	make new
2017⌶Dv	Identify .NET Type	I-beam	Function		Array Properties	
2022⌶0	Flush Session Caption	I-beam	Constant		System	titlebar
2023⌶0	Close all Windows	I-beam	Constant		System	shut
2035⌶Dv	Set Dyalog Pixel Type ('ScaledPixel'/'RealPixel')	I-beam	Function		System	scaling highresolution hires retina px
{X}(2041⌶)Js	Override COM Default Value	I-beam	Function		System	
2100⌶0	Export Workspace to in-Memory .NET Assembly	I-beam	Constant		System	
2101⌶0	Close .NET AppDomain	I-beam	Constant		System	
2400⌶Bs	Set Workspace Save Options	I-beam	Function		System	clear trace stop monitor flags breakpoints halt inspect monitor
2401⌶Bs	Expose Root Properties	I-beam	Function		System	oo dotting
2501⌶Bs	Discard incoming .NET thread on exit	I-beam	Function		System	
2501⌶0	Discard parked incoming .NET threads	I-beam	Constant		System	
2503⌶Js	Mark Thread as Uninterruptible	I-beam	Function		System	greenthreading launch run suspend suspension
2520⌶Bs	Use Separate Thread For .NET	I-beam	Function		System	
2701⌶Bs	Continue Autosave	I-beam	Function		System	)continue
3002⌶Bs	Disable Component Checksum Validation	I-beam	Function		System	dcf
{Cv}(3500⌶)Dv	Send Text Dv to RIDE-embedded Browser with caption Cv	I-beam	Function		System	html svg rendering cef remoteintegrateddevelopmentenvironment
3501⌶0	Connected to the RIDE	I-beam	Constant		System	remoteintegrateddevelopmentenvironment
3502⌶Yv	Manage RIDE Connections	I-beam	Function		System	remoteintegrateddevelopmentenvironment
4000⌶⍬	Fork New Task	I-beam	Constant		System	aix multithreading parallel
4001⌶Dv	Change User	I-beam	Function		System	aix multithreading parallel
4002⌶⍬	Reap Forked Tasks	I-beam	Constant		System	aix multithreading parallel
4007⌶⍬	Signal Counts	I-beam	Constant		System	SIGHUP SIGINT SIGQUIT SIGTERM SIGWINCH
5176⌶0	List Loaded Files	I-beam	Constant		System	⎕fix source text
5177⌶⍬	List Loaded File Objects	I-beam	Constant		System	⎕fix source text
5178⌶Yv	Remove Loaded File Object Info	I-beam	Function		System	⎕fix source text
5179⌶Yv	Loaded File Object Info	I-beam	Function		System	⎕fix source text
As(7162⌶)Dv	JSON Translate Name	I-beam	Function		Data Conversion	⎕json namemangling
8415⌶Nm	Singular Value Decomposition	I-beam	Function		Mathematical	⌹
50100⌶Js	Line Count	I-beam	Function		System	⊃⎕lc ↑⎕lc linecounter number state stack suspension
(819⌶819⌶⍨∘1)D	Normalise Case	Tacit	Monadic Function			lettercase caseless caseinsensitive normalize
C f{(⍵⍵ ⍺) ⍺⍺ (⍵⍵ ⍵)}(819⌶819⌶⍨∘1) D	Caseless operation	Tacit	Dyadic Function	Monadic Operator		lettercase caseless caseinsensitive comparison lookup
⊂⍤¯1∘↑Yv	Pad elements of vector of arrays Yv to equal shape	Tacit	Monadic Function		Structural	
(X{(⊂⍋⍵⍵,⍨⍳≢⍵)⌷⍵,⍺⍺}Jv)Y	Insert X after positions Jv in Y (≢Jv)=≢X	Dop	Monadic Function	Dyadic Operator	Structural	slotin
80=⎕DR''	Is this Dyalog APL Unicode?	Constant			System	
82=⎕DR''	Is this Dyalog APL Classic?	Constant			System	
{⍵:X ⋄ Y}Bs	Ternary: if Bs then execute and return X else execute and return Y	Dfn	Monadic Function	Structure	Expression	conditionaloperator inlineiff ternaryiff ?:
X⊣⍣Bs⊢Y	Ternary: if Bs then return X else return Y	Dfn	Monadic Function	Structure	Expression	conditionaloperator inlineiff ternaryiff ?:
As f{⍺:⍺⍺ ⍵ ⋄ ⍵⍵ ⍵}g Y	Ternary: if As then apply f to Y else apply g to Y1	Dop	Dyadic Function	Dyadic Operator	Function Application	conditionaloperator inlineiff ternaryiff ?:
y←dfns.Cholesky x	Decomposition of Hermitian positive-definite matrix	Dfn	Function			Choleskydecomposition
rslt←{x} (u dfns.Cut case) y	Cut operator	Dop		Dyadic Operator		Cut gameoflife GoL
{larg}(fn dfns.Depth k)rarg	Apply fn at depths k	Dop		Dyadic Operator		depth rank
z←{larg}(fn dfns.H)rarg	Quaternion arithmetic	Dop		Monadic Operator		Quaternion
distribution←average + standard_deviation × dfns.NormRand (shape)	Random numbers with normal distribution	Dfn	Function			
commit←(⎕NS'') dfns.UndoRedo	Derive undo/redo function	Dop		Monadic Operator		undo redo
V←{rcols←1..} dfns.X M	Exact cover: Knuth's Algorithm X	Dfn	Function			exactcover AlgorithmX exactcover gameofsudoku N-Queens pentomino NQueens
rslt←{larg} I dfns._fk J fk_ K rarg	Simulation of "fork" syntax	Dop		Dyadic Operator		hook fork co-operator cooperator
rslt←(func dfns.acc) argt	Accumulating reduction	Dop		Monadic Operator		reduction
digs←alph dfns.adic numb	Bijective base-⍺ numeration	Dfn	Function			k-adicnumbers shortlex bijectivenumeration unary kadicnumbers
val←list dfns.alget key	Value for key ⍵ from list ⍺	Dfn	Function			associationlist dictionary look-uptable symboltable graph lists lookuptable
val list←list dfns.alpop key	Value for key ⍵, and reduced list ⍺	Dfn	Function			associationlist dictionary look-uptable symboltable graph lists lookuptable
list←list dfns.alpush key val	List ⍺ extended with key-value pair ⍵	Dfn	Function			associationlist dictionary look-uptable symboltable graph lists lookuptable
list←list dfns.alset key val	List ⍺ with key-value ⍵ replacement	Dfn	Function			associationlist dictionary look-uptable symboltable graph lists lookuptable
rslt←(f dfns.alt g) mat	Alternant	Dop		Dyadic Operator		alternant determinant innerproduct SAX
{name}←{ref} dfns.ambiv namelist	Ambivalize traditional function	Dfn	Function			ambivalent tradfn
rslt←(f dfns.and g) arg	Sequential test	Dop		Dyadic Operator		lazyevaluation sequentialtest adjacentguard &&
alloc←{seats←435} dfns.apportion populations	Huntington-Hill apportionment	Dfn	Function			USHousepfRepresentatives apportionment assignment
enco←base (dfns.ary) ratnum	⍺-ary representation of rational ⍵	Dfn	Function			rationalnumber binary ternary IEEEFPprecision
vect← (fn dfns.ascan) vect	Associative vector scan	Dop		Monadic Operator		scanoperators
array←{ascan} (fn dfns.ascana) array	Associative higher rank scan	Dop		Monadic Operator		scanoperators
bmat←dfns.assign costs	Hungarian method cost assignment	Dfn	Function			assignment Hungarianmethod maximise optimise graph independentzeros
rslt←{⍺←⊢} (new dfns.at sel) old	Prefix-friendly @	Dop		Dyadic Operator		atoperator prefixagreement whereclause SigmaAPL semicolonseparator @
cmat←{attributes} dfns.attrib namelist	Function/operator attributes	Dfn	Function			attributes ⎕AT ⎕SIZE syntax name-clashproblem nameclashproblem
rslt←{larg)(op dfns.avl) rarg	Adelson-Velskii, Landis (AVL) trees	Dop		Monadic Operator		tree binarysearchtree typenotation expressiontransformation
bmat←{A CI} dfns.baby bmat	Manchester Small Scale Experimental Machine	Dfn	Function			SSEM firstcomputer assembler disassembler diversions bottom⊥ Baby
z←l (fn dfns.bags) r	Multisets/bags	Dop		Monadic Operator		multiset bags FinnAPLIdiomList
coded←dfns.base64 plain	Base64 encoding and decoding as used in MIME	Dfn	Function			Base64encoding MIME
prob←cond dfns.bayes prior	Bayes' formula	Dfn	Function			Bayesformula
{tape}←{tape} dfns.bf toks	Brainfuck	Dfn	Function			Brainfuck turingcomplete lists hyperator 2-adicnumbers Turingtape tape 2adicnumbers
cvec←{larg} (fn dfns.big) rarg	Arithmetic on large integers	Dop		Monadic Operator		infiniteprecision factorial
p←s dfns.birthday n	Probability of same birthday	Dfn	Function			birthday probability
cmat←{h v t←⍬ ⍬ 0} dfns.box text	Box the simple text array ⍵	Dfn	Function			border box box-drawingcharacters displayofarrays boxing boxdrawingcharacters
indx←(fun dfns.bsearch) range	Binary search	Dop		Monadic Operator		binarysearch
tvec←{larg} (fn dfns.bt) rarg	Balanced Ternary Arithmetic	Dop		Monadic Operator		balancedternary ternary Setuncomputer TERNAC BurroughsB1700
sref←dfns.cache ivec	Ref to space with initial cache	Dfn	Function			memoization cache persistentlocalvariable fibonaccinumber
calendar←dfns.cal date	Calendar	Dfn	Function			calendar winningLoto
rslt←i j k ··· F dfns.case G case H ··· arg	Select statement	Dop		Dyadic Operator		conditionaloperator selectoperator co-operator cooperator
rslt←{larg} (land dfns.cf rand) rarg	Ratio of operand timings	Dop		Dyadic Operator		performance timing expressioncomparison hyperator
nvec←{tolerance←⎕CT} dfns.cfract numb	Continued fraction approx of real ⍵	Dfn	Function			continuedfraction goldenmean fibonaccinumber
sum←{digs←6} dfns.chksum array	Simple ⍺-digit checksum	Dfn	Function			checksum hashing
mat←m dfns.cmat n	⍺-combination matrix of ⍳⍵	Dfn	Function			combination expressiontransformation Pascal'striangle fibonaccinumber Pascalstriangle
table←{opts←⍬} dfns.cmpx exprs	Approx expression timings	Dfn	Function			performance timing expressioncomparison histogram ⎕ML
cmat←{gap←1 {max←⎕PW}} dfns.cols items	Multi-column display	Dfn	Function			
sumvec←{base←10} dfns.colsum cols	Sum of (default decimal) columns	Dfn	Function			addition sum columnsum infiniteprecision
TimeStamp←TieNo dfns.compidn CompNo	Component timestamp in IDN format	Dfn	Function			
rslt←(if dfns.cond then cond else) arg	Proposition:consequence:alternative	Dop		Dyadic Operator		conditionaloperator Helsingør hyperator co-operator cooperator
{mbrot←0}(cxfn dfns.cxdraw) zoom	Complex function drawing	Dop		Monadic Operator		complexnumbers drawing unitcircle fixpoint Mandelbrotset dual under
rslt←{blank} dfns.dab argt	Drop All Blanks	Dfn	Function			blanks compression
dates←{g←¯53799} dfns.date daynos	⎕TS format from day number	Dfn	Function			Gregoriancalendar 1752 calendar
daynos←{g←17520902} dfns.days dates	Day number from ⎕TS format	Dfn	Function			date 1752 InternationalDayNumber
rslt←{blank} dfns.deb argt	Drop Ending Blanks	Dfn	Function			blanks compression
nums←{signed←0} dfns.dec cvex	Decimal from hexadecimal	Dfn	Function			hexadecimal decimalfromhex
defns←{names←0 {list←0 {space←⎕THIS}}} dfns.defs namelist	Extended ]defs	Dfn	Function			defs display latebinding ⎕NC ]defs
num←dfns.det nmat	Determinant of square matrix	Dfn	Function			determinant Gaussianmethod Hilbertmatrix
tree←graph dfns.dfspan from	Depth-first spanning tree: graph ⍺ from vertex ⍵	Dfn	Function			depth-firstsearch spanningtree graph abstraction depthfirstsearch
tree←{slant←1}(fn dfns.dft) spread	Display of function tree	Dop		Monadic Operator		tree derivedfunction combinator hook fork box-drawingcharacters boxdrawingcharacters
cvec← dfns.dice ?6 6	Interpret a throw of dice	Dfn	Function			guard diversions
rslt ←dfns.din ''	Evaluation of multi-line D-expression	Dfn	Function			definefunction sessioninput ⎕SE REPL
cmat←{dec←0 {cen←0}} dfns.disp array	Boxed sketch of nested array	Dfn	Function			displayofarrays box boxing Kumquat box-drawingcharacters nestedarray boxdrawingcharacters
cmat←dfns.display array	Boxed display of array	Dfn	Function			displayofarrays box boxing box-drawingcharacters boxdrawingcharacters
cmat←dfns.displayr array	Boxed display of array with axis lengths and subarray depths	Dfn	Function			displayofarrays box boxing box-drawingcharacters boxdrawingcharacters
cmat←dfns.displays array	Boxed display of array with axis lengths	Dfn	Function			displayofarrays box boxing box-drawingcharacters boxdrawingcharacters
d←L dfns.dist R	Levenshtein distance	Dfn	Function			stringcomparison fuzzy
rslt←{blank} dfns.dlb argt	Drop Leading Blanks	Dfn	Function			blanks compression
rslt←{blank} dfns.dmb argt	Drop Multiple Blanks	Dfn	Function			blanks compression
rslt←(dewy dfns.do) rarg	Apply no-result function "en passant"	Dop		Monadic Operator		no-result is-yfunction do-yfunction enpassant noresult isyfunction doyfunction
crep←{dot←'·'} dfns.dots crep	Show dfn with "white dots"	Dfn	Function			whitedots functionsformatting name-clashproblem stuff nameclashproblem
cmat←{marker←'*'} dfns.draw cmat	Draw over '*'s	Dfn	Function			box box-drawingcharacters diversions boxdrawingcharacters
nvec←{axis} dfns.dscan nvec	Divide scan	Dfn	Function			scanoperators
cmat←{topbar←1} dfns.dsp array	Reduced version of disp	Dfn	Function			boxing displayofarrays tape
rslt←{blank} dfns.dtb argt	Drop Trailing Blanks	Dfn	Function			blanks compression
rslt←{blank} dfns.dxb argt	Drop eXtraneous Blanks	Dfn	Function			blanks compression
rslt←(⍺⍺ dfns.each) array	Fast each for pure operand function	Dop		Monadic Operator		each purefunction
yyyymmdd←dfns.easter year	Easter Sunday in year ⍵	Dfn	Function			date CouncilofNicaea canonpaschalis pervasivefunction histogram
nvec←P dfns.efract Q	Egyptian fractions	Dfn	Function			Egyptianfraction
nested←{left} dfns.eis right	Enclose-if-simple / link	Dfn	Function			link enclose-if-simple encloseifsimple
rslt←cond (⍺⍺ dfns.else ⍵⍵) argt	Condition f else g ..	Dop		Dyadic Operator		conditionaloperator
list←{leaves} dfns.enlist array	List ⍺-leaves of nested array	Dfn	Function			enlist nestedarray
dfns.esh digits	Shell for Eide-number sums	Dfn	Function			Eidenumbers rationalnumber balancedternary hexadecimal shell REPL
cvec←dfns.exit code	Return to calling environment	Dfn	Function			
names←{expr←0} dfns.externs dfn	External references from dfn ⍵	Dfn	Function			externalreferences
v83←dfns.f32 nums	Conversion to 32-bit floats as ⎕DR 83	Dfn	Function			32-bitfloatingpoint 32bitfloatingpoint
num←dfns.factorial num	Tail recursive factorial	Dfn	Function			tailrecursion accumulator factorial
nvec←dfns.factors numb	Prime factors of ⍵	Dfn	Function			primenumber
nvec←dfns.fibonacci num	Tail-recursive Fibonacci	Dfn	Function			tailrecursion accumulator fibonaccinumber goldenmean continuedfraction
rslt←(fun dfns.file) fname	Apply function to native file tie	Dop		Monadic Operator		nativefile railwaydiagram
cnos←file dfns.filefind string	Find 'string' ⍵ in component file ⍺	Dfn	Function			find componentfile
cmat←{space←⎕THIS} dfns.find string	Lines containing string(s) ⍵	Dfn	Function			name-clashproblem stringsearch nameclashproblem
{name}←dfns.fix rep	Fix function/operator rep	Dfn	Function			fixfunction
rslt←{larg} I dfns.fk J fk K rarg	Slower but elegant simulation of "fork" syntax	Dop		Dyadic Operator		hook fork co-operator cooperator
rslt ← {larg} I ##._fk J fk_ K rarg	Simulation of "fork" syntax	Dop		Dyadic Operator		hook fork co-operator cooperator
refs←(fn dfns.fnarray) fns	Array of functions	Dop		Monadic Operator		functionarray functionarray
cmat←{excl} dfns.fndiff (fna fnb)	Defined function differences	Dfn	Function			functionsdifference comparefunctions
cvecs←dfns.fnrefs func	External refs from tradfn ⍵	Dfn	Function			functionreferences cross-reference crossreference
{fns}←{space←⎕THIS} dfns.fnrepl (from to)	Function string replacement	Dfn	Function			stringreplacement
rslt←ival (func dfns.foldl) vals	Fold (reduce) from the left	Dop		Monadic Operator		reduction fold typenotation
rslt←i j k··· F dfns.for G for H··· arg	Multiple selection of function list	Dop		Dyadic Operator		conditionaloperator functionselection functionarray co-operator cooperator
rslt←indx dfns.from array	Select (1↓⍴⍵)-cells from array ⍵	Dfn	Function			arrayindexing
inv←{vals} dfns.gauss_jordan mat	Gauss-Jordan elimination	Dfn	Function			Gauss-Jordan Hilbertmatrix IEEEFPprecision purefunction GaussJordan
num←num dfns.gcd num	Greatest Common Divisor	Dfn	Function			greatestcommondivisor leastcommonmultiple tailrecursion
lines←{tabs←0 {ctype←80}} dfns.getfile filename	Text file ⍵ as nested vector	Dfn	Function			nativefile textfile Unicode
graph←graph dfns.gperm perm	⍵-permutation of vertices of graph ⍺	Dfn	Function			unweightedgraph
cvex← {width} dfns.hex nums	Hexadecimal from decimal	Dfn	Function			hexadecimal decimalfromhex
{cmds←''} dfns.hexdump file	Hex dump of native file	Dfn	Function			hexadecimal macro nativefile destructiveassignment endian offsiderule
hex←dfns.hexf num	IEEE 754/854 binary floating point	Dfn	Function			hexadecimal endian DecimalFloatingPoint 128-bitFloatingPoint 128bitFloatingPoint
segs←tag dfns.htx html	Extract html segments	Dfn	Function			XML XMLtag Kumquat
paths←item dfns.in array	Locations of item ⍺ in array ⍵	Dfn	Function			find index path pick location
indx←notespace dfns.index class	⍵-index of notes in space ⍺	Dfn	Function			index
graph←graph dfns.inslink (from to)	Insert edge ⍵ in graph ⍺	Dfn	Function			graph
graph←graph dfns.insnode vertex	Insert vertex ⍵ in graph ⍺	Dfn	Function			graph
i←bits dfns.int u	Signed from unsigned integers	Dfn	Function			typeconversion unsigned integer pervasivefunction nativefile cast
rslt←{guess←1+⎕CT} (fn dfns.invr) argt	Inverse of real-valued function	Dop		Monadic Operator		functioninverse inverse Newton-Raphson absolutezero NewtonRaphson
rslt←{array} dfns.iotag array	Generalized iota	Dfn	Function			generialisediota generalised⍳ Unicode
bool←dfns.isdfn name	Test for D function	Dfn	Function			testforD-function name-clashproblem testforDfunction nameclashproblem
stack←{repl←0} dfns.joy program	Subset of the Joy language	Dfn	Function			lists concatenative applicative Ackermann'sfunction Ackermannsfunction Metacircular
rslt←{dirn←¯1} dfns.just chars	Justify text array	Dfn	Function			justifytext aligntext
lvec←{cols} dfns.justify lvec	Justify line-vector to ⍺ columns	Dfn	Function			justifytext aligntext linevector
seq←dfns.k6174 nnnn	Kaprekar's operation	Dfn	Function			sequence 6174 Kaprekar'soperation Kaprekarsoperation
rslt←{c←1} dfns.kball p	Relationship between point and k-ball	Dfn	Function			K-ball sphere hypersphere Kball
rslt←b (f dfns.kcell) p	Relationship between point and k-cell	Dop		Monadic Operator		K-cell boundary hypercube Kcell
kinds←dfns.kind namelist	Parse-category of name(s) ⍵	Dfn	Function			kind nameclass category namecolouring hybrid
kmap←{xk←(⊂,⊂∘kind)⎕NL-⍳10} dfns.kk fnop	Kind Koloring of d-fnop named ⍵	Dfn	Function			namecolouring parsing kind Bunda-Gerthparser polymorphism selfie BundaGerthparser
area←dim dfns.ksphere radius	Hypersphere surface area	Dfn	Function			sphere hypersphere Newton-Raphson localmaximum K-sphere manifolds NewtonRaphson Ksphere
nmats←{sreq←1} dfns.kt (rows cols)	Knight's Tour Chess Problem	Dfn	Function			chesspuzzle knight'stour knightstour graph treesearching diversions torus
chars←dfns.lcase chars	Lower-casification	Dfn	Function			uppercase lowercase upperorlowercase caseinsensitive
precedes←this dfns.le that	Total array ordering (TAO) comparison	Dfn	Function			sort quicksort Totalarrayordering order(ofarrays) comparearrays
bmat←dfns.life bmat	John Conway's "Game of Life"	Dfn	Function			gameoflife cellularautomaton glider diversions Asteroids YouTube
rslt←(fun dfns.limit) arg	Function power limit (fixpoint)	Dop		Monadic Operator		functionpower palindrome arithmetic-geometricmean goldenmean arithmeticgeometricmean
rslt←{eval←1} dfns.lisp expr	Evaluator for a subset of Scheme	Dfn	Function			Lisp Scheme closure Metacircular SICP lambdaexpression evaluator
list←dfns.list vect	List from vector ⍵	Dfn	Function			accumulator lambdaexpression min(workspace) parsing lists cons
rslt←{larg} {''} dfns.lof F lof G lof H ... rarg	List of functions	Dop		Dyadic Operator		conditionaloperator listoffunctions co-operator cooperator
rslt←larg (selector dfns.logic) rarg	Logical function array	Dop		Monadic Operator		conditionaloperator booleanfunctions truthtables
rslt←pvec dfns.lsys axiom	Lindenmayer L-system expansion	Dfn	Function			L-Systems fractal rewriting termrewriting Turtlegraphics LSystems
nvec←{sepr} dfns.ltov lvec	Lines to nested vector	Dfn	Function			linevector
rslt←init (acc dfns.ltrav) list	List traversal	Dop		Monadic Operator		accumulator lambdaexpression minworkspace parsing lists cons
m←dfns.m91 n	McCarthy's M91 function	Dfn	Function			91
bfobj←(dfns.mac) src	Simple macro processor for bf	Dfn	Function			Brainfuck macro continuation-passingstyle continuationpassingstyle
hits←patn {w←'*'} dfns.match array	Find with wildcards	Dfn	Function			
cols←{base←1} dfns.mayan numb	Mayan numbers	Dfn	Function			numbersystem stela calendar date astronomy vigesimalnumbersystem abacus
cmat← {⎕RL←2⊃⎕AI} dfns.maze shape	Kidz maze	Dfn	Function			diversions indexedassignment maze
num←dfns.mean nvec	Arithmetic mean	Dfn	Function			localnames standarddeviation APL'88 APL88 1988
rslt←{larg} (⍺⍺ dfns.memo cache) rarg	Function memoization	Dop		Dyadic Operator		memoization cache persistentlocalvariable fibonaccinumber
dfns.mmind ⎕A[?4⍴6]	Mastermind or "cows and bulls"	Dfn	Function			Mastermind gameofcowsandbulls diversions REPL
ref←dfns.mns defn	Make Namespace from association list ⍵	Dfn	Function			namespace associationlist
code←dfns.morse text	Conversion to/from Morse code	Dfn	Function			Morsecode
{files}←{type←''} dfns.mp3 dirs	Create playlist(s) for music directories	Dfn	Function			MP3(mediaplayer) playlist music mediaplayer(MP3) diversions
nvec←{axis} dfns.mscan nvec	Minus scan	Dfn	Function			scanoperators
cmat←dfns.mtrim cmat	Trim off trailing blank cols	Dfn	Function			blanks trailingblanks
cvec←larg (fn dfns.nats) rarg	Natural number arithmetic	Dop		Monadic Operator		naturalnumber infiniteprecision expressiontransformation
cvec←{path←⎕PATH} dfns.ncpath names	⎕path-aware ⎕NC	Dfn	Function			nameclassification extended⎕NC
nvec←p dfns.nicediv q	⍵ similar integers with sum ⍺	Dfn	Function			histogram
n←dfns.nlines simple	Number of display lines for simple array	Dfn	Function			defaultdisplay linesofoutput
saved←{seed} dfns.nspack ref	Share arrays across space tree	Dfn	Function			packing compression enlist
rslt←pick dfns.of F of G of H ... arg	Pick'th fn applied to arg	Dop		Dyadic Operator		functionarray conditionaloperator co-operator cooperator
rslt←(f dfns.or g) arg	Sequential test	Dop		Dyadic Operator		lazyevaluation sequentialtest adjacentguard &&
num←dfns.osc num	Oscillate - probably returns 1	Dfn	Function			Oscillate cashprize wondrousnumber Gödel,Escher,Bach Goedel,Escher,Bach GödelEscherBach GodelEscherBach GoedelEscherBach engineer'sproof engineersproof
array←dfns.pack array	Saves WS by sharing subarrays	Dfn	Function			compression arraysharing
rslt←{cmp←1} dfns.pack4 image	Quad-tree packing	Dfn	Function			packing compression quad-tree quadtree
cmp←{cmp←1} dfns.packB exp	Pack a simple array	Dfn	Function			packing compression
cmp←{cmp←1} dfns.packD data	Pack char array to boolean vector	Dfn	Function			packing compression encryption
cmp←{cmp←1} dfns.packH exp	Huffman packing	Dfn	Function			packing compression Huffmancode
cmp←{cmp←1} dfns.packN exp	Null packing	Dfn	Function			packing compression stuff
cmp←{cmp←1} dfns.packQ data	Assorted uniQues packer	Dfn	Function			packing compression
cmp←{cmp←1} dfns.packR exp	Run-Length Encoding (RLE packing)	Dfn	Function			packing compression run-lengthencoding runlengthencoding
cmp←{cmp←1} dfns.packS exp	Shannon-Fano packing	Dfn	Function			packing compression Shannon-Fano ShannonFano
cmp←{cmp←1} dfns.packT exp	Simple text vector packager	Dfn	Function			packing compression
cmp←{cmp←1} dfns.packU exp	Unique packing	Dfn	Function			packing compression
cmp←{cmp←1} dfns.packX txt	TeXt Packer	Dfn	Function			packing compression
cmp←{cmp←12} dfns.packZ exp	Abraham Lempel, Jacob Ziv, Terry Welch	Dfn	Function			packing compression suffixtrie Lempel-Ziv-Welch LempelZivWelch
tree← {trace←0} defn dfns.parse expr	Bunda-Gerth parse of expression ⍵	Dfn	Function			parsing currying Bunda-Gerthparser bindingstrength BIDMAS BundaGerthparser
vvec←graph dfns.path (fm to)	Shortest path between ⍵ in graph ⍺	Dfn	Function			unweightedgraph breadth-firstsearch breadthfirstsearch
p←dfns.pco ⍵	⍵-th prime	Dfn	Monadic Function			primenumber J
b←0 dfns.pco ⍵	1 iff ⍵ is not prime	Dfn	Dyadic Function			primenumber J nonprime? non-prime? composite?
b←1 dfns.pco ⍵	1 iff ⍵ is prime	Dfn	Dyadic Function			primenumber J prime?
n←¯1 dfns.pco ⍵	number of primes less than ⍵	Dfn	Dyadic Function			primenumber J
v←2 dfns.pco ⍵	prime factors and exponents	Dfn	Dyadic Function			primenumber J
v←3 dfns.pco ⍵	prime factorization of ⍵	Dfn	Dyadic Function			primenumber J
p←4 dfns.pco ⍵	next prime larger than ⍵	Dfn	Dyadic Function			primenumber J
p←¯4 dfns.pco ⍵	next prime smaller than ⍵	Dfn	Dyadic Function			primenumber J
b←10 dfns.pco ⍵	m+b/⍳⍴b are all the primes between m and n, where ⍵≡m,n	Dfn	Dyadic Function			primenumber J
rslt←{lft} (fun dfns.perv) rgt	Scalar pervasion	Dop		Monadic Operator		scalar-wise pervasivefunction scalarwise
pnum←{fmt←1} (dfns.phinary) nums	Phinary representation of numbers ⍵	Dfn	Function			goldenmean goldenrectangle phinarynumber
mat←dfns.pmat n	Permutation matrix of ⍳⍵	Dfn	Function			permutationmatrix
to←{dirn←1} dfns.polar fm	Polar from/to cartesian coordinates	Dfn	Function			polarcoordinates cartesiancoordinates coordinates
rslt←count (fun dfns.pow) argt	Explicit function power	Dop		Monadic Operator		poweroperator functionpower fibonaccinumber
rslt←part (redn dfns.pred) rarg	Partitioned reduction	Dop		Monadic Operator		partionedreduction
rslt←{larg} (func dfns.profile subs) rarg	Performance profiling	Dop		Dyadic Operator		performance timing profiling monitor ⎕profile
{size}←{term←2} dfns.putfile (fid rows)	Put rows to text-file	Dfn	Function			nativefile textfile Unicode
cmats←dfns.queens N	The N-Queens Problem	Dfn	Function			diversions chesspuzzle treesearching purefunction N-Queens YouTube NQueens
soln←dfns.quzzle grid	A hard, simple problem	Dfn	Function			diversions puzzle
indx←brks dfns.range nums	Numeric range classification	Dfn	Function			
rats←{tolerance←⎕CT} dfns.rational nums	Rational approximation to real ⍵	Dfn	Function			rationalnumber Pi numberoftheBeast
rslt←{larg} (fn dfns.rats) rarg	Rational arithmetic	Dop		Monadic Operator		rationalnumber primenumber
sum←{larg} (digs dfns.ratsum) rarg	⍺⍺-rational sum of ⍺ and ⍵	Dop		Monadic Operator		Eidenumbers rationalnumber balancedternary skewedfour
rslt←ival (accm dfns.ravt subs) tree	Trav: parent-first, ravt: parent last	Dop		Dyadic Operator		tree currying typenotation fibonaccinumber N-Queens NQueens
rslt←{larg) (op dfns.redblack) rarg	Red-black trees	Dop		Monadic Operator		tree red-blacktrees binarysearchtree enlist redblacktrees
match←this dfns.refmatch that	Space reference match	Dfn	Function			comparenamespaces namespacecomparison
crep←{tabs csep←4} dfns.refmt crep	Reformat dfn/op representation	Dfn	Function			functionsformatting
refs←dfns.refpath ref	Refs path from root to ⍵	Dfn	Function			parentspace ancestorspace namespacereferences
rvec←{exclude←⍬} dfns.refs ref	Vector of sub-space references	Dfn	Function			refs namespacereferences ⎕WX root-space rootspace
ref←dfns.refws wsid	Ref to saved ws ⍵	Dfn	Function			workspacereferences externalworkspace workspace remoteexecution
graph←graph dfns.remlink (from to)	Remove edge ⍵ from graph ⍺	Dfn	Function			unweightedgraph
graph←graph dfns.remnode vertex	Graph ⍺ with vertex ⍵ removed	Dfn	Function			unweightedgraph
enc←dfns.rep name	Encapsulate function/operator	Dfn	Function			functionarray encapsulatefunction
{prompt←4↑''} (eval dfns.repl) stop	Read-eval-print loop	Dop		Monadic Operator		loop shell error-guard,dynamic REPL shell errorguard,dynamic
nvec←dfns.ripple nvec	Perfect Ripple Shuffle	Dfn	Function			shuffle grade carddeck diversions riffleshuffle
line←dfns.rmcm line	APL source with comments removed	Dfn	Function			functionsformatting commentremoval one-liner oneliner
res←{sin} (fvn dfns.roman) dex	Roman numeral arithmetic	Dop		Monadic Operator		romannumerals numbersystem diversions
num←{num←2} dfns.root num	⍺'th root	Dfn	Function			defaultleftargument ⍺throot
nvec←dfns.roots triple	Real roots of quadratic	Dfn	Function			realrootsofquadratic complexnumbers
rslt←(fun dfns.rows) {array}	Operand function applied to argument rows	Dop		Monadic Operator		vector-wise vectorwise
rounds←dfns.rr players	Round-robin tournament	Dfn	Function			Round-robintournament combination Roundrobintournament
new←{larg} (sel dfns.sam mod) old	Select and modify	Dop		Dyadic Operator		selectandmodify destructiveassignment purefunction
rslt←{left} (fun dfns.saw) right	Apply function Simple-Array-Wise	Dop		Monadic Operator		simple-array-wise simplearraywise
rslt←{larg} (op dfns.sbst) rarg	Simple Binary Search Trees	Dop		Monadic Operator		tree binarysearchtree typenotation enlist
C←{trace←0} dfns.scc G	Strongly connected components of directed graph ⍵	Dfn	Function			Stronglyconnectedcomponents graph depth-firstsearch DAG depthfirstsearch
vvec←graph dfns.search from	Breadth-first search of graph ⍺	Dfn	Function			unweightedgraph breadth-firstsearch breadthfirstsearch
vecs←seps dfns.segs vec	⍺-separated segments of vector ⍵	Dfn	Function			words split text partition
rslt←indx dfns.select avec	⍺-selection of items from vector ⍵	Dfn	Function			indexedassignment destructiveassignment purefunction
entropy←dfns.shannon string	Shannon entropy of message ⍵	Dfn	Function			Entropy informationtheory
nvec←dfns.sieve nvec	Sieve of Eratosthenes	Dfn	Function			primenumber sieve
tree←graph dfns.span fm	Breadth-first span tree for graph ⍺ from vertex ⍵	Dfn	Function			unweightedgraph spanningtree breadth-firstsearch breadthfirstsearch
rslt←{larg} (op dfns.splay) rarg	Splay trees	Dop		Monadic Operator		tree binarysearchtree enlist
cvec←dfns.squeeze cvec	Compress multiple blanks	Dfn	Function			compression linevector
cvec←dfns.ss (srce from into)	Approx alternative to xutils' ss	Dfn	Function			ssxutils stringreplacement substitution
cmat←dfns.ssmat (cmat from into)	Matrix search/replace	Dfn	Function			ssxutils stringreplacement substitution
cvec←{prim supp} dfns.ssword (srce from into)	Approx alternative to xutils ss	Dfn	Function			ssxutils stringreplacement substitution
nvec←{denoms←1 5 6 10 26 39 43} dfns.stamps value	Postage stamps for ⍵	Dfn	Function			postagestamps graph balancedternary
dvec←dfns.stdists tree	Spanning-tree path lengths	Dfn	Function			graph spanningtree path
vvec←tree dfns.stpath to	Path through spanning tree ⍺ to vertex ⍵	Dfn	Function			graph spanningtree path
pvec←dfns.stpaths tree	Spanning tree paths	Dfn	Function			graph spanningtree path
array←(from repl) dfns.subs array	Vector substitution	Dfn	Function			stringreplacement substitution
yes←larg dfns.subvec rarg	Is ⍺ a subvector of ⍵?	Dfn	Function			subvector? subset?
svec←{shape←⍬⍴(⍴⍵)*÷2} dfns.sudoku prob	Solution vector for Sudoku problem ⍵	Dfn	Function			diversions gameofsudoku K YouTube
rslt←{larg} (func dfns.tc) rarg	Trace of function application	Dop		Monadic Operator		trace monitor debugging
{ok}←{opts←'q'} dfns.test script	Run test script: no news => good news	Dfn	Function			qualityassurance unittesting autoformat QA testing
cmat←dfns.tfmt tree	Char matrix from tree(s)	Dfn	Function			treesformatting tree
{rslt}←{larg} (fun dfns.time) rarg	Function application time	Dop		Monadic Operator		performance monitor timing
cvec←{time←⎕TS} dfns.timestamp cvec	Time-stamped message	Dfn	Function			time date
tree←dfns.tnest (depth leaves)	Array from TreeView style tree	Dfn	Function			tree treesformatting
nvec←from dfns.to unto	Sequence ⍺ .. ⍵	Dfn	Function			sequence stepping … seq()
cvecs←{nv←0} dfns.tokens cvec	Lex of APL src line	Dfn	Function			parsing lexicalscan
vec←(fun dfns.traj) arg	Function limit 'trajectory'	Dop		Monadic Operator		trajectory debugging Newton-Raphson sequence NewtonRaphson
rslt←ival (accm dfns.trav subs) tree	Generic depth-first tree traversal	Dop		Dyadic Operator		tree currying typenotation fibonaccinumber N-Queens NQueens
cvec←{maxcols←⎕PW} dfns.tree space	Display of namespace tree	Dfn	Function			workspace name-clashproblem nameclashproblem
{lines}←{defs←default} dfns.turtle cmds	Flying-turtle graphics	Dfn	Function			Turtlegraphics L-Systems fractal palindrome Flyingturtle polyhedron LSystems
(depth leaves)←dfns.tview tree	TreeView style from nested array	Dfn	Function			tree
rslt←code dfns.type array	Widen ⍵ to type ⍺	Dfn	Function			dataconversion type ⎕DR
chars←dfns.ucase chars	Upper-casification	Dfn	Function			uppercase lowercase upperorlowercase caseinsensitive
expr←vars dfns.unify expr expr ···	Unification of expressions	Dfn	Function			unification parsing polymorphism
rslt←(func dfns.until cond) argt	Conditional function power	Dop		Dyadic Operator		conditionaloperator
cvec← dfns.unwrap lvec	Replace [LF] with blanks	Dfn	Function			text wordswrapping linevector
sref←{from←⎕THIS} dfns.up gens	Reference to ancestor space	Dfn	Function			parentspace ancestorspace namespacereferences
cvec←dfns.utf8get fid	Char vector from UTF-8 file ⍵	Dfn	Function			UTF-8 encoding Unicode UTF8
{size}←cvec dfns.utf8put fid	Char vector ⍺ to UTF-8 file ⍵	Dfn	Function			UTF-8 encoding Unicode UTF8
rslt←{larg} {''} dfns.vof F vof G vof ··· rarg	Vector of functions	Dop		Dyadic Operator		functionarray vectoroffunctions fork co-operator cooperator
caps←{ack ign←'' ''} dfns.von chars	Capitalise first letters of names	Dfn	Function			diversions capitalisation
lvec←{sepr} dfns.vtol nvec	Nested vector to lines	Dfn	Function			linevector
cvec←dfns.vtrim cvec	Remove trailing blanks	Dfn	Function			blanks compression
rslt←(fn dfns.vwise) ref	Variable-wise: apply ⍺⍺ to each var in space ⍵	Dop		Monadic Operator		variable-wise variablewise
cvec←wgraph dfns.wcost path	Cost vector for path ⍵ through weighted graph ⍺	Dfn	Function			weightedgraph costvector
rslt←(func dfns.while cond) argt	Conditional function power	Dop		Dyadic Operator		conditionaloperator
tree←wug dfns.wmst root	Minimum Spanning Tree for weighted graph ⍺	Dfn	Function			weightedgraph spanningtree mininumspanningtree
cvecs←{prim supp} dfns.words cvec	Source vector split into words	Dfn	Function			text
path←wgraph dfns.wpath (from to)	Quickest path from/to ⍵ in weighted graph ⍺	Dfn	Function			weightedgraph path destructiveassignment indexedassignment
lvec← {cols←⎕PW} dfns.wrap cvec	Wrap word vector at ⍺ columns	Dfn	Function			words text linevector transitiveclosure
note←{new←⎕PW {old←⎕PW}} dfns.wrapnote note	Wrap text paras in note vect	Dfn	Function			words text linevector box-drawingcharacters boxdrawingcharacters
{excl←'⍵'} dfns.wsdiff (wsa wsb)	Workspace differences	Dfn	Function			compareworkspaces workspace name-clashproblem nameclashproblem
{protected←0} dfns.wsmerge wsid	Merge saved ws into current active ws	Dfn	Function			workspace workspacemerge
tree←wgraph dfns.wspan from	Spanning tree for weighted graph ⍺ from ⍵	Dfn	Function			weightedgraph spanningtree
bytes←dfns.wsreq expr	WS required to execute expression ⍵	Dfn	Function			performance monitor fudgefactor calibration
digits←digits dfns.xpower number	Fast multi-digit power using FFT	Dfn	Function			FastFourierTransform
refs←dfns.xrefs array	Extract refs vector from array ⍵	Dfn	Function			namespacereferences
cvec←{tabstops←8} dfns.xtabs cvec	Expand/compress HT chars	Dfn	Function			tabexpansion horizontaltabs adjacent1s flipflopRS
z←x dfns.xtimes y	Fast multi-digit product using FFT	Dfn	Function			FastFourierTransform convolution polynomial
{0::0⋄1⊣8⌶⍨⍵}	Validate inverted table	Dfn	Monadic Function		Array Properties	
X f{(⍵⍵ ⍺)⍺⍺(⍵⍵ ⍵)}g Y	Over: preprocess (g) arguments before applying main function (f)	Dop	Dyadic Functtion	Dyadic Operator	Function Application	circlediaeresis on ⍥
X f{⍺←⊢ ⋄ ⍺⍺⍣¯1⊢(⍵⍵ ⍺)⍺⍺(⍵⍵ ⍵)}g Y	Under: preprocess (g) arguments before applying main function (f), then undo preprocessing	Dop	Function	Dyadic Operator	Function Application	deldiaeresis computationalunder dual while ⍢
X f{⍺←{⍵ ⋄ ⍵⍵} ⋄ w←⍵ ⋄ ((⍵⍵)w)←(⍵⍵ ⍺)⍺⍺(⍵⍵ ⍵) ⋄ w}g Y	Under: apply main function (f) to selection (g) of arguments	Dop	Function	Dyadic Operator	Function Application	deldiaeresis computationalunder dual while ⍢
(⊃0⍴⊂)Y	Type: 'a' 1 ⎕NULL → ' ' 0 ⎕NULL (∊ with ⎕ML←0)	Tacit	Monadic Function	Non-scalar function	Array Properties	prototype ∊ ⍷
{⍺←⊃⌈/⍵ ⋄ 1@⍵⊢⍺⍴0}B	Inverse of monadic ⍸ with optional result shape as left argument	Dfn	Function	Non-scalar Function	Index Generation	truesat ⍸⍣¯1
X f{⍵ ⍵⍵⍨⍺⍺ ⍺}g Y	Reverse composition: g on f X and Y, that is, (f X) g Y	Dop	Dyadic Function	Dyadic Operator	Function Application	jotunderbar composewith bind ringunderbar functioncomposition ⍛
X f⍨∘g⍨∘h Y	Split compose: f between g X and h Y, that is, (g X) f (h Y)	Tacit	Dyadic Function			
X f⍨∘g⍨∘h Y	Split compose: f between g X and h Y, that is, (g X) f (h Y)	Tacit	Dyadic Function			
(⍳∘≢=(⍳⍨∪⍳⊢))Y	Nub sieve: mask for major cells to leave the distinct (∪Y)	Tacit	Monadic Function	Non-Scalar Function	Sets	unique Boolean indication ⍧
Iv{⍵⍴⍨⍺×@(<∘0)⍨(×/⍴⍵)÷×/⍺~0}Y	Reshape (⍴) Y to shape Iv, allowing ¯1 to automatically determine missing length	Dfn	Dyadic Function		Structural	mold form dimension array autoshape
Iv⌷⍨∘⊂⍨Y	Select major cells Iv of Y	Tacit	Dyadic Function	Non-scalar function	Selection	rightshoeunderbar saneindexing ⊇
((∪∘.=⊢)⍳⍨)Y	Self-classify: table of unique vs all major cells of Y	Tacit	Monadic Function	Non-scalar function	Sets	nub distinctitems uniqueelemenets
+/⍒∘|⊃¨⊂	Accurately sum a vector of floating point numbers	Tacit	Monadic Function		Mathematical	sum floats precisionloss imprecision IEEE754 64-bit IEEE754-2008 128-bit binaryfloatingpoint
Mv(f⍤1)Nm	Apply f between vector Mv and each column of Nm	Tacit	Dyadic Function		Function Application	rank suffixagreement
Mv(f⍤1 0)Nm	Apply f between vector Mv and each row of Nm	Tacit	Dyadic Function		Function Application	rank prefixargeement
(⍳⍴)Y	All indices of array Y	Tacit	Monadic Function		Index Generation	
⍳∘≢∘⍴Y	All axes of array Y	Tacit	Monadic Function		Index Generation	
⍳∘≢Ym	All row indices of matrix Ym	Tacit	Monadic Function		Index Generation	enumerate rows
⍳∘⊃∘⌽∘⍴Ym	All column indices of array Ym	Tacit	Monadic Function		Index Generation	enumerate columns
(∪⍳∨⊢)Js	All factors of Js (1=⎕IO)	Tacit	Monadic Function		Mathematical	divisors
∨\B	All ones after the first one	Tacit	Monadic Function		Boolean/Logical	
≤\B	All ones after the first zero	Tacit	Monadic Function		Boolean/Logical	
∧\B	All ones to the first zero	Tacit	Monadic Function		Boolean/Logical	
<\B	All zeros except the first one	Tacit	Monadic Function		Boolean/Logical	
(¯1≠⎕NC)Dv	Whether Dv is a valid identifier	Tacit	Monadic Function		System	symbol name validity allowed
÷/N	Alternating product of N	Tacit	Monadic Function		Mathematical	
(⊢(/⍨⍨)1 0⍴⍨≢)Jv	Alternating sequence of Jv[1] ones, Jv[2] zeros, Jv[3] ones, …	Tacit	Monadic Function		Boolean/Logical	1s 0s zeroes naughts
-\∘⍳Js	Alternating series (1,-1,2,-2, …) of length Js	Tacit	Monadic Function		Mathematical	oeisA001057 oeisA1057
-/N	Alternating sum of N	Tacit	Monadic Function		Mathematical	
I(⊢÷∘⍉1-(1+⊢)∘.×∘-⊣)N	Annuity coefficient: I periods at interest N	Tacit	Dyadic Function		Mathematical	loan
Mv(|2÷⍨+.×∘(¯1∘⌽-1∘⌽))Nv	Area of a polygon given Mv,Nv endpoints	Tacit	Dyadic Function		Mathematical	shoelaceformula
(0.5*⍨0∘,×.-0.5×+/)Nv 	Area of a triangle given side length. (3=≢Nv)	Tacit	Monadic Function		Mathematical	
Ms×∘⍳Js	Arithmetic progression vector: Js steps of Ms	Tacit	Dyadic Function		Mathematical	sequence
(0<⎕NC)Dv	Is Dv defined	Tacit	Dyadic Function		System	symboltable exists
Cv{⍎⍺,'←⍵'}Y	Assign value Y to name Cv	Dfn	Dyadic Function		System	assignment name-value
(⍳∘⊃∘⌽∘≢⍪⊢)Ym	Attach column numbers to a matrix	Tacit	Monadic Function		Index Generation	headings
(⍳∘≢,⊢)Ym	Attach row numbers to a matrix	Tacit	Monadic Function		Index Generation	labels
Ms(+÷××⊣!+)Ns	Beta function 	Tacit	Dyadic Function		Mathematical	B(x,y) Β(x,y)
(∘.!⍨0,⍳ )Js	Binomial coefficients from until Js	Tacit	Monadic Function		Mathematical	pascal'striangle numberofcombinations
(2</0∘,)B	Boolean first ones in each group of ones	Tacit	Monadic Function		Boolean/Logical	beginningsofruns
X(~∊)Y	Boolean items in X that are not in Y	Tacit	Dyadic Function		Sets	isnotin membership notcontainedin hasn't doesnothave
(1/⍨∘,1,∘⍪-)Nv	Boolean gaps of lengths Nv after each one	Tacit	Monadic Function		Boolean/Logical	runs
(2>/,∘0)B	Boolean last ones in each group of ones	Tacit	Monadic Function		Boolean/Logical	endsofruns
X(<\@(≡¨⍨)⍷)Y	Boolean one at first occurrence of X in Y	Tacit	Monadic Function		Sets	findfirstin search locatefirst
Xv(⊣/⍷)Ym	Boolean rows of Ym starting with X	Tacit	Dyadic Function		Sets	findfirstin search locatefirst
Xm∧.=Ys	Boolean rows of Xm all equal to scalar Ys.	Tacit	Dyadic Function		Sets	findall lookup rows
(∪≡⊢)Y	Boolean test: Are all items of Y unique?	Tacit	Monadic Function		Sets	alldifferent noduplicates nodups
∧/∘,B	Boolean test: Are all true?	Tacit	Monadic Function		Boolean/Logical	forall ∀
∨/∘,B	Boolean test: Are any true?	Tacit	Monadic Function		Boolean/Logical	forany thereexists ∃
(~∨/∘,)B	Boolean test: Are none true?	Tacit	Monadic Function		Boolean/Logical	theredoesnotexist ∄
(⍕≡⊢)Y	Boolean test: Is Y a simple character array?	Tacit	Monadic Function		Array Properties	
(1=≢∘⍴)Y	Boolean test: Is Y a vector?	Tacit	Monadic Function		Array Properties	rank1
(-≡⍉)Ym	Boolean test: Is Ym anti-symmetric?	Tacit	Monadic Function		Array Properties	
(⍉≡⊢)Ym	Boolean test: Is Ym symmetric?	Tacit	Monadic Function		Array Properties	
(1=2|⎕DR)Y	Boolean test: Is Y numeric?	Tacit	Monadic Function		Array Properties	
(11=⎕DR)Y	Boolean test: Is Y Boolean?	Tacit	Monadic Function		Array Properties	
(0 2∊⍨⎕DR)Y	Boolean test: Is Y character?	Tacit	Monadic Function		Array Properties	
Xv(∊∧.∧∊⍨)Yv	Boolean test: Is Xv permutation of Yv?	Tacit	Dyadic Function		Array Properties	
(⍬≡⊢~⍳∘≢)Yv	Boolean test: Is Yv permutation vector?	Tacit	Monadic Function		Array Properties	
≠/B	Boolean Parity	Tacit	Monadic Function		Boolean/Logical	
X∘.,Y	Cartesian product: all pairs of X and Y	Tacit	Monadic Function		Sets	
1∘/Y	Make vector if scalar	Tacit	Monadic Function		Array Properties	minimumrank1 makenonscalar
A(⊢×¯1*⊣)N	Change sign of N on condition A	Tacit	Monadic Function		Mathematical	conditionalnegation
X⊃¨∘⊂Y	Selective picking from array	Tacit	Monadic Function		Structural	chipmunk
Ms(⊢⌷⍨∘⊂×∘⍋)A	Sort A according to Ms (1: ascending, 0: unordered, ¯1: descending)	Tacit	Monadic Function		Mathematical	sort order
(⊢!⍨0,⍳)Js	Coefficients of the binomial	Tacit	Monadic Function		Mathematical	
(+/∧\)B	Count of leading ones	Tacit	Monadic Function		Boolean/Logical	1s
(↑'⎕'⍴¨⍨⌊)N	Histogram	Tacit	Monadic Function		Structural	chart
+\N	Cumulative sum	Tacit	Monadic Function		Mathematical	runningtotal
'-- ::'@(2+3×⍳5)∊⍕¨(⊃,100+1∘↓)6↑⎕TS 	Date and time as YYYY-MM-DD hh:mm:ss	Constant			Expression	datetime format
+\∘(-⌿¯1 0⌽'()'∘.=⊢)Dv	Depth of parenthesis	Tacit	Monadic Function		Text	bracket brace nesting level
M×∘÷N	Division. Force DOMAIN ERROR for division by 0.	Tacit	Dyadic Function		Mathematical	
(''''∘(⊣,⊣,⍨⊢(/⍨)1+=))Dv	Quote for execution	Tacit	Monadic Function		Text	serialise
Ms⊥∘⌽Nv	Ascendingly ordered Nv-coefficient polynomium at point Ms	Tacit	Dyadic Function		Mathematical	
+\⍣2∘⍳Js	First Js triangular pyramidal numbers	Tacit	Monadic Function		Mathematical	figurative tetrahedral oeisA000292 oeisA292
+\∘⍳IS	First Js triangular numbers	Tacit	Monadic Function		Mathematical	oeisA000217 oeisA217
Ms(0⌈⌊)Ns	Force Ns numbers to range 0≤Ns≤Ms	Tacit	Dyadic Function		Mathematical	clamp restrictrange
(×|⊢)N	Fractional part with sign	Tacit	Monadic Function		Mathematical	decimals
1∘|N	Fractional part of number	Tacit	Monadic Function		Mathematical	decimals
{≢⍵}⌸Y	Frequencies of major cells	Tacit	Monadic Function		Mathematical	occurances statistics
(10 12∘.○⊢)N	From complex to magnitude and radians	Tacit	Monadic Function		Data Conversion	polar
M(⊣×¯12○⊢)N	From magnitude M and radians N to complex	Tacit	Dyadic Function		Data Conversion	polar
Ms(1+⊣)∘⊥N	Future value of cash flows N at interest Ms	Tacit	Dyadic Function		Mathematical	
(!-∘1)N	Gamma function.	Tacit	Monadic Function		Mathematical	Γ
↑∘,∘⊂Y	Increment rank by one before first dimension	Tacit	Monadic Function		Structural	addleadingaxis GhostBuster rowmatrixfromvector
(,⍤0)Y	Increment rank by one after last dimension	Tacit	Monadic Function		Structural	addtrailingaxis GhostBuster columnmatrixfromvector
(≠\⍣¯1)B	Gray code or reflected binary	Tacit	Monadic Function		Boolean/Logical	
(÷⍳∘.+¯1+⍳)Js	Hilbert matrix of order IS. (1=⎕IO)	Tacit	Monadic Function		Mathematical	
(,⍨⍴1,⍴∘0)Js	Identity matrix: Js by Js	Tacit	Monadic Function		Mathematical	unitmatrix
⊃∘⍒Y	Index of the largest item	Tacit	Monadic Function		Mathematical	
⊃∘⍋Y	Index of the smallest item	Tacit	Monadic Function		Mathematical	
(⍴⍨0∘,)Js	Initialise a matrix with Js columns and no rows	Tacit	Monadic Function		Structural	initialise
1 2 3 4 5 6 7 8 9 0,⎕	Input continuation	Syntax			Expression	linecontinuation
(××⌊∘|)N	Integer: Truncate to whole number	Tacit	Monadic Function		Mathematical	chop clamp
0 1∘⊤N	Integral and fractional part of positive number	Tacit	Monadic Function		Mathematical	parts split
(+\⍣¯1)N	Difference of adjacent pairs with seed value	Tacit	Monadic Function		Mathematical	differences deltas changes steps
X{>/⍋⍺⍵}Y	Is X lexically greater than Y?	Dfn	Dyadic Function		Comparison	tao totalarrayordering after follows ≻ ⋠ ⋩
X{</⍒⍺⍵}Y	Is X lexically greater than or equal to Y?	Dfn	Dyadic Function		Comparison	tao totalarrayordering notbeforefollowsorequivalentto ≽ ⊀
X{>/⍒⍺⍵}Y	Is X lexically less than Y?	Dfn	Dyadic Function		Comparison	totalarrayordering tao before precedes ≺ ⋡ ⋨
X{</⍋⍺⍵}Y	Is X lexically less than or equal to Y?	Dfn	Dyadic Function		Comparison	tao totalarrayordering notafter precedesorequivalentto ≼ ⊁
X(Is{⍵⌹⍺∘.*0,⍳⍺⍺})Y	Is degree polynomial fit given X,Y values	Dop	Dyadic Function		Mathematical	curvefitting model
(0≠.=400 100 4∘.|⊢)Js	Is IS (YYYY) a leap year?	Tacit	Monadic Function		Mathematical	gregoriancalendar 29thfeb29 29february29th
X1 X2(1=⍸)Y	Are Y in range [X1,X2)	Tacit	Dyadic Function		Comparison	tao totalarrayordering interval
(1∧|,÷)Ns	Convert fraction to (numerator,denominator)	Tacit	Monadic Function		Mathematical	rationalnumber simplefraction commonfraction vulgarfraction
(|¯11|1⊥+\)Jv	ISBN check digit generator from ten first digits Jv	Tacit	Monadic Function		Mathematical	InternationalStandardBookNumber
⍋∘⍋Y	Permutation vector that sorts like Y	Tacit	Monadic Function		Index Generation	ranking
M(⊣+¯11○⊢)N	Join real part M and imaginary part N to form complex	Tacit	Dyadic Function		Mathematical	complexnumber
(⊃,/)Yv	Join array of arrays horizontally	Tacit	Dyadic Function		Structural	nextto juxtapose merge flatten
(⊃⍪⌿)AA	Join array of arrays vertically	Tacit	Dyadic Function		Structural	aboveandbelow stack merge flatten
X,¨Y	Join corresponding items	Tacit	Monadic Function		Structural	juxtapose tuples
100⊥3↑⎕TS	Join current date as YYYYMMDD integer	Constant			Expression	format
⌊/⍬	Largest representable number	Constant			Expression	
Mv(⊢(⊢+.×⌹)0 1∘.*⍨⊣)Nv	Least squares linear fit given X values Mv and Y values Nv	Tacit	Dyadic Function		Mathematical	
(+/∘|2-/⊢)Nv	Length of polygon given as complex points	Tacit	Monadic Function		Mathematical	circumference linelength
U∊⍨⊢∘⊂⌺3 3	Life: next generation given U 140 surviving 3-by-3 subarrays	Tacit	Monadic Function		Mathematical	conway's gameoflife gol conways cellularautomaton
∘.>⍨∘⍳Js	Lower triangular matrix: Js by Js	Tacit	Monadic Function		Boolean/Logical	triangle
(1||)N	Magnitude of fractional part of N	Tacit	Monadic Function		Mathematical	absolutedecimals
Xv(Bv{(⍺⍺/X)@(⊢∘⍺⍺)⍵})Yv 	Mask Operator. Merge Xv and Yv using Bv (1 for Xv's item, 0 for Yv's item)	Tacit	Dyadic Function	Monadic Operator	Structural	alternative choose mesh shuffle
{,[¯1↓⍳≢⍴⍵]1/⍵}Y	Matricise (like ⍪ but preserves trailing instead of leading shape)	Dfn	Monadic Function		Structural	matrix table matrify Matricize
Xs(1↓∘,,)Ym	Matrix to vector using Xs as delimiter	Tacit	Dyadic Function		Structural	vectorise vectorize serialise serialize
⊂⍤¯1∘⍉Ym	Matrix to vector of column vectors	Tacit	Monadic Function		Structural	split
↓M	Matrix to vector of row vectors	Primitive	Monadic Function	Non-scalar function	Structural	downarrow split
(2÷⍨1⊥⊢⌷⍨∘⊂⍋⌷⍨∘⊂∘⌈2÷⍨0 1+≢)Nv	Median of non-empty Nv	Tacit	Monadic Function		Mathematical	average
X{(⊂⍋∊⍳∘≢¨⍺ ⍵)⌷⍺⍪⍵} Y	Merge X and Y alternately	Dfn	Dyadic Function		Structural	merge mesh alternate shuffle
X⌷⍨∘⊂∘⍋∘⍋Y	Reorder X according to the order of Y	Tacit	Dyadic Function		Mathematical	mesh
M,.×N	Mid product of AX and AY.	Tacit	Dyadic Function		Mathematical	midproduct
As○⍨∘(¯10+~)⍨N	Mirror N in x-axis if As	Tacit	Dyadic Function		Mathematical	conjugate negateimaginary
+N	Mirror N in x-axis	Tacit	Monadic Function		Mathematical	conjugate negateimaginary
-∘+N	Mirror N in y-axis	Tacit	Monadic Function		Mathematical	negatereal
{(⊣/⍵)/⍨(⌈/=⊢)⊢/⍵}{⍺(≢⍵)}⌸	Mode(s): Most frequent elements of data	Tacit	Monadic Function		Mathematical	average
X(⊢⌷⍨∘⊂∘⍋(⊂⍤¯1⊢)∊(⊂⍤¯1⊣))Y	Move items X to end of Y	Tacit	Dyadic Function		Sets	
Xv(⊢⌷⍨∘⊂∘⍋∊⍨)Yv	Move items Xv to end of Yv	Tacit	Dyadic Function		Sets	
⍉∘↑Xv Yv …	N-column matrix from N vectors	Tacit	Monadic Function		Structural	transpose columns
↑Xv Yv …	N-row matrix from N vectors	Primitive	Monadic Function		Structural	rows
Is{⊃-//⍺ 1/¯2 ⍵}N	Is differences of differences of adjacents	Dfn	Dyadic Function		Mathematical	nth derivative deltas
(*∘○0J2×⊢÷⍨1+⍳)Js	Js spokes of unit wheel	Tacit	Monadic Function		Mathematical	circle points distributed
Nm(Is{(⍪⍺⍺÷⍨⍳⍺⍺)⊥⍺+.×⍵})Mv	Is-point spline of Nm Bezier matrix with Mv control points	Dop	Dyadic Function	Monadic Operator	Mathematical	curvefitting model interpolation
⊃∘⌽∘⍴Y	Number of columns in Y	Tacit	Monadic Function		Array Properties	trailingshape
×/∘⍴Y	Number of elements in Y	Tacit	Monadic Function		Array Properties	items cells
(×/1↓⍴)Y	Number of elements in a plane of rank-3 array Y	Tacit	Monadic Function		Array Properties	layersshape
(⊥⍨' '=⌽)Dv	Number of leading blanks	Tacit	Monadic Function		Text	prefixspaces
I(!×∘!⊣)J	Number of permutations of (I,J) combinations	Tacit	Dyadic Function		Mathematical	combinatorics
(⊥⍨' '∘=)Dv	Number of trailing blanks	Tacit	Monadic Function		Text	suffixspaces
Is({⍵/⍨∧⌿2<⌿⍵}1+{(-⍺)↑⍳⍵}⊤∘⍳!×∘!⊣)Js	Numeric matrix of (Is,Js) combinations	Tacit	Dyadic Function		Mathematical	combinatorics selections
(÷1⊥÷)Nv	Ohm's Law: resistance of parallel resistors/capacitance of capacitors in series	Tacit	Monadic Function		Mathematical	electronics circuits Ω
{⍉' ○*⍟'[1+2⊥⍵∘.=⌽⍳⌈/,⍵]}Jm	Scatter plot of two series	Tacit	Monadic Function		Mathematical	chart curve graph
(↑⍴¨∘'⎕')J	Bar chart	Tacit	Monadic Function		Mathematical	plot curve graph
⊢name←Y	Output assigned value	Syntax			Expression	passthroughvalue yieldassignment
(0J1⊥⊖)Nm	Parallel projection of 3D object in Nm	Tacit	Monadic Function		Mathematical	
≠\B	Parity: Connect odd and even ones	Tacit	Monadic Function		Mathematical	1s
(≠\∨⊢)B	Parity with connectors: Connect odd and even ones	Tacit	Monadic Function		Mathematical	1s
(∘.!⍨0,⍳)Js	Pascal's triangle of order Js	Tacit	Monadic Function		Mathematical	
Ms(0J1⊥(1↓⊢∘⊖)×⊢÷⊣-¯1↑⊢)Nm	Perspective projection of Nm from distance Ms	Tacit	Dyadic Function		Mathematical	
f{⍵+¯11○⍺⍺ ⍵}Nv	Plot of scalaroid function f for data Nv	Dop	Monadic Function	Dyadic Operator	Mathematical	
(1 ¯1×⊂)N	±N by juxtaposition	Tacit	Monadic Function		Mathematical	plusminus
(¯1 1×⊂)N	∓N by juxtaposition	Tacit	Monadic Function		Mathematical	minusplus
M((*0-⊣)×*÷⊢∘!)N	Poisson distribution of states N with average M	Tacit	Dyadic Function		Mathematical	
expr⊣name←Y	Combining two lines into one	Primitive	Dyadic Function		lev lefttack where	
'*/'∘(≠\(<\⍷)∨∘⌽(<\⍷∘⌽))D	Position of */comments*/	Tacit	Monadic Function		Text	cstylecomments *//*
X(⊃∘⍸∘~∊)Y	Position of first item in X not in Y	Tacit	Dyadic Function		Index Generation	
C⍳∘⊂Dv	Position of first occurrence of string Dv in list of strings C	Tacit	Dyadic Function		Index Generation	indexin indexof position vtv
C∊⍨∘⊂Dv	Is string Dv a member of list of strings C	Tacit	Dyadic Function		Index Generation	isin membership containedin has vtv
X⍳⍨∘⌽Y	Position of last X in Y	Tacit	Dyadic Function		Index Generation	lastindexin lastindexof lastposition vtv
PO←X(Is{⍺⍺⊃⍸⍺≡¨⊂⍵})Y	Position of the Is'th Y in X	Dop	Dyadic Function	Monadic Operator	Index Generation	nthindexin nthindexof nthposition
X(⍸⍷⍨∘⊂)Y	Positions of item Y in X	Tacit	Dyadic Function		Index Generation	indicesin indicesof position
X(⊃∘⍸⍷⍨∘⊂)Y	Position of first item Y in X	Tacit	Dyadic Function		Index Generation	indicesin indicesof position
X(⍸⍷)Y	Positions of starts of subarray X in Y	Tacit	Dyadic Function		Index Generation	beginningsof
X(⊃∘⍸⍷)Y	Position of first subarray X in Y	Tacit	Dyadic Function		Index Generation	beginningsof
Xm(,⍤1)Yv	Postfix vector to each row of matrix	Tacit	Dyadic Function		Structural	append rows
Xv(,⍤1)Ym	Prefix vector to each row of matrix	Tacit	Dyadic Function		Structural	prepend rows
Ms((÷1+⊣)⊥∘⌽⊢)Nv	Present value of cash flows Nv at interval Ms	Tacit	Dyadic Function		Mathematical	worth
((⊢~∘.×⍨)1↓⍳)Js	Prime numbers until Js	Tacit	Monadic Function		Mathematical	
×/N	Product of N (row-wise)	Tacit	Monadic Function		Mathematical	horizontal product enlargedpi bigpi capitalpi ∏ Π
⍞↓⍨≢⍞←'What? '	Prompt and response on same line	Syntax			Expression	input
4○N	Triangle hypotenuse as function of side ratio	Primitive	Dyadic Function		Mathematical	Pythagorean trigonometry
¯4○N	Triangle side (≥1) as function of hypotenuse	Primitive	Dyadic Function		Mathematical	Pythagorean trigonometry
0○N	Triangle side as function of side (hypotenuse≤1)	Primitive	Dyadic Function		Mathematical	Pythagorean trigonometry
+.×⍨Nv	Sum of the squares of N	Tacit	Monadic Function		Mathematical	Pythagorean trigonometry
({⍞}¨⍳)Jv	Input of ×/Jv strings	Tacit	Monadic Function		Expression	multi input characterinput rawinput stdin
(1=∘?⍴∘2)Jv	Random Boolean array of shape Jv	Tacit	Monadic Function		Boolean/Logical	base2
(⌈/-⌊/)∘,N	Range of N	Tacit	Monadic Function		Mathematical	span minmaxmin extremes
(⊢⍉⍨1/⍨≢∘⍴)Y	Main diagonal of any array	Tacit	Monadic Function		Array Properties	maindiagonal nwse nw-se
(⌽⍉⍨1/⍨≢∘⍴)Y	Anti-diagonal of any array	Tacit	Monadic Function		Array Properties	antidiagonal nesw ne-sw
(1 1⍉Xm)←Yv	Reassign main diagonal of matrix	Syntax			Expression	assignment gets is copula let redefine name naming denotes means inplace update
Ms((9 11○⊣)+.×(9 11∘.○⊢))N	Rectangular scale of complex N by complex factor Ms	Tacit	Dyadic Function		Mathematical	resize stretch squeeze
(*∘○0J2×⊢÷⍨0,⍳)Js	Regular unit polygon of Js edges	Tacit	Monadic Function		Mathematical	star triangle square pentagon hexagon octagon
{⍵/⍨' '∨.≠⍵}Dm	Remove blank columns	Dfn	Monadic Function		Text	delete allspaces
{⍵⌿⍨' '∨.≠⍵}Dm	Remove blank rows	Dfn	Monadic Function		Text	delete allspaces emptylines
~∘' '¨D	Remove blanks in each string	Tacit	Monadic Function		Text	deletespaces
(~∘' ')Dv	Remove blanks in string	Tacit	Monadic Function		Text	deletespaces
{⍵/⍨¯1↓1,1(⊢∨⌽)' '∨.≠⍵}Dm	Remove duplicate blank columns	Dfn	Monadic Function		Text	delete allspaces repeated extraneous
{⍵⌿⍨¯1↓1,1(⊢∨⌽)⍵∨.≠' '}Dm	Remove duplicate blank rows	Dfn	Monadic Function		Text	delete allspaces repeated extraneous
' '∘(1↓,(/⍨)1(⊢∨⌽)0,≠)Dv	Remove leading, trailing, and duplicate blanks	Tacit	Monadic Function		Text	delete trim reformat extraneous normalise normalize spaces
{⍵/⍨∨\' '∨.≠⍵}Dm	Remove leading blank columns	Dfn	Monadic Function		Text	delete allspaces
{⍵⌿⍨∨\⍵∨.≠' '}Dm	Remove leading blank rows	Dfn	Monadic Function		Text	delete allspaces
{⍵/⍨∨\⍵≠' '}Dv	Remove leading blanks	Dfn	Monadic Function		Text	delete spaces beginning
(~∘'.,:;?!')Dv	Remove punctuation.	Tacit	Monadic Function		Text	delete symbols
{⍵↓⍨-⊥⍨' '=⍵}Dv	Remove trailing blanks	Tacit	Monadic Function		Text	delete spaces end
'-'@(=∘' ')Y	Replace all blanks with dashes	Tacit	Monadic Function		Text	spaces substitute format
(,name)←⊂Y	Structural assignment: Replace all items, shape unchanged	Syntax			Expression	leftarrow assignment gets is copula let redefine name naming denotes means inplace update
X@(∊∘Y)Z	Replace all occurrences of elements from Y in array Z with X	Primitive	Monadic Function	Dyadic Operator	Function Application	at substitute merge amend replace update
' '@{2=⌈\' 0'⍳⍵}D	Replace leading zeros with blanks	Tacit	Monadic Function		Text	spaces nulls zeroes nils naughts noughts 0s
Av{⍵⌿⍨1+⍺}Y	Duplicate Y cells where indicated by Bv	Dfn	Dyadic Function		Structural	replicate double
M(⊣+|⍨∘-⍨)N	Residue after dividing N by M but replacing 0 with M	Tacit	Dyadic Function		Mathematical	modulo modulus residue divisionremainder 12hourclock
(⊢⌽⍨1-=∘' '⊥1)Dm	Right justify matrix Dm	Tacit	Monadic Function		Text	rightalignright flushrightflush rightjustifyright
{{⍵+.×¯1*2</⍵,0}(,1 5∘.×⍨1,10*⍳3)['IVXLCDM'⍳⍵]}Dv	Evaluate Roman numeral	Dfn	Monadic Function		Mathematical	romannumerals arabicnumerals latinnumerals
Ms×∘×⍨Nv	Rotate figure Nv in direction of point Ms	Tacit	Dyadic Function		Mathematical	rotation complex points
Is(⍎⍕)N	Rounding N to Is decimal places	Tacit	Dyadic Function		Mathematical	precision
(××∘⌊|+1≤2||)N	Rounding to nearest even number	Tacit	Monadic Function		Mathematical	precision
(××∘⌊|+1>2||)N	Rounding to nearest odd number	Tacit	Monadic Function		Mathematical	precision
M(⊢∘××⊣×∘⌊0.5+∘|÷⍨)N	Rounding N to nearest M	Tacit	Dyadic Function		Mathematical	precision
(××∘⌊0.5+|)N	Rounding to nearest whole number	Tacit	Monadic Function		Mathematical	precision
(+/÷1⌈⊃∘⌽∘⍴)N	Row averages (0 if none)	Tacit	Monadic Function		Mathematical	arithmeticmean
(+/÷1⌈+.≠∘0)N	Row averages of non-zero elements (0 if none)	Tacit	Monadic Function		Mathematical	arithmeticmean nonzero
(0.5*⍨((≢×+.*∘2)-2*⍨+⌿)÷≢×¯1+≢)Nv	Sample standard deviation	Tacit	Monadic Function		Mathematical	stddev σ sigma SD empirical
(≢÷⍨0.5*⍨(≢×+.*∘2)-2*⍨+⌿)Nv	Theoretical standard deviation	Tacit	Monadic Function		Mathematical	stddev σ sigma SD
(≢÷⍨≢÷⍨(≢×+.*∘2)-2*⍨+⌿)Nv	Theoretical variance	Tacit	Monadic Function		Mathematical	σ² s² Var(X)
(((≢×+.*∘2)-2*⍨+⌿)÷≢×1⌈¯1+≢)Nv	Sample variance	Tacit	Monadic Function		Mathematical	σ² s² empirical Var(X)
(100×⊢÷⍤1+⌿)N	Column-wise percentage per column	Tacit	Monadic Function		Mathematical	%
(100×⊢÷⍤1 0+/)N	Row-wise percentage per row	Tacit	Monadic Function		Mathematical	%
Is+/N	Running sum of Is consecutive elements of N	Tacit	Dyadic Function		Mathematical	windowedsum
(?∘≢⊃⊢)Yv	Pick  random item from vector	Tacit	Monadic Function		Selection	selectrandom
(?∘⍴⌷⊢)Y	Index random item from array	Tacit	Monadic Function		Selection	selectrandom
(?⍨⊃¨⊂)Y	Shuffle vector	Tacit	Monadic Function		Selection	mix randomize randomise
Ij(⊃⌽)Yv	⎕IO-independent (as 0) cyclic pick	Tacit	Dyadic Function		Selection	⎕ioindependent ⎕ioindependence ⎕io-insensitive ⎕ioinsensitive
Xs(1↓∘∊,¨)Yv	Join vectors Yv with separator Xs	Tacit	Dyadic Function		Structural	combine merge
0 100 100∘⊤Js	Separating packed YYYYMMDD date integer date	Tacit	Monadic Function		Mathematical	format split unpack
100∘⊥Jv	Joining  date YYYY M D to packed YYYYMMDD integer	Tacit	Monadic Function		Mathematical	format split unpack
Is(×∘×⍨∘≢↑↓)Bv	Shift Bv forward or backward Is positions	Tacit	Dyadic Function		Boolean/Logical	leftshift rightshift bits bytes
M{×11○(⍵-1↓⍺)×+2-/⍺}Ns	Sign of point Ns relative to edges of M	Dfn	Dyadic Function		Mathematical	signum
M(×∘×⍨∘|)N	Resign: Transfer of sign from M to N	Tacit	Dyadic Function		Mathematical	signum
Ms(⊢+¯11○⊣×9○⊢)N	Skew N in y-axis by fraction Ms	Tacit	Dyadic Function		Mathematical	oblique
⌈/⍬	Smallest representable number	Constant			Mathematical	negativeinfinity -∞ mostnegative least
⌊/⍬	Largest representable number	Constant			Mathematical	negativeinfinity ∞ mostpositive biggest
({⍉(⊂∘⍋⌷⊢)⍤1⍉⍵}⍤2)Y	Sort each column in ascending order	Tacit	Monadic Function		Mathematical	sort order up increasing
((⊂∘⍋⌷⊢)⍤1)Y	Sort each row in ascending order	Tacit	Monadic Function		Mathematical	sort order up increasing
{⍵⌷⍨⊂⍋{(819⌶⍵)⍵}¨⍵}Y	Sorting Y in case-insensitive alphabetical order	Dfn	Monadic Function		Text	sort order up increasing caseinsensitive
(9 11○⊂)N	Split complex array into real array and imaginary array	Tacit	Monadic Function		Mathematical	re() im()
×∘|⍨N	Square without changing sign	Tacit	Monadic Function		Mathematical	
Av(≠\∨{⍺\2≠/0,⍺/⍵}⊢)Bv	State of switch given Bv on and Av off spikes	Tacit	Dyadic Function		Boolean/Logical	signal on/off
Ms(⊢∘⊂+¯0.5 0.5×⊣)N	Stereo pair (Eye separation Ms)	Tacit	Dyadic Function		Mathematical	
('FDCBA'⌷⍨∘⊂0 60 70 80 90∘⍸)J	Students grades given score	Tacit	Monadic Function		Mathematical	
Xv{+/⍵}⌸Nv	Sum Nv by buckets Xv (⍴Nv ←→ ⍴Xv)	Tacit	Dyadic Function		Mathematical	group classify bin
(+/∊)N	Sum of all atoms in N	Tacit	Monadic Function		Mathematical	sumall +⌿∊ grandtotal sumitems
(+/|)N	Sum of magnitude of N	Tacit	Monadic Function		Mathematical	absolutesummation sumabs
+/N	Sum of N (row-wise)	Tacit	Monadic Function		Mathematical	horizontal summation enlargedsigma bigsigma capitalsigma ∑ Σ sum()
Iv{⍵⊆⍨⍺/⍳≢⍺}Y	Cut Yv into non-empty partitions of length Iv (+/Iv ←→ ⍴Y)	Dfn	Dyadic Function		Structural	segment chop split cut separate
Iv{(-⍺)↑¨↑∘⍵¨+\⍺}Y	Cut Yv into partitions of length Iv	Dfn	Dyadic Function		Structural	segment chop split cut separate
(¯11○+)N	Swap real and imaginary	Tacit	Monadic Function		Mathematical	
+∘-N	Negate real part ("real conjugate")	Tacit	Monadic Function		Mathematical	
(¯97(|-⊣)⊢)Is	SWIFT check digit from Is bank number	Tacit	Monadic Function		Mathematical	
(0=⊢∘.|⍨∘⍳⌈/)Iv	Table of divisibility	Tacit	Monadic Function		Mathematical	
Mv{⍵+.×(⍺∘*÷!)¯1+⍳≢⍵}Nv	Taylor series at point Mv, coefficients Nv	Dfn	Dyadic Function		Mathematical	
{⍵/⍨(⊢∨≠\)⍵=''''}Dv	Text (including quotes) in expression	Dfn	Monadic Function		Text	strings
(⊢⊆⍨∘(~∧≠\)=∘'''')Dv	Text (without quotes) in expression	Tacit	Monadic Function		Text	strings
(⊃⌽∘,)Y	The last item of Y	Tacit	Monadic Function		Selection	
(⊃0⍴⊂∘⊃)Y	Prototype (converts characters to spaces, numbers to zeros)	Tacit	Monadic Function		Array Properties	fillelement padding
Is(+/÷⊣)N	N-wise rolling average	Tacit	Dyadic Function		Mathematical	rollingmean windowedmean windowedaverage
(⍉⍤2)Y	Transpose every submatrix of Y	Tacit	Monadic Function		Structural	cant  ^T ⸆ ᵀ
{⍉2⊥⍣¯1⊢0,⍳2*⍵-1}Js	Truth table with Js variables	Dfn	Monadic Function		Boolean/Logical	
0 1∘{(⍵,⍺)⍪⍺,∘.(⍎⍵)⍨⍺}Ds	Truth table: All possibilities of Boolean primitive Ds	Tacit	Monadic Function		Boolean/Logical	
(⊢⍴⍨2,⍨∘⌈.5×≢)Yv	Two column matrix from one vector (row-wise)	Tacit	Monadic Function		Structural	
(⍉⊢⍴⍨2,∘⌈.5×≢)Yv	Two column matrix from one vector (column-wise)	Tacit	Monadic Function		Structural	
Xv(,⍤0)Yv	Two column matrix from two vectors	Tacit	Monadic Function		Structural	
Xv{↑⍺⍵}Yv	Two row matrix from two vectors	Dfn	Monadic Function		Structural	
(326(=-⍨2|⊢)⎕DR)Y	Type of simple Y (¯1:mixed, 0:character, 1:numeric)	Tacit	Monadic Function		Array Properties	
(,[0.5]∘'¯')Dv	Underlines a string. (1=⎕IO)	Tacit	Monadic Function		Text	underscore
(⊢,[0.5]'¯'\⍨≠∘' ')Dv	Underlines non-blanks in a string	Tacit	Monadic Function		Text	wordunderlinewords wordunderscorewords
2 2 2⊤⍳8	Unit cube	Constant	Expression		Mathematical	
2 2⊤⍳4	Unit square	Constant	Expression		Mathematical	
2 2 2 2⊤⍳16	Unit tesseract	Constant	Expression		Mathematical	
X@{B}Y	Unpack a vector X into an array based on mask B	Primitive	Monadic Function	Dyadic Operator	Structural	
Cv(⊢⊆⍨∘~∊⍨)Dv	Split vector Dv at any sequence of characters in Cv	Tacit	Dyadic Function		Text	cut chop divide linebreak newline carriagereturn crnl crlf linefeed vec2vtv partition segment separate
{⊂⍤¯1⊢1/⍵}Y	Vector of major cells for any rank	Dfn	Monadic Function		Structural	vectorise vectorize
(7|2⎕NQ⎕←#'DateToIDN',⊂)Jv	Weekday (Sunday:0) given Jv:Y M D	Tacit	Monadic Function		Mathematical	gregoriancalendar
(7|2⎕NQ#'DateToIDN',,∘1 1)Js	Weekday (S-S:0-6) of first of year Js	Tacit	Monadic Function		Mathematical	gregoriancalendar
Mv(+.×÷1⊥⊣)Nm 	Weighted average of columns of Nm with weights Mv	Tacit	Dyadic Function		Mathematical	
Mv(+.×⍨÷1⊥⊣)Nm 	Weighted average of rows of Nm with weights Mv	Tacit	Dyadic Function		Mathematical	
f@{B}Y	Where: Execute f on condition B mask	Dop	Dyadic Function	Monadic Operator	Function Application	at amend update
(2|⎕DR⍤1)Y	Which rows of Y are all numeric?	Tacit	Monadic Function		Array Properties	allnumberrows
X(f{↑[⍵⍵](⊂[⍵⍵]⍺)⍺⍺⊂⍵}ax)Y	Run f on axes of X	Dop	Dyadic Function	Dyadic Operator	Function Application	onaxis apply
X(f{↑[⍵⍵](⊂AX)f⊂[⍵⍵]⍵}ax)Y	Run f on axes of Y	Dop	Dyadic Function	Dyadic Operator	Function Application	onaxis apply
X(f{⍺←⊢ ⋄ ⎕IO←⍵⍵ ⋄ ⍺ ⍺⍺ ⍵}Bs)Y	Run f in origin Bs	Dop	Function	Dyadic Operator	Function Application	⎕IO indexorigin apply
X(f⍤0)Y	Run f to scalars	Tacit	Function	Monadic Operator	Function Application	apply
≠⍨Y	Zeros, same shape and structure	Tacit	Monadic Function		Boolean/Logical	zeroes naughts 0s
(0≠/)Yv	Zeros, same shape plus one	Tacit	Monadic Function		Boolean/Logical	zeroes naughts 0s
=⍨Y	Ones, same shape and structure	Tacit	Monadic Function		Boolean/Logical	1s
(0=/)Yv	Ones, same shape plus one	Tacit	Monadic Function		Boolean/Logical	1s
∊∘⍬Y	Zeros, simple with same shape	Tacit	Monadic Function		Boolean/Logical	zeroes naughts 0s