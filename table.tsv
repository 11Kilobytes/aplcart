SYNTAX	DESCRIPTION	CLASS	TYPE	GROUP	CATERGORY	KEYWORDS
+Y	Conjugate ('Identity' if Y not complex)	Primitive	Monadic Function	Scalar Function	Mathematical	plus complex
-N	Negate: 0-N	Primitive	Monadic Function	Scalar Function	Mathematical	minus hyphen invert additiveinverse opposite dash negation signchange
×N	Direction ('Signum' if N is real)	Primitive	Monadic Function	Scalar Function	Mathematical	cross sgn sign
÷N	Reciprocal: 1÷N	Primitive	Monadic Function	Scalar Function	Mathematical	multiplicativeinverse opposite obelus invert
⌊N	Round down to integer	Primitive	Monadic Function	Scalar Function	Mathematical	downstile floor rounddown
⌈N	Round up to integer	Primitive	Monadic Function	Scalar Function	Mathematical	upstile roundup
|N	Magnitude (absolute value)	Primitive	Monadic Function	Scalar Function	Mathematical	verticalbar pipe stile stroke verticalline modulo modulus abs magnitude amplitude
*N	e raised to the power N	Primitive	Monadic Function	Scalar Function	Mathematical	power star asterisk exponential etothepowerof naturalexponential
⍟N	Natural logarithm of N	Primitive	Monadic Function	Scalar Function	Mathematical	naturallogarithm circlestar starcircle splat 2.718281828459045235360287471352662
○N	pi times N	Primitive	Monadic Function	Scalar Function	Circular/Trigonometric	archimedesconstant 3.141592653589793238462643383279503 π
!N	Factorial (Gamma function of N+1)	Primitive	Monadic Function	Scalar Function	Mathematical	countpermutations exclamation bang shriek
?J	Random number selected from ⍳J	Primitive	Monadic Function	Scalar Function	Mathematical	questionmark roll randominteger interrogationpoint query eroteme
?B	Random real number between (0,1) if B=0 or ⎕IO if B=1	Primitive	Monadic Function	Scalar Function	Mathematical	questionmark roll randomfloat interrogationpoint query eroteme
~B	Logical Inverse: 0=B	Primitive	Monadic Function	Scalar Function	Mathematical	tilde not logicalnot logicalnegation logicalcomplement ¬
M+N	Add N to M	Primitive	Dyadic Function	Scalar Function	Mathematical	plus addition
M-N	Subtract N from M	Primitive	Dyadic Function	Scalar Function	Mathematical	minus dash hyphen subtraction difference
M×N	Multiply M and N	Primitive	Dyadic Function	Scalar Function	Mathematical	cross times multiplication ∙⋅·
M÷N	Divide M by N	Primitive	Dyadic Function	Scalar Function	Mathematical	division over ⁄
M|N	Residue after dividing N by M	Primitive	Dyadic Function	Scalar Function	Mathematical	verticalbar pipe stile stroke verticalline modulo modulus residue divisionremainder
M*N	M raised to the power N	Primitive	Dyadic Function	Scalar Function	Mathematical	power star asterisk raisedtothepowerof exponentiation
M⍟N	Base-M logarithm of N	Primitive	Dyadic Function	Scalar Function	Mathematical	logarithm circlestar starcircle splat
M⌈N	Maximum of M and N	Primitive	Dyadic Function	Scalar Function	Mathematical	upstile maximum greater larger
M⌊N	Minimum of M and N	Primitive	Dyadic Function	Scalar Function	Mathematical	downstile minimum lesser smaller
I○N	Circular functions	Primitive	Dyadic Function	Scalar Function	Mathematical	circular trigonometric hyperbolic complex imaginary arcus angle goniometric
M!N	Number of selections of size M from N (Beta fn)	Primitive	Dyadic Function	Scalar Function	Mathematical	exclamation bang shriek binomial
M∧N	Lowest Common Multiple of M and N	Primitive	Dyadic Function	Scalar Function	Mathematical	least smallest lcm denominator lcd
M∨N	Greatest Common Divisor of M and N	Primitive	Dyadic Function	Scalar Function	Mathematical	gcd gcf factor hcf highest gcm measure hcd
M<N	Less Than	Primitive	Dyadic Function	Scalar Function	Comparison	lt before precedes ≺
M≤N	Less Than Or Equal To	Primitive	Dyadic Function	Scalar Function	Comparison	le before precedes ≦
M≥N	Greater Than Or Equal To	Primitive	Dyadic Function	Scalar Function	Comparison	ge after follows ≧
M>N	Greater Than	Primitive	Dyadic Function	Scalar Function	Comparison	gt after follows ≻
X=Y	Equal To	Primitive	Dyadic Function	Scalar Function	Comparison	same
X≠Y	Not Equal To	Primitive	Dyadic Function	Scalar Function	Comparison	ne unequal different
A<B	Converse Nonimplication	Primitive	Dyadic Function	Scalar Function	Boolean/Logical	
A≤B	Implication	Primitive	Dyadic Function	Scalar Function	Boolean/Logical	materialconditional materialconsequence implies imply therefore ∴⇒
A≥B	Converse Implication	Primitive	Dyadic Function	Scalar Function	Boolean/Logical	because ∵⇐ if
A>B	Nonimplication	Primitive	Dyadic Function	Scalar Function	Boolean/Logical	abjunction
A=B	XNOR	Primitive	Dyadic Function	Scalar Function	Boolean/Logical	materialbiconditional eqv nxor bothorneither exclusivenor materialequivalence ⇔ iff
A≠B	XOR	Primitive	Dyadic Function	Scalar Function	Boolean/Logical	exclusivedisjunction eor exor ⊕⊻
A∧B	AND	Primitive	Dyadic Function	Scalar Function	Boolean/Logical	conjunction caret wedge hat circumflex
A∨B	OR	Primitive	Dyadic Function	Scalar Function	Boolean/Logical	disjunction vel alternation Caron hacek invertedcircumflex check hachek
A⍲B	NAND	Primitive	Dyadic Function	Scalar Function	Boolean/Logical	shefferstroke notand andtilde carettilde alternativedenial
A⍱B	NOR	Primitive	Dyadic Function	Scalar Function	Boolean/Logical	peirce'sarrow quine'sdagger ampheck neithernor jointdenial
0∘N	cos ←→ sin: (1-N*2)*.5	Primitive	Dyadic Function	Scalar Function	Circular/Trigonometric	pythagorean complementary cop
¯1○N	Arcsin N	Primitive	Dyadic Function	Scalar Function	Circular/Trigonometric	arcsine asin arcussinus
¯2○N	Arccos N	Primitive	Dyadic Function	Scalar Function	Circular/Trigonometric	arccosine acos arcuscosinus
¯3○N	Arctan N	Primitive	Dyadic Function	Scalar Function	Circular/Trigonometric	arctangent atan arcustangent
¯4○N	cosh → sinh: (N+1)×((N-1)÷N+1)*.5	Primitive	Dyadic Function	Scalar Function	Circular/Trigonometric	pythagorean complementary cohn
¯5○N	Hyperbolic Arcsinh N	Primitive	Dyadic Function	Scalar Function	Circular/Trigonometric	arcsine asinh arcussinus arsinh area
¯6○N	Hyperbolic Arccosh N	Primitive	Dyadic Function	Scalar Function	Circular/Trigonometric	arccosine acosh arcuscosinus arcosh area
¯7○N	Hyperbolic Arctanh N	Primitive	Dyadic Function	Scalar Function	Circular/Trigonometric	arctangent atanh arcustangent artanh area
¯8○N	icos ←→ -isin: -(-1+N*2)*.5	Primitive	Dyadic Function	Scalar Function	Circular/Trigonometric	pythagorean complementary nconh
¯9○N	N	Primitive	Dyadic Function	Scalar Function	Circular/Trigonometric	identity
¯10○N	+N	Primitive	Dyadic Function	Scalar Function	Circular/Trigonometric	complexconjugate
¯11○N	N×0J1	Primitive	Dyadic Function	Scalar Function	Circular/Trigonometric	imaginary complex itimes
¯12○N	*N×0J1	Primitive	Dyadic Function	Scalar Function	Circular/Trigonometric	antiphase phasor cis
1○N	Sine N	Primitive	Dyadic Function	Scalar Function	Circular/Trigonometric	sinus
2○N	Cosine N	Primitive	Dyadic Function	Scalar Function	Circular/Trigonometric	cosinus
3○N	Tangent N	Primitive	Dyadic Function	Scalar Function	Circular/Trigonometric	tanh
4○N	sinh → cosh: (1+N*2)*.5	Primitive	Dyadic Function	Scalar Function	Circular/Trigonometric	pythagorean complementary coh
5○N	Hyperbolic sine N	Primitive	Dyadic Function	Scalar Function	Circular/Trigonometric	sinus sinh
6○N	Hyperbolic cosine N	Primitive	Dyadic Function	Scalar Function	Circular/Trigonometric	cosinus cosh
7○N	Hyperbolic tangent N	Primitive	Dyadic Function	Scalar Function	Circular/Trigonometric	tanh
8○N	icos ←→ isin: (-1+N*2)*.5	Primitive	Dyadic Function	Scalar Function	Circular/Trigonometric	pythagorean complementary conh
9○N	Real part of N	Primitive	Dyadic Function	Scalar Function	Circular/Trigonometric	
10○N	Magnitude of N	Primitive	Dyadic Function	Scalar Function	Circular/Trigonometric	
11○N	Imaginary part of N	Primitive	Dyadic Function	Scalar Function	Circular/Trigonometric	
12○N	phase N	Primitive	Dyadic Function	Scalar Function	Circular/Trigonometric	argument arc
⌹Nm	Matrix inverse ofNm (square Nm)	Primitive	Monadic Function	Non-scalar Function	Mathematical	domino quaddivide
⌹Nm	Matrix pseudo-inverse ofNm (over-determined Nm)	Primitive	Monadic Function	Non-scalar Function	Mathematical	domino quaddivide leastsquares
Mm⌹Nm	Multiply Mm with inverse of Nm	Primitive	Dyadic Function	Non-scalar Function	Mathematical	domino matrixdivide quaddivide
M⊤N	Encode value N in number system M	Primitive	Dyadic Function	Non-scalar Function	Mathematical	antibase tobase encode number downtack representation unpack tomixedradix toradix
M⊥N	Decode: Evaluate N in number system M	Primitive	Dyadic Function	Non-scalar Function	Mathematical	frombase decode uptack pack frommixedradix fromradix polynomial basevalue
⍴Y	Shape: Length of each axis of Y	Primitive	Monadic Function	Non-scalar Function	Array Properties	dimensions rho
≡Y	Depth: Maximum level of nesting in Y (negative if uneven)	Primitive	Monadic Function	Non-scalar Function	Array Properties	equalunderbar
≢Y	Tally: Number of items in leading axis	Primitive	Monadic Function	Non-scalar Function	Array Properties	equalunderbarslash unequalunderbar count length cells
⊂Y	Enclose: Scalar containing Y	Primitive	Monadic Function	Non-scalar Function	Structural	leftshoe
⊆Y	Nest: Y if already nested, else scalar containing Y	Primitive	Monadic Function	Non-scalar Function	Structural	leftshoeunderbar encloseifsimple conditionalenclose nested boxsimple eis condencl
↑Y	Mix: Remove nesting	Primitive	Monadic Function	Non-scalar Function	Structural	uparrow
↓Y	Split: Nest sub-arrays	Primitive	Monadic Function	Non-scalar Function	Structural	downarrow
∊Y	Enlist: Simple vector from elements of Y	Primitive	Monadic Function	Non-scalar Function	Structural	flatten raze
,[ax]Y	Ravel with Axes: insert new axis or combine axes	Primitive	Monadic Function	Non-scalar Function	Structural	increaserank decreaserank reducerank comma
,Y	Ravel: Reshape into a vector	Primitive	Monadic Function	Non-scalar Function	Structural	comma flatten raze
⍪Y	Table: Reshape into 2-dimensional array	Primitive	Monadic Function	Non-scalar Function	Structural	commabar ravelcells flattencells razecells
⌽Y	Reverse last axis of Y	Primitive	Monadic Function	Non-scalar Function	Structural	circlestile mirror
⊖Y	Reverse leading axis of Y	Primitive	Monadic Function	Non-scalar Function	Structural	circlebar rowel upset flip upend
⍉Y	Transpose: Reverse order of axes of Y	Primitive	Monadic Function	Non-scalar Function	Structural	circlebackslash cant reverseaxes
Iv⍴Y	Reshape Y to have shape Iv	Primitive	Dyadic Function	Non-scalar Function	Structural	mold form dimension array
I⌽Y	Rotate vectors along last axis of Y	Primitive	Dyadic Function	Non-scalar Function	Structural	circlestile
I⊖Y	Rotate vectors along leading axis of Y	Primitive	Dyadic Function	Non-scalar Function	Structural	circlebar
Iv⍉Y	Reorder the axes of Y	Primitive	Dyadic Function	Non-scalar Function	Structural	circlebackslash diagonal reorderaxes
X,[ax]Y	Laminate: Join along new axis	Primitive	Dyadic Function	Non-scalar Function	Structural	comma concatenate
X,Y	Catenate: Join along last axis	Primitive	Dyadic Function	Non-scalar Function	Structural	comma concatenate juxtapose horizontally
X⍪Y	Catenate First: Join along leading axis	Primitive	Dyadic Function	Non-scalar Function	Structural	commabar concatenate over ontop atop vertically
⍳Jv	Indices of all items of array of shape Jv	Primitive	Dyadic Function	Non-scalar Function	Index Generation	iota integers ints countto sequence numbers range
⍸B	Indices of all 1s in B	Primitive	Monadic Function	Non-scalar Function	Index Generation	wheretrues iotaunderbar locationsoftrues
⍋Y	Upgrade: Indices to reorder Y ascending	Primitive	Monadic Function	Non-scalar Function	Index Generation	gradeup deltastile upgrade pine concordetakingoff
⍒Y	Downgrade: Indices to reorder Y descending	Primitive	Monadic Function	Non-scalar Function	Index Generation	gradedown delstile downgrade spine concordelanding
X⍳Y	Index of: Indices in X of items of Y	Primitive	Dyadic Function	Non-scalar Function	Index Generation	iota indicesin indexof position
X⍸Y	Indices of items of Y in intervals with cut-offs X	Primitive	Dyadic Function	Non-scalar Function	Index Generation	intervalindex iotaunderbar bin group range
Is?Js	Deal: Is distinct items from ⍳Js	Primitive	Dyadic Function	Non-scalar Function	Index Generation	questionmark interrogationpoint query eroteme
C⍋D	Upgrade using collation sequence C	Primitive	Dyadic Function	Non-scalar Function	Index Generation	gradeup deltastile upgrade pine concordetakingoff customalphabet
C⍒D	Downgrade using collation sequence C	Primitive	Dyadic Function	Non-scalar Function	Index Generation	gradedown delstile downgrade spine concordelanding customalphabet
∪Yv	Unique: Distinct items of Yv	Primitive	Monadic Function	Non-scalar Function	Sets	cup downshoe distinct nub
X∊Y	For each item of X, 1 if found in Y, else 0	Primitive	Dyadic Function	Non-scalar Function	Sets	epsilon isin membership containedin has
X⍷Y	Occurrences of entire array X within Y	Primitive	Dyadic Function	Non-scalar Function	Sets	findin epsilonunderbar search locate
X≡Y	Match: 1 if X is identical to Y, else 0	Primitive	Dyadic Function	Non-scalar Function	Sets	match equalunderbar identical
X≢Y	Not Match: ~X≡Y	Primitive	Dyadic Function	Non-scalar Function	Sets	notmatch natch equalunderbarslash unequalunderbar notidentical differentfrom
Xv~Y	Without: (~Xv∊Y)/Xv	Primitive	Dyadic Function	Non-scalar Function	Sets	tilde butnot without except setdifference setsubtraction setminus ∖
Xv∪Yv	Union: Xv,Yv~Xv	Primitive	Dyadic Function	Non-scalar Function	Sets	cup union downshoe setor
Xv∩Yv	Intersection: (Xv∊Yv)/Xv	Primitive	Dyadic Function	Non-scalar Function	Sets	cap intersection upshoe setand
⊃Y	First item of Y	Primitive	Monadic Function	Non-scalar Function	Selection	disclose rightshoe first unbox open contentof
Iv⊃Y	Reach into Y along path given by Iv	Primitive	Dyadic Function	Non-scalar Function	Selection	pick
Iv⌷Y	Index Y using indices Iv	Primitive	Dyadic Function	Non-scalar Function	Selection	squishquad squad indexinto
Iv↑Y	Take Iv items along axes of Y	Primitive	Dyadic Function	Non-scalar Function	Selection	uparrow take first last beginning end leading trailing head tail
Iv↓Y	Drop Iv items along axes of Y	Primitive	Dyadic Function	Non-scalar Function	Selection	downarrow split drop remove trim cut
Iv/Y	Replicate along last axis of Y	Primitive	Dyadic Function	Non-scalar Function	Selection	compress slash solidus filter
Iv⌿Y	Replicate along leading axis of Y	Primitive	Dyadic Function	Non-scalar Function	Selection	compress slashbar solidus filter first
Iv\Y	Expand last axis of Y	Primitive	Dyadic Function	Non-scalar Function	Selection	reversesolidus slope
Iv⍀Y	Expand leading axis of Y	Primitive	Dyadic Function	Non-scalar Function	Selection	reversesolidusbar slopebar
Av⊂Y	Partitioned enclose of Y according to Av	Primitive	Dyadic Function	Non-scalar Function	Selection	segment chop split cut separate
Mv⊆Y	Partition Y according to Mv	Primitive	Dyadic Function	Non-scalar Function	Selection	segment chop split cut separate
⍎Dv	Execute: Result of expression Dv	Primitive	Monadic Function	Non-scalar Function	Data Conversion	evaluate uptackjot hydrant apl compute numbers atoi run call parseexpression
⍕Y	Format: Character representation of Y	Primitive	Monadic Function	Non-scalar Function	Data Conversion	downtackjot thorn itoa tostringify totext representation ⎕fmt ⎕df
NS⍎Dv	Execute Dv within namespace NS	Primitive	Dyadic Function	Non-scalar Function	Data Conversion	evaluate uptackjot hydrant apl compute numbers atoi run call inside
Iv⍕Y	Format Y using (width, decimals) pairs Iv	Primitive	Dyadic Function	Non-scalar Function	Data Conversion	downtackjot thorn itoa tostringify totext representation round width ⎕fmt
⌷Y	Materialise items of Y in workspace	Primitive	Monadic Function	Non-scalar Function	Identity	squishquad squad materialise materialize defaultproperty elements items
⊣Y	Same: Y	Primitive	Monadic Function	Non-scalar Function	Identity	lev lefttack identity defer ignore where
⊢Y	Same: Y	Primitive	Monadic Function	Non-scalar Function	Identity	dex righttack sameright identity default
X⊣Y	Left: X	Primitive	Dyadic Function	Non-scalar Function	Identity	lev lefttack sameleft identity
X⊢Y	Right: Y	Primitive	Dyadic Function	Non-scalar Function	Identity	dex righttack sameright identity
f/Y	Reduce: f between all items of Y on last axis	Primitive	Monadic Function	Monadic Operator	Function Application	slash reduce fold insert solidus filter over rowwise
f⌿Y	Reduce First: f between all items of Y on first axis	Primitive	Monadic Function	Monadic Operator	Function Application	slashbar reducefirst foldfirst insertfirst reversesolidus columnwise
Is f/Y	Reduce: f between all items of Y in groups of Is on last axis	Primitive	Dyadic Function	Monadic Operator	Function Application	slash reduce fold insert select solidus filter over rowwise
Is f⌿Y	Reduce First: f between all items of Y in groups of Is on first axis	Primitive	Dyadic Function	Monadic Operator	Function Application	slashbar reducefirst foldfirst insertfirst reversesolidus columnwise
f\Y	Scan: f between items of Y in progressively longer vectors along last axis	Primitive	Monadic Function	Monadic Operator	Function Application	backslash slope scan cumulativereduce rowwise
f⍀Y	Scan First: f between items of Y in progressively longer vectors along first axis	Primitive	Monadic Function	Monadic Operator	Function Application	slopebar backslashbar reversesolidusbar scanfirst cumulativereducefirst filterfirst columnwise
f¨Y	Each: f on items of Y	Primitive	Monadic Function	Monadic Operator	Function Application	foreach diaeresis map
X f¨Y	Each: f between items of X and Y	Primitive	Dyadic Function	Monadic Operator	Function Application	foreach diaeresis map
X f⌸Y	Key: f on items of Y grouped by unique X values	Primitive	Dyadic Function	Monadic Operator	Sets	equalquad quadequal group classify bin
f⌸Y	Key: f on first axis indices of Y grouped by unique Y values	Primitive	Monadic Function	Monadic Operator	Sets	equalquad quadequal unique classify bin
f⍨Y	Selfie: same as Y f Y	Primitive	Monadic Function	Monadic Operator	Function Application	commute tildediaeresis frown duplicate
X f&Y	Spawn: f between X and Y in a new thread	Primitive	Monadic Function	Monadic Operator	System	ampersand spawn et and greenthread launch run
Ns⌶Y	I-beam: Call experimental system-related monadic function Ns	Primitive	Monadic Function	Monadic Operator	System	ibeam systemservice special foreign
X f⍨Y	Commute: same as Y f X	Primitive	Dyadic Function	Monadic Operator	Function Application	commute switch tildediaeresis swap frown
f&Y	Spawn: f on in a new thread	Primitive	Dyadic Function	Monadic Operator	System	ampersand spawn et and greenthread launch run
X(Ns⌶)Y	I-beam: Call experimental system-related dyadic function Ns	Primitive	Dyadic Function	Monadic Operator	System	ibeam systemservice special foreign
(f⍤r)Y	Rank: f on or between trailing rank-r subarrays	Primitive	Monadic Function	Dyadic Operator	Function Application	jotdiaeresis rank paw
(f⌺Jm)Y	Stencil: f on (possibly overlapping) rectangles of Y	Primitive	Monadic Function	Dyadic Operator	Function Application	diamondquad quaddiamond stencil tessellate tile cellularautomaton gameoflife
f⍣g Y	Power: iterates f on Y until condition Y g f Y is true	Primitive	Monadic Function	Dyadic Operator	Iteration	poweroperator stardiaeresis powerlimit fixedpoint fixpoint converge while until repeat
(f⍣Js)Y	Power: f (or X∘f) on Y Js times	Primitive	Monadic Function	Dyadic Operator	Iteration	poweroperator stardiaeresis while until inverse repeat
X f.g Y	Inner Product: f / g between trailing vectors of X and leading vectors of Y	Primitive	Monadic Function	Dyadic Operator	Mathematical	dotproduct innerproduct crossproduct vectorproduct matrixproduct period fullstop
X∘.g Y	Outer Product: g between each item of X and every item of Y	Primitive	Monadic Function	Dyadic Operator	Mathematical	jotdot outerproduct table cartesianproduct allcombinationsof
f∘g Y	Atop: f on the result of g on Y, that is, f g Y	Primitive	Monadic Function	Dyadic Operator	Composition	jot composewith bind ring functioncomposition
X f∘g Y	With: X∘f on the result of g on Y, that is, X f g Y	Primitive	Monadic Function	Dyadic Operator	Composition	jot composewith bind ring functioncomposition
X∘g Y	Curry: g between X and Y, that is, XgY	Primitive	Monadic Function	Dyadic Operator	Composition	jot composewith bind curry ring
(f∘Y2)Y1	Curry: f between Y1 and Y2, that is, Y1fY2	Primitive	Monadic Function	Dyadic Operator	Composition	jot composewith bind curry ring
(f⍠Zv)Y	Variant: f qualified by Zv on Y	Primitive	Monadic Function	Dyadic Operator	System	colonquad quadcolon option setting mode
(X@N)Y	At: use values in X to replace positions N in Y	Primitive	Monadic Function	Dyadic Operator	Function Application	at substitute merge amend replace update
(f@N)Y	At: apply f to modify positions N in Y	Primitive	Monadic Function	Dyadic Operator	Function Application	at amend update
(X@g)Y	At use values in X to replace positions identified by Boolean mask (g Y) in Y	Primitive	Monadic Function	Dyadic Operator	Function Application	at substitute merge amend replace update
(f@g)Y	At: apply f (or X∘f) to modify positions identified by Boolean mask (g Y) in Y	Primitive	Monadic Function	Dyadic Operator	Function Application	at amend update
X(f⍤r)Y	Rank: f on or between trailing rank-r subarrays	Primitive	Dyadic Function	Dyadic Operator	Function Application	jotdiaeresis rank paw
X(f⍣g)Y	Power: iterates X∘f on Y until condition Y g X f Y is true	Primitive	Dyadic Function	Dyadic Operator	Iteration	poweroperator stardiaeresis powerlimit fixedpoint fixpoint converge while until repeat
X(f⍣Js)Y	Power: X∘f on Y Js times	Primitive	Dyadic Function	Dyadic Operator	Iteration	poweroperator stardiaeresis while until inverse repeat
X(f⍠Zv)Y	Variant: f qualified by Zv between X and Y	Primitive	Dyadic Function	Dyadic Operator	System	colonquad quadcolon option setting mode
X(f@N)Y	At: apply X∘f to modify positions N in Y	Primitive	Dyadic Function	Dyadic Operator	Function Application	at substitute merge amend replace update
X(f@g)Y	At: apply X∘f to modify positions identified by Boolean mask (g Y) in Y	Primitive	Dyadic Function	Dyadic Operator	Function Application	at substitute merge amend replace update
ns.name	Namespace Member	Syntax			Expression	namespaceseparator dotinto point period
int.frac	Decimal Point	Syntax	Array		Expression	decimal point period rational
mantEexp	Scaled Notation	Syntax	Array		Expression	exponent timestento scale mantissa
realJimag	Complex Notation	Syntax	Array		Expression	complex plusitimes imaginary
]name	User Command	Non-syntax				rightsquarebracket rightbracket usercommand ucmd
)name	System Command	Non-syntax				rightroundparentheses rightparenthesis systemcommand syscmd
X[I;J;…]	Indexing	Syntax	Dyadic Function	Non-scalar Function	Selection	squarebrackets indexing subscript choose
f[ax]Y	f on Y along axis/axes ax	Syntax	Monadic Function	Monadic Operator	Function Application	squarebrackets axisoperator along
X f[ax]Y	f between X and Y along axis ax	Syntax	Dyadic Function	Monadic Operator	Function Application	squarebrackets axisoperator along
(X1 X2)(Y1 Y2)	Stranding: (⊂(⊂X1),(⊂X2)),(⊂(⊂Y1),(⊂Y2))	Syntax			Expression	roundparentheses roundparens grouping stranding nestedarraynotation nestedvectornotation
(X1+X2)×Y	Precedece: Y×X1+X2	Syntax			Expression	roundparentheses grouping precedence roundparens
(f g)Y	Atop: f g Y	Syntax	Monadic Function	Train	Expression	tacit roundparentheses roundparens grouping derived train fg atop 2train 2-train
(f g h)Y	Fork: (f Y)g(h Y)	Syntax	Monadic Function	Trian	Expression	tacit roundparentheses roundparens grouping derived train fgh fork 3train 3-train
(X g h)Y	Fork: X g h Y	Syntax	Monadic Function	Trian	Expression	tacit roundparentheses roundparens grouping derived train Agh fork 3train 3-train
X(f g)Y	Atop: X f g Y	Syntax	Dyadic Function	Train	Expression	tacit roundparentheses roundparens grouping derived train fg atop 2train 2-train
X(f g h)Y	Fork: (X f Y)g(X h Y)	Syntax	Dyadic Function	Train	Expression	tacit roundparentheses roundparens grouping derived train fgh fork 3train 3-train
X1(X2 g h)Y	Fork: X2 g X1 h Y	Syntax	Dyadic Function	Train	Expression	tacit roundparentheses roundparens grouping derived train Agh fork 3train 3-train
f←{⍵}	Dfn	Syntax	Monadic Function	Non-scalar Function	Definition	direct dynamic lambda anonymous curlybraces function dfn assignment
op←{⍺⍺ ⍵}	Dop	Syntax	Monadic Function	Monadic Operator	Definition	direct dynamic lambda anonymous curlybraces operator dop assignment
op←{⍺⍺ ⍺}	Dop	Syntax	Dyadic Function	Monadic Operator	Definition	direct dynamic lambda anonymous curlybraces operator dop assignment
f←{⍺}	Dfn	Syntax	Dyadic Function	Non-scalar Function	Definition	direct dynamic lambda anonymous curlybraces function dfn assignment
op←{⍵⍵ ⍵}	Dop	Syntax	Monadic Function	Dyadic Operator	Definition	direct dynamic lambda anonymous curlybraces operator dop assignment
op←{⍵⍵ ⍺}	Dop	Syntax	Dyadic Function	Dyadic Operator	Definition	direct dynamic lambda anonymous curlybraces operator dop assignment
{R}←f Y	Shy Tradfn/Tradop Result	Syntax			Definition	curlybraces function operator shy hideresult traditional
{X}f Y	Optional Left Tradfn/Tradop Argument	Syntax			Definition	curlybraces function operator optional default ambivalent variadic traditional
f;Y	Tradfn/Tradop Name Localisation	Syntax			Definition	indexing axes indices localisation localization shadow variable names scope
←⍞	Character Input from Stdin	Syntax	Array		Expression	quotequad quadquote input characterinput rawinput stdin
←⎕	Evaluated Input from Stdin	Syntax	Array		Expression	quad evaluatedinput
⍞←	Output to Stderr (without trailing line break)	Syntax	Assignment		Expression	quotequad quadquote output stderr
⎕←	Output to Stdout (with trailing line break)	Syntax	Assignment		Expression	quad evaluatedinput stdout
'	Character	Syntax	Array		Expression	quote apostrophe string text character
¯	Negative	Syntax	Array		Expression	macron negative highminus minus
⋄	Statement Separator	Syntax			Expression	diamond statementseparator break stop else then
⍝	Comment	Syntax			Expression	comment lamp ignore skip note nb
→	Abort (cut stack back one frame)	Primitive	Monadic Function		Expression	rightarrow branch abort stop switch
→J	Branch to line or label J	Primitive	Niladic Function		Expression	rightarrow branch goto switch
⍵	Dfn/Dop Right Argument	Primitive	Array		Expression	omega rightarg
⍺	Dfn/Dop Left Argument	Primitive	Array		Expression	alpha leftarg
∇	Dfn Self	Primitive	Monadic Function;Dyadic Function		Expression	del recurse function triangledown downtriangle carrot
⍵⍵	Dop Right Operand	Primitive	Array;Monadic Function;Dyadic Function		Expression	omega rightop
⍺⍺	Dop Left Operand	Primitive	Array;Monadic Function;Dyadic Function		Expression	alpha leftop
∇∇	Dop Self	Primitive	Monadic Function;Dyadic Function	Monadic Operator;Dyadic Operator	Expression	deldel recurse operator triangledown downtriangle carrot
name f←Y	Modified Assignment	Primitive	Dyadic Function	Monadic Operator	Expression	leftarrow assignment gets is copula let redefine name naming denotes means inplace update
name←Y	Assignment	Primitive	Dyadic Function		Expression	leftarrow assignment gets is copula let redefine name naming denotes means inplace update
⍬	Empty Numeric Vector	Primitive	Array		Expression	zilde emptylist emptynumericlist zerotilde emptyvector null emptyset none ∅
bx:Y	Dfn/Dop Guard (conditional result)	Syntax			Expression	guard if conditional ternary
errno::Y	Dfn/Dop Error Guard (result upon listed error)	Syntax			Expression	errorguard trap catch try
(+⌿÷≢)N	Mean of N	Tacit	Monadic Function		Mathematical	average arithmeticmean
Xs(≠⊆⊢)Y	Cut Y at occurences of Xs (removes separators and empty segments)	Tacit	Dyadic Function		Structural	cut split partition segment separate
X(1↓¨,⊂⍨⊣=,)Y	Split Y at occurences of Xs (removes separators)	Tacit	Dyadic Function		Structural	cut split partition segment separate
X(∨/⍷)Y	Is X a Subarray of Y	Tacit	Dyadic Function		Structural	contains has isin issubarray appearsin
Is(↑{⍺⍵}↓)Y	Y's Head of Length Is and its Tail	Tacit	Dyadic Function		Structural	headtail split divide separate
1∘+N	Increment	Tacit	Monadic Function		Mathematical	increase next
(-∘1)N	Decrement	Tacit	Monadic Function		Mathematical	decrease previous
(⌊0.5∘+)N	Round	Tacit	Monadic Function		Mathematical	round closestinteger nearestinteger nint
×⍨N	Square	Tacit	Monadic Function		Mathematical	square ²
(*∘3)N	Cube	Tacit	Monadic Function		Mathematical	cube ³
(*∘0.5)N	Square Root	Tacit	Monadic Function		Mathematical	squareroot sqrt √
M*∘÷⍨N	M'th Root of N	Tacit	Dyadic Function		Mathematical	nthroot √
+⍨N	2×N	Tacit	Monadic Function		Mathematical	double
2∘|J	Parity of J (is J odd?)	Tacit	Monadic Function		Mathematical	parity odd
(~2∘|)J	J is Even	Tacit	Monadic Function		Mathematical	even
+⌿N	Sum of N	Tacit	Monadic Function		Mathematical	summation enlargedsigma bigsigma capitalsigma ∑Σ
×⌿N	Product of N	Tacit	Monadic Function		Mathematical	product enlargedpi bigpi capitalpi ∏Π
∘.×⍨∘⍳Js	Multiplication Table for Numbers up to Js	Tacit	Monadic Function		Mathematical	multiplicationtable cartesianproduct timestable
~0∘∊	All	Tacit	Monadic Function		Boolean/Logical	forall true givenany tautology universalquantification ∀
1∘∊B	Any	Tacit	Monadic Function		Boolean/Logical	thereexists forsome existentialquantification ∃
0∘∊B	Not All	Tacit	Monadic Function		Boolean/Logical	notall somenot
(~1∘∊)B	Not Any	Tacit	Monadic Function		Boolean/Logical	none notany
(⍳≢)Y	Indices of Major Cells of Y	Tacit	Monadic Function		Index Generation	enumerate number count
(,∘⍳⍴)Y	All Indices Of Y	Tacit	Monadic Function		Index Generation	indicesof
?⍨Js	Random Permutation of length Js	Tacit	Monadic Function		Index Generation	shuffle randompermutation
N+.×M	Dot/Vector/Cross Product of M and N	Tacit	Dyadic Function		Mathematical	dotproduct vectorproduct crossproduct matrixmultiply ∙⋅·
(1≥∘|≡)Y	Is Y a Simple Array?	Tacit	Monadic Function		Structural	simple
(2≤∘|≡)Y	Is Y a Nested Array?	Tacit	Monadic Function		Structural	nested
(0>≡)Y	Y has Non-Uniform Depth	Tacit	Monadic Function		Structural	ragged nonorthogonal nonrectangular
(0≤≡)Y	Y has Uniform Depth	Tacit	Monadic Function		Structural	uniform orthogonal rectangular
(⍬≡⍴)Y	Y is a Scalar	Tacit	Monadic Function		Structural	scalar
(1=×/∘⍴)Y	Y is a Singleton	Tacit	Monadic Function		Structural	singleton unit sole one
(⊃0⍴⊂)Y	Type (converts charcters to spaces, numbers to zeros)	Tacit	Monadic Function		Array Properties	datatypeof
-⌿N	Alternating Sum: ((N[1]-N[2])+N[3])-N[4]+…	Tacit	Monadic Function		Mathematical	alternatingsum
(¯2-/⊢)N	Deltas: (N[2]-N[1])(N[3]-N[2])(N[4]-N[3])…	Tacit	Monadic Function		Mathematical	differences deltas changes steps
Ms(+,-)Ns	Ms±Ns	Tacit	Dyadic Function		Mathematical	plusminus
Ms(-,+)Ns	Ms∓Ns	Tacit	Dyadic Function		Mathematical	minusplus
(∘.×∘1 ¯1)N	±N	Tacit	Monadic Function		Mathematical	plusminus
(∘.×∘¯1 1)N	∓N	Tacit	Monadic Function		Mathematical	minusplus
(⍋⍋)Y	Cardinals Up	Tacit	Monadic Function		Index Generation	ascendingcardinalnumbers
(⍋⍒)Y	Cardinals Down	Tacit	Monadic Function		Index Generation	descendingcardinalnumbers
((⊢~∘.×⍨)1↓⍳)Js	Primes until Js	Tacit	Monadic Function		Mathematical	primesuntil
(2=0+.=⍳|⊢)Ns	Ns is a Prime	Tacit	Monadic Function		Mathematical	isprime primality
I(0=|)J	I Divides J	Tacit	Dyadic Function		Mathematical	divisibility divisor ∣
I(0≠|)J	I does Not Divide J	Tacit	Dyadic Function		Mathematical	divisibility divisor ∤
Xv(∧/∊)Yv	Is Xv a Subset of Yv	Tacit	Dyadic Function		Sets	subset containedin ⊆
Xv(∧/∊⍨)Yv	Is Xv a Superset of Yv	Tacit	Dyadic Function		Sets	superset contains ⊇
(○÷180)∘×N	N Degrees in Radians	Tacit	Monadic Function		Mathematical	radians
(180÷○1)∘×N	N Radians in Degrees	Tacit	Monadic Function		Mathematical	degrees
(10∘⊥⍣¯1)N	Digits of N	Tacit	Monadic Function		Mathematical	digits base10 decimal
M(⊥⍣¯1)N	N in Base M	Tacit	Dyadic Function		Mathematical	tobase
1∘|N	Fractional Part of N	Tacit	Monadic Function		Mathematical	fractional
(!-∘1)N	Gamma function of N	Tacit	Monadic Function		Mathematical	gamma
Xv(∪~∩)Yv	Symmetric Set Difference	Tacit	Dyadic Function		Sets	⊖
Xv(∊∧.∧∊⍨)Yv	Set Identity	Tacit	Monadic Function		Sets	setequivalence
(⊃⍒)Y	Index of Largest	Tacit	Monadic Function		Comparison	indexoflargest
(⊃⍋)Y	Index of Smallest	Tacit	Monadic Function		Comparison	indexofsmallest
(⊢⍉⍨⍴=⍴)Y	Diagonal	Tacit	Monadic Function		Structural	majordiagonal
(⌽⍉⍨⍴=⍴)Y	Anti-diagonal	Tacit	Monadic Function		Structural	minordiagonal
(0∊⍴)Y	Is Y an Empty Array	Tacit	Monadic Function		Structural	isempty isvoid isnull
(⊂∘⍋⌷⊢)Y	Sort Ascending	Tacit	Monadic Function		Mathematical	sort order up increasing
(⊂∘⍒⌷⊢)Y	Sort Descending	Tacit	Monadic Function		Mathematical	sort order down decreasing
(1∧.=2</⊢)Nv	Nv is Strictly Increasing	Tacit	Monadic Function		Mathematical	ascending rising up order
(1∧.=2>/⊢)Nv	Nv is Strictly Decreasing	Tacit	Monadic Function		Mathematical	ascending rising up order
(1∧.=2≤/⊢)Nv	Nv is Non-decreasing	Tacit	Monadic Function		Mathematical	descending falling down order
(1∧.=2>/⊢)Nv	Nv is Non-increasing	Tacit	Monadic Function		Mathematical	descending falling down order
⌈/N	Maximum of N	Tacit	Monadic Function		Mathematical	supremum
⌊/N	Minimum of N	Tacit	Monadic Function		Mathematical	infirmum
(¯1○÷)N	Arccosecant	Tacit	Monadic Function		Mathematical	arccosecant acsc acosec arcuscosecant
(¯2○÷)N	Arcsecant	Tacit	Monadic Function		Mathematical	arcsecant asec arcussecant
(¯3○÷)N	Arccotangent	Tacit	Monadic Function		Mathematical	arccotangent acotg actg actn arcuscotangent
(÷1∘○)N	Cosecant	Tacit	Monadic Function		Mathematical	cosecant csc
(÷2∘○)N	Secant	Tacit	Monadic Function		Mathematical	secant
(÷3∘○)N	Cotangent	Tacit	Monadic Function		Mathematical	cotangent cotg ctg ctn
(¯2○1○⊢)N	Complementry Angle	Tacit	Monadic Function		Mathematical	complement
X⌷⍨∘⊂J	Items of X at positions J	Tacit	Dyadic Function		Selection	index
X⌷⍨∘⊂J	Items of X at positions J	Tacit	Dyadic Function		Selection	index
⎕CT←(0≤1E¯14≤2*¯32)	Max ratio between numbers considered equal when ⎕FR←645	System	Variable		Mathematical	comparison tolerance fuzz IEEE754 64-bit binaryfloatingpoint representation
⎕DCT←(0≤1E¯28≤2*¯32)	Max ratio between numbers considered equal when ⎕FR←1287	System	Variable		Mathematical	comparison tolerance fuzz IEEE754-2008 128-bit decimalfloatingpoint representation
⎕DIV←(0,1)	0: 1=0÷0, all other÷0 error; 1: 0=all÷0	System	Variable		Mathematical	divisionbyzero divisionmethod divmethod error nan indeterminate
⎕FR←(645,1287)	Specifies the result type of floating-point computations	System	Variable		Mathematical	IEEE754 64-bit binaryfloatingpoint IEEE754-2008 128-bit decimalfloatingpoint internal representation
⎕IO←(1,0)	Specifies whether array indices are counted from 0 or 1	System	Variable		Index Generation	indexing counting numbering natrualnumbers origin one zero based ordinals
⎕ML←(0≤1≤3)	Degree of compatibility with IBM APL2 (from 0=low to 3=high)	System	Variable		System	migration level conformance APLX APL*PLUS GNUAPL APL+Win APL2000 NARS2000 ≡↑⊃ depth first mix ⎕TC terminalcontrolcharacters
⎕PP←(1≤10≤34)	Number of significant digits in the display of numeric output	System	Variable		Data Conversion	print precision decimals rounding display
⎕RL←⍬ 1	Seed and Random Number Generator used by Roll/Deal	System	Variable		Index Generation	RNG rnd roll randominteger randomfloat randomness source
:For	:For var :In│:InEach ax ⋄ block ⋄ :EndFor	Syntax	Control	Structure	Expression	loop count iteration ¨
:Hold	:Hold tkn ⋄ block ⋄ :Else ⋄ block ⋄ :EndHold	Syntax	Control	Structure	Expression	synchronisation synchronization parallel threading tokens
:If	:If bx ⋄ block ⋄ :ElseIf bx│:Else ⋄ block ⋄ :EndIf	Syntax	Control	Structure	Expression	conditional ternary branch ⍣ :
:Repeat	:Repeat ⋄ block ⋄ :Until bx ⋄ :AndIf bx│:OrIf bx	Syntax	Control	Structure	Expression	loop iteration ⍣
:Repeat	:Repeat ⋄ block ⋄ :EndRepeat	Syntax	Control	Structure	Expression	loop iteration ⍣
:Select	:Select ax ⋄ :Case val│:CaseList val ⋄ block ⋄ :Else ⋄ block ⋄ :EndSelect	Syntax	Control	Structure	Expression	switch inspect multiwaybranch
:Trap	:Trap ecode ⋄ block ⋄ :Case ecode│:CaseList ecode ⋄ block ⋄ :Else ⋄ block ⋄ :EndTrap	Syntax	Control	Structure	Expression	try catch errorhandling trapping exception
:While	:While bx ⋄ block ⋄ :AndIf bx│:OrIf bx ⋄ block ⋄ :EndWhile	Syntax	Control	Structure	Expression	loop do iteration ⍣
:While	:While bx ⋄ block ⋄ :AndIf bx│:OrIf bx ⋄ block ⋄ :Until bx	Syntax	Control	Structure	Expression	loop do iteration ⍣
:With	:With ns ⋄ block ⋄ :EndWith	Syntax	Control	Structure	Expression	scope namespace object
:GoTo J	Branch to line or label J	Syntax	Control	Keyword	Expression	branch switch →
:Return	Abort (cut stack back one frame)	Syntax	Control	Keyword	Expression	abort →0 stop
:Leave	Terminate execution :For/:Repeat/:While block	Syntax	Control	Keyword	Expression	break earlyexit
:Continue	Start iteration of the immediately surrounding :For/:Repeat/:While loop	Syntax	Control	Keyword	Expression	continuation
)CLEAR	Clear active workspace	Non-syntax			System Command	new refresh empty erase delete remove purge expunge reset all ⎕clear
)CMD cmd	Execute cmd (cmd is mandatory on Windows, optional on UNIX)	Non-syntax			System Command	shell os operatingsystem commandprocessor
)CONTINUE	Save active workspace as CONTINUE and terminate session	Non-syntax			System Command	exit stop close ⎕off )off
)COPY ws {nms}	Copy (selected) contents of workspace ws to active workspace	Non-syntax		File Access	System Command	import use load transfer include item object otherworkspace )pcopy
)CS {space}	Change current namespace	Non-syntax			System Command	into out of # ⎕se
)DROP {ws}	Erase file containing workspace ws	Non-syntax			System Command	delete remove expunge
)ED {etype} nms	Open Editor for named objects of type etype	Non-syntax			System Command	open modify code source definition define value ⎕ed
)ERASE nms	Delete named objects from the active workspace	Non-syntax			System Command	remove ⎕ex expunge item object
)HOLDS	List tokens currently held (acquired by :Hold)	Non-syntax			System Command	synchronisation synchronization parallel threading tokens
)LIB {folder}	List workspaces either on WSPATH or in folder	Non-syntax			System Command	dir ls
)LOAD {ws}	Replace active workspace with workspace ws	Non-syntax		File Access	System Command	open fetch get bringin
)NS {name}	Create new global namespace called name	Non-syntax			System Command	⎕NS
)OFF	Terminate the session	Non-syntax			System Command	exit stop close ⎕off )continue
)PCOPY ws {nms}	As )COPY but does not overwrite existing objects	Non-syntax		File Access	System Command	import load include item object otherworkspace )copy
)RESET {n}	Reset state indicator and empty event queue/clear top n suspensions	Non-syntax			System Command	)sic clear cutback stack
)SAVE {ws}	Save active workspace, optionally with new name ws	Non-syntax			System Command	archive store ⎕save
)SH cmd	Execute cmd (cmd is mandatory on Windows, optional on UNIX)	Non-syntax			System Command	shell os operatingsystem commandprocessor
)SI {n} {-tid=tdno}	Display (first n /last if n<0 lines of) state indicator (for thread tdno)	Non-syntax			System Command	display stack
)SIC	Reset state indicator and empty event queue/clear top n suspensions	Non-syntax			System Command	)reset clear cutback stack
)SINL{n} {-tid=tdno}	Display (first n /last if n<0 lines of) state indicator (for thread tdno) with local names	Non-syntax			System Command	display stack list locals
)TID {tdno}	Switch to thread tdno or report current thread number	Non-syntax			System Command	synchronisation synchronization parallel threading
)WSID {ws}	Set or report the name of the active workspace	Non-syntax			System Command	identification filepath filename
)XLOAD {ws}	Load workspace ws without executing ⎕LX	Non-syntax		File Access	System Command	open fetch get quiet latentexpression autoexec boot
)CLASSES {nm}	List classes in current namespace, optionally beginning with {nm}	Non-syntax			System Command	information listing report ¯9.4
)EVENTS {nm}	List events in current namespace, optionally beginning with {nm}	Non-syntax			System Command	information listing report ¯8.6
)FNS {nm}	List functions in current namespace, optionally beginning with {nm}	Non-syntax			System Command	information listing report ¯3.1 ¯3.2 ¯3.3 ¯3.6
)INTERFACES {nm}	List interfaces in current namespace, optionally beginning with {nm}	Non-syntax			System Command	information listing report ¯9.5 ¯9.7
)METHODS {nm}	List methods in current namespace, optionally beginning with {nm}	Non-syntax			System Command	information listing report ¯3.6
)OBJECTS {nm}	List objects in current namespace, optionally beginning with {nm}	Non-syntax			System Command	information listing report ¯9.1 ¯2.2 ¯9.4 ¯9.5 ¯9.6 ¯9.7
)OBS {nm}	List objects in current namespace, optionally beginning with {nm}	Non-syntax			System Command	information listing report ¯9.1 ¯2.2 ¯9.4 ¯9.5 ¯9.6 ¯9.7
)OPS {nm}	List operatoris in current namespace, optionally beginning with {nm}	Non-syntax			System Command	information listing report ¯4.1 ¯4.2 ¯4.3
)PROPS {nm}	List properties in current namespace, optionally beginning with {nm}	Non-syntax			System Command	information listing report ¯2.3
)VARS {nm}	List variables in current namespace, optionally beginning with {nm}	Non-syntax			System Command	information listing report ¯2.1 ¯2.2 ¯2.3 ¯2.6
⎕A	The letters from A to Z	System	Constant		System Function	abcdefghijklmnopqrstuvwxyz latinalphabet englishletters uppercase a-z
⎕D	The digits from 0 to 9	System	Constant		System Function	123456789 numbers arabicnumerals 0-9
⎕NULL	A reference to the null item	System	Constant		System Function	void emptycell .net nil
0::any error	Covers all errors (errors 1–999)				Error Message	try catch errorhandling trapping exception
1::WS FULL	There is insufficient workspace in which to perform an operation				Error Message	size memory resources maxws ⎕wa
2::SYNTAX ERROR	A line of characters does not constitute a meaningful statement				Error Message	parser parsing
3::INDEX ERROR	Index or axis is not in ⍳⍴Y or not in ⍳≢⍴Y				Error Message	bounds limits overflow beyond dimensions length
4::RANK ERROR	Array rank invalid for function/operator, or ranks of arguments do not conform				Error Message	dimensions conformability
5::LENGTH ERROR	The shape of the arguments of a function do not conform, but the ranks do conform				Error Message	conformability
6::VALUE ERROR	Undefined name in this scope, or function does not return result while required				Error Message	
7::FORMAT ERROR	Ill-formed specification in the left argument of ⎕FMT				Error Message	
10::LIMIT ERROR	A system limit is exceeded				Error Message	
11::DOMAIN ERROR	Type or value not permitted for the function/operator/system variable or unrepresentable numeric value				Error Message	
12::HOLD ERROR	Attempting ⎕SAVE while external arrays or component files are held by ⎕FHOLD				Error Message	
16::NONCE ERROR	System function or syntax or appropriate value is not currently implemented but is reserved for future use				Error Message	
18::FILE TIE ERROR	File tie number used as tied when not or available when tied, or missing external variable				Error Message	
19::FILE ACCESS ERROR	User is not authorised, or has supplied the wrong passnumber, or ⎕FERASE/⎕FRENAME on non-exclusive tie				Error Message	
20::FILE INDEX ERROR	An attempt is made to reference a non-existent component				Error Message	
21::FILE FULL	Operation would cause the file to exceed its file size limit				Error Message	
22::FILE NAME ERROR	File not found, file exists, incompatible file, or ⎕FERASE/⎕NERASE filename mismatch				Error Message	
23::FILE DAMAGED	Component file damaged — check with ⎕FCHK				Error Message	
24::FILE TIED	Attempt to tie file that is exclusively tied, or to exclusively tie file that is tied				Error Message	
25::FILE TIED REMOTELY	Attempt to tie file that another processor has exclusively tied, or to exclusively tie file that another processor has exclusively tied				Error Message	
26::FILE SYSTEM ERROR	Input/output error during file read/write — use ⎕FCHK when file becomes available				Error Message	
28::FILE SYSTEM NOT AVAILABLE	Lock attempt failed — may be due to opportunistic locks being enabled on Windows				Error Message	oplock
30::FILE SYSTEM TIES USED UP	User already has the maximum number of files tied				Error Message	⎕ftie fstie ⎕fcreate
31::FILE TIE QUOTA USED UP	Maximum number of file ties for this APL instance has been reached				Error Message	
32::FILE NAME QUOTA USED UP	User already has the maximum number of files named				Error Message	⎕fcreate ⎕ftie ⎕fstie ⎕frename
34::FILE SYSTEM NO SPACE	There is insufficient disk space				Error Message	
35::FILE ACCESS ERROR - CONVERTING FILE	Operating system did not allow APL to upgrade component file structure				Error Message	
38::FILE COMPONENT DAMAGED	Attempt is made to access a component that is not a valid APL object — use ⎕FCHK				Error Message	
52::FIELD CONTENTS RANK ERROR	Field content of rank greater than 2 is assigned to ⎕SM				Error Message	
53::FIELD CONTENTS TOO MANY COLUMNS	Content of a numeric or date field assigned to ⎕SM has more than one column				Error Message	
54::FIELD POSITION ERROR	Location of the field assigned to ⎕SM is outside the screen				Error Message	
55::FIELD SIZE ERROR					Error Message	
56::FIELD CONTENTS/TYPE MISMATCH	Field contents assigned to ⎕SM does not conform with the given field type e.g. character content with numeric type				Error Message	
57::FIELD TYPE/BEHAVIOUR UNRECOGNISED	Field type or behaviour code assigned to ⎕SM is invalid				Error Message	
58::FIELD ATTRIBUTES RANK ERROR	The current video attribute assigned to ⎕SM is non-scalar but its rank does not match that of the field contents				Error Message	
59::FIELD ATTRIBUTES LENGTH ERROR	The current video attribute assigned to ⎕SM is non-scalar but its dimensions do not match those of the field contents				Error Message	
60::FULL-SCREEN ERROR	The required full screen capabilities are not available to ⎕SM				Error Message	
61::KEY CODE UNRECOGNISED	A key code supplied to ⎕SR or ⎕PFKEY is not recognised as a valid code, or attempt at creating a KeyPress event with invalid Input Code				Error Message	
62::KEY CODE RANK ERROR	A key code supplied to ⎕SR or ⎕PFKEY is not a scalar or a vector				Error Message	
63::KEY CODE TYPE ERROR	A key code supplied to ⎕SR or ⎕PFKEY is numeric or nested; i.e. is not a valid key code				Error Message	
70::FORMAT FILE ACCESS ERROR	The date format file to be used by ⎕SM does not exist or cannot be accessed				Error Message	
71::FORMAT FILE ERROR	The date format file to be used by ⎕SM is ill-formed				Error Message	
72::NO PIPES	The limit on the number of pipes communicating between tasks is during startup, ⎕SH, or use of an external variable				Error Message	
76::PROCESSOR TABLE FULL	The limit on the number of processes (tasks) that the computer system can support would be exceeded				Error Message	
84::TRAP ERROR	Searching for a definition set for the system variable ⎕TRAP, after a trappable error has occurred, caused WS FULL				Error Message	
90::EXCEPTION	A Microsoft .NET object threw an exception				Error Message	
92::TRANSLATION ERROR	The system cannot convert a character from Unicode to an Atomic Vector (⎕AV) index or vice versa				Error Message	⎕avu unicode classic codepage characterset charset encoding sbcs
99::INTERNAL ERROR	Severe system error — save your work(space), and report the issue to Dyalog				Error Message	
1000::any exception	Covers all exceptions (errors 1001–1009)			Exception	Error Message	try catch errorhandling trapping exception
1001::STOP VECTOR	Execution stopped due to ⎕STOP or stop bit set from editor			Exception	Error Message	
1002::WEAK INTERRUPT	Execution stopped by weak interrupt			Exception	Error Message	
1003::INTERRUPT	Execution stopped by strong interrupt			Exception	Error Message	
1004::INPUT INTERRUPT	EOF to ⎕ or soft interrupt to ⍞			Exception	Error Message	end-of-file
1005::EOF INTERRUPT	EOF when reading input from a file (when an input to APL is from a file)			Exception	Error Message	end-of-file
1006::TIMEOUT	Time limit specified by ⎕RTL exceeded while awaiting input through ⍞ or ⎕SR			Exception	Error Message	character input stdin prompt
1007::RESIZE	User resizes the ⎕SM window			Exception	Error Message	
1008::DEADLOCK	Two threads acquiring a hold of two different tokens, and then each asks to hold the other token			Exception	Error Message	
]CALC.Factors	Determine the prime factors of the argument	Non-syntax	Ucmd	CALC	User command	User commands that relate to manipulation of data
]CALC.FromHex	Convert a list of hexadecimal representations of integers to a numeric vector	Non-syntax	Ucmd	CALC	User command	User commands that relate to manipulation of data
]CALC.PivotTable	Create a pivot table from an appropriate matrix	Non-syntax	Ucmd	CALC	User command	User commands that relate to manipulation of data
]CALC.ToHex	Convert integer(s) to a vector of text vectors containing the hexadecimal representation of each number	Non-syntax	Ucmd	CALC	User command	User commands that relate to manipulation of data
]DEVOPS.DBuild	Run one or more DyalogBuild script files (.dyalogbuild)	Non-syntax	Ucmd	DEVOPS	User command	User commands that relate to development and operations
]DEVOPS.DTest	Run (a selection of) functions named test_* from a namespace, file or directory	Non-syntax	Ucmd	DEVOPS	User command	User commands that relate to development and operations
]FILE.CD	Report (and, optionally, change) the current directory	Non-syntax	Ucmd	FILE	User command	User commands that relate to files
]FILE.Collect	Merge all the files with the specified path/name{-nnn} into a single file	Non-syntax	Ucmd	FILE	User command	User commands that relate to files
]FILE.Compare	Compare two component files	Non-syntax	Ucmd	FILE	User command	User commands that relate to files
]FILE.Edit	Open the specified native file as an editable text file	Non-syntax	Ucmd	FILE	User command	User commands that relate to files
]FILE.Find	List line numbers and lines that contain the specified string for each file that has a match	Non-syntax	Ucmd	FILE	User command	User commands that relate to files
]FILE.Open	Open a file or directory with the specified application	Non-syntax	Ucmd	FILE	User command	User commands that relate to files
]FILE.Replace	Replace strings in files and return the number of changes made	Non-syntax	Ucmd	FILE	User command	User commands that relate to files
]FILE.Split	Split a single file into (up to 999) smaller files	Non-syntax	Ucmd	FILE	User command	User commands that relate to files
]FILE.ToLarge	Transform component files in the specified directory from small-span to large-span	Non-syntax	Ucmd	FILE	User command	User commands that relate to files
]FILE.ToQuadTS	Convert a component file timestamp (single float number) to ⎕TS format (vector of 7 numbers)	Non-syntax	Ucmd	FILE	User command	User commands that relate to files
]FILE.Touch	Check whether the specified file exists in the current/specified location and create it if it cannot be found	Non-syntax	Ucmd	FILE	User command	User commands that relate to files
]FN.Align	Align end-of-line comments	Non-syntax	Ucmd	FN	User command	User commands that relate to functions and operators
]FN.Calls	Produce the calling tree of a function in a class/namespace/scriptfile	Non-syntax	Ucmd	FN	User command	User commands that relate to functions and operators
]FN.Compare	Compare two functions	Non-syntax	Ucmd	FN	User command	User commands that relate to functions and operators
]FN.Defs	List single-line dfns, dops, derived functions and trains	Non-syntax	Ucmd	FN	User command	User commands that relate to functions and operators
]FN.DInput	Define a multi-line dfn, dop or derived function/operator, or execute a multi-line expression	Non-syntax	Ucmd	FN	User command	User commands that relate to functions and operators
]FN.Latest	List functions modified since a specified date (default is today), most-recently-changed first	Non-syntax	Ucmd	FN	User command	User commands that relate to functions and operators
]FN.ReorderLocals	Sort local names in the header of tradfns and tradops	Non-syntax	Ucmd	FN	User command	User commands that relate to functions and operators
]LINK.Add	Associate item in linked namespace with new file/directory in corresponding directory	Non-syntax	Ucmd	LINK	User command	User commands for namespace-directory synchronisation (see https//github.com/dyalog/link/wiki)
]LINK.Break	Break link between namespace and corresponding directory	Non-syntax	Ucmd	LINK	User command	User commands for namespace-directory synchronisation (see https//github.com/dyalog/link/wiki)
]LINK.CaseCode	Append filename with numeric encoding of capitalisation	Non-syntax	Ucmd	LINK	User command	User commands for namespace-directory synchronisation (see https//github.com/dyalog/link/wiki)
]LINK.Create	Link a namespace with a directory (create one or both if absent)	Non-syntax	Ucmd	LINK	User command	User commands for namespace-directory synchronisation (see https//github.com/dyalog/link/wiki)
]LINK.Export	Export a namespace to a directory (create the directory if absent); does not create a link	Non-syntax	Ucmd	LINK	User command	User commands for namespace-directory synchronisation (see https//github.com/dyalog/link/wiki)
]LINK.Expunge	Erase item and associated file	Non-syntax	Ucmd	LINK	User command	User commands for namespace-directory synchronisation (see https//github.com/dyalog/link/wiki)
]LINK.GetFileName	Return name of file associated with item	Non-syntax	Ucmd	LINK	User command	User commands for namespace-directory synchronisation (see https//github.com/dyalog/link/wiki)
]LINK.GetItemName	Return name of item associated with file	Non-syntax	Ucmd	LINK	User command	User commands for namespace-directory synchronisation (see https//github.com/dyalog/link/wiki)
]LINK.Import	Import a namespace from a directory (create the namespace if absent); does not create a link	Non-syntax	Ucmd	LINK	User command	User commands for namespace-directory synchronisation (see https//github.com/dyalog/link/wiki)
]LINK.List	List active namespace-directory links	Non-syntax	Ucmd	LINK	User command	User commands for namespace-directory synchronisation (see https//github.com/dyalog/link/wiki)
]LINK.Refresh	Fully synchronise namespace-directory content	Non-syntax	Ucmd	LINK	User command	User commands for namespace-directory synchronisation (see https//github.com/dyalog/link/wiki)
]MSWIN.Assemblies	List all .NET assemblies currently loaded into memory	Non-syntax	Ucmd	MSWIN	User command	User commands that relate to the Microsoft Windows operating system
]MSWIN.Caption	Query or change window captions	Non-syntax	Ucmd	MSWIN	User command	User commands that relate to the Microsoft Windows operating system
]MSWIN.CopyReg	Copy registry entries to file and, optionally, between Dyalog versions	Non-syntax	Ucmd	MSWIN	User command	User commands that relate to the Microsoft Windows operating system
]MSWIN.FileAssociations	Change the file associations of Dyalog workspaces, applications and scripts (.dws, .dyapp and .dyalog files)	Non-syntax	Ucmd	MSWIN	User command	User commands that relate to the Microsoft Windows operating system
]MSWIN.GUIProps	List property names and values for given or current object	Non-syntax	Ucmd	MSWIN	User command	User commands that relate to the Microsoft Windows operating system
]MSWIN.KeyPress	Return message arguments of KeyPress events	Non-syntax	Ucmd	MSWIN	User command	User commands that relate to the Microsoft Windows operating system
]NS.ScriptUpdate	Synchronise namespace/class script to match current content	Non-syntax	Ucmd	NS	User command	User commands that relate to namespaces
]NS.Summary	Summarise (scope, size, syntax) the functions in a namespace/class/scriptfile	Non-syntax	Ucmd	NS	User command	User commands that relate to namespaces
]NS.Xref	Describe the inter-object cross-references in a class/namespace/scriptfile	Non-syntax	Ucmd	NS	User command	User commands that relate to namespaces
]OUTPUT.Box	Display output with borders indicating shape, type and structure	Non-syntax	Ucmd	OUTPUT	User command	User commands that affect the way items are displayed
]OUTPUT.Boxing	Display output with borders indicating shape, type and structure	Non-syntax	Ucmd	OUTPUT	User command	User commands that affect the way items are displayed
]OUTPUT.Disp	Display specified array with borders indicating sub-array shape and type	Non-syntax	Ucmd	OUTPUT	User command	User commands that affect the way items are displayed
]OUTPUT.Display	Display specified array with borders indicating array and sub-array shape and type	Non-syntax	Ucmd	OUTPUT	User command	User commands that affect the way items are displayed
]OUTPUT.Find	Precede output with a reference to the line of code that generated it	Non-syntax	Ucmd	OUTPUT	User command	User commands that affect the way items are displayed
]OUTPUT.Format	Format text into vector of text vectors (or matrix if called from Session) to fit ⎕PW using specified margins	Non-syntax	Ucmd	OUTPUT	User command	User commands that affect the way items are displayed
]OUTPUT.HTML	Render HTML or SVG	Non-syntax	Ucmd	OUTPUT	User command	User commands that affect the way items are displayed
]OUTPUT.Layout	Format text into vector of text vectors (or matrix if called from Session) to fit ⎕PW using margins inferred from the text	Non-syntax	Ucmd	OUTPUT	User command	User commands that affect the way items are displayed
]OUTPUT.Plot	Plot data	Non-syntax	Ucmd	OUTPUT	User command	User commands that affect the way items are displayed
]OUTPUT.Rows	Cut, wrap, fold or extend the display of output lines to fit the Session window	Non-syntax	Ucmd	OUTPUT	User command	User commands that affect the way items are displayed
]PERFORMANCE.Profile	Report performance details (optionally through GUI)	Non-syntax	Ucmd	PERFORMANCE	User command	User commands that relate to consumption of computing resources
]PERFORMANCE.RunTime	Report execution time of one or more expressions	Non-syntax	Ucmd	PERFORMANCE	User command	User commands that relate to consumption of computing resources
]PERFORMANCE.SpaceNeeded	Compute memory needed to run expression(s)	Non-syntax	Ucmd	PERFORMANCE	User command	User commands that relate to consumption of computing resources
]SALT.Boot	Boot from a file containing instructions or a function	Non-syntax	Ucmd	SALT	User command	User command covers for SALT functionality
]SALT.Clean	Remove SALT tags from the ws or specific items so that SALT no longer saves changes to associated files	Non-syntax	Ucmd	SALT	User command	User command covers for SALT functionality
]SALT.Compare	Compare two versions of a SALTed item	Non-syntax	Ucmd	SALT	User command	User command covers for SALT functionality
]SALT.List	List files (default: .dyalog only) and directories in the specified directory	Non-syntax	Ucmd	SALT	User command	User command covers for SALT functionality
]SALT.Load	Load item from native text file	Non-syntax	Ucmd	SALT	User command	User command covers for SALT functionality
]SALT.Refresh	Reload all SALTed items from their associated files	Non-syntax	Ucmd	SALT	User command	User command covers for SALT functionality
]SALT.RemoveVersions	Remove one or more versions of a file managed by SALT	Non-syntax	Ucmd	SALT	User command	User command covers for SALT functionality
]SALT.Save	Save item in a native text file (default: same place if already SALTed)	Non-syntax	Ucmd	SALT	User command	User command covers for SALT functionality
]SALT.Set	Return one or all parameters or set one parameter	Non-syntax	Ucmd	SALT	User command	User command covers for SALT functionality
]SALT.Settings	Return one or all parameters or set one parameter	Non-syntax	Ucmd	SALT	User command	User command covers for SALT functionality
]SALT.Snap	Save all new or modified items to native text files (unscripted namespaces become directories)	Non-syntax	Ucmd	SALT	User command	User command covers for SALT functionality
]TOOLS.ADoc	Generate documentation automatically	Non-syntax	Ucmd	TOOLS	User command	Development and presentation user commands
]TOOLS.Calendar	Display calendar	Non-syntax	Ucmd	TOOLS	User command	Development and presentation user commands
]TOOLS.Chart	Chart the specified expression	Non-syntax	Ucmd	TOOLS	User command	Development and presentation user commands
]TOOLS.Demo	Provide playback mechanism for live demonstrations	Non-syntax	Ucmd	TOOLS	User command	Development and presentation user commands
]TOOLS.Help	Browse or get link to information about any APL concept	Non-syntax	Ucmd	TOOLS	User command	Development and presentation user commands
]TOOLS.Version	Report version numbers of APL, OS, SALT, UCMD, .NET and/or workspace	Non-syntax	Ucmd	TOOLS	User command	Development and presentation user commands
]TRANSFER.In	Import a workspace from a workspace transfer file	Non-syntax	Ucmd	TRANSFER	User command	User commands that convert workspaces between APL versions and dialects
]TRANSFER.Out	Export the current workspace to a workspace transfer file	Non-syntax	Ucmd	TRANSFER	User command	User commands that convert workspaces between APL versions and dialects
]UCMD.UDebug	Facilitate debugging of user commands	Non-syntax	Ucmd	UCMD	User command	User commands that manage the user command framework
]UCMD.ULoad	Load a user command's script into the current namespace	Non-syntax	Ucmd	UCMD	User command	User commands that manage the user command framework
]UCMD.UMonitor	Gather user command execution data	Non-syntax	Ucmd	UCMD	User command	User commands that manage the user command framework
]UCMD.UNew	Create one or more new user commands (optionally using a GUI)	Non-syntax	Ucmd	UCMD	User command	User commands that manage the user command framework
]UCMD.UReset	Refresh cache of all user command definitions	Non-syntax	Ucmd	UCMD	User command	User commands that manage the user command framework
]UCMD.USetup	Run Setup from setup.dyalog	Non-syntax	Ucmd	UCMD	User command	User commands that manage the user command framework
]UCMD.UVersion	Report version information of a user command	Non-syntax	Ucmd	UCMD	User command	User commands that manage the user command framework
]WS.Check	Perform workspace integrity check	Non-syntax	Ucmd	WS	User command	User commands that relate to workspaces
]WS.Compare	Compare two workspaces	Non-syntax	Ucmd	WS	User command	User commands that relate to workspaces
]WS.Document	List (part of) the workspace content, displaying each item separately	Non-syntax	Ucmd	WS	User command	User commands that relate to workspaces
]WS.FindRefs	Follow references in the workspace until all references have been found	Non-syntax	Ucmd	WS	User command	User commands that relate to workspaces
]WS.FnsLike	List functions and operators matching a pattern	Non-syntax	Ucmd	WS	User command	User commands that relate to workspaces
]WS.Locate	Locate (and, optionally, replace) strings in the workspace	Non-syntax	Ucmd	WS	User command	User commands that relate to workspaces
]WS.Map	Display namespace treeview	Non-syntax	Ucmd	WS	User command	User commands that relate to workspaces
]WS.NamesLike	List names followed by their class matching the pattern	Non-syntax	Ucmd	WS	User command	User commands that relate to workspaces
]WS.Nms	List names followed by their class matching the pattern	Non-syntax	Ucmd	WS	User command	User commands that relate to workspaces
]WS.ObsLike	List objects matching the pattern	Non-syntax	Ucmd	WS	User command	User commands that relate to workspaces
]WS.Peek	Execute expression in temporary copy of workspace	Non-syntax	Ucmd	WS	User command	User commands that relate to workspaces
]WS.SizeOf	Report size of variables in descending order	Non-syntax	Ucmd	WS	User command	User commands that relate to workspaces
]WS.VarsLike	List variables matching the pattern	Non-syntax	Ucmd	WS	User command	User commands that relate to workspaces
(≢,)Y	Count the number of elements in an array	Tacit	Monadic Function		Array Properties	tallyall ⍴, numberofelements numberofitems howmanyelements howmanyitems whole array scalars countall ×/⍴ ×⌿⍴
(+/,)N	Sum all elements in an array	Tacit	Monadic Function		Arithmetic	sumall +⌿, grandtotal items
(+/,)B	Number of trues	Tacit	Monadic Function		Boolean/Logical	sumall howmanytrue
(≢⍸)B	Number of trues	Tacit	Monadic Function		Boolean/Logical	+/, +⌿, sum all howmanytrue
(≢⍴)Y	Rank (number of dimensions) of Y	Tacit	Monadic Function		Array Properties	howmanyaxes numberofaxes axiscount ⍴⍴
X(⊃⍷)Y	If Y begins with X	Tacit	Dyadic Function		Boolean/Logical	prefixof startswith
captured_output←⎕CMD cmd	Execute Microsoft Windows cmd	System	Function	System	System Function	shell os operatingsystem commandprocessor
r←⎕CSV data	Convert CSV data data to APL array	System	Function	Data Conversion	System Function	tsv table import parse commaseparatedvalues tabseparatedvalues characterseparatedvalues
r←data {header} ⎕CSV format_spec	Convert APL array to CSV data	System	Function	Data Conversion	System Function	tsv table export generate commaseparatedvalues tabseparatedvalues characterseparatedvalues
r←type ⎕DR x	Interpret internal representation as array of type type	System	Function	Array Properties	System Function	datarepresentation internalrepresentation
type←⎕DR x	Return internal data type (type) of x	System	Function	Array Properties	System Function	datarepresentation internalrepresentation
r←{format_spec} ⎕FMT x	Convert x into character matrix according to spec	System	Function	Data Conversion	System Function	displayform formatbyspecification cobolpictureformat fortranformatter ⎕df ⍕
r←{flag} ⎕JSON data	APL array from (flag=0) or to (flag=1) JSON text	System	Function	Data Conversion	System Function	javascriptobjectnotation importexport generateparse
name←{type}{shape} ⎕MAP file {rw} {offset}	Associate name with mapped file (from offset)	System	Function	File Access	System Function	memorymap array
{name}←{name} ⎕NA fn_desc	Associate name with external DLL function	System	Function	System	System Function	.dll .so .dylib .a c++ dynamiclinkedlibrary sharedlibrary dynamiclibrary
r←{tn} (reg_ex ⎕S trans) text	Search text for PCRE reg_ex returning trans (optional tn to spool output to native file)	System	Operator	Data Conversion	System Function	regex search find locate perlcompatibleregularexpression
r←{tn} (reg_ex ⎕R trans) text	Replace text selected by reg_ex using trans	System	Operator	Data Conversion	System Function	regex substitute pcre perlcompatibleregularexpression
captured_output←⎕SH cmd	Execute UNIX shell cmd	System	Function	System	System Function	shell os operatingsystem commandprocessor linux macos aix rasbianpios
r←{encoding} ⎕UCS vec	Map characters to/from Unicode code points	System	Function	Data Conversion	System Function	utf-8 utf8 utf-16 utf16 utf-32 utf32 encoding ucs-4 ucs4 ucs-2 ucs2 iso10646 ord chr ascii latin-1 windows-1252 ansi
⎕USING ←ns_specs	Set search path for .NET Namespace(s)	System	Variable	System	System Function	microsoft mscorlib.dll dotnet
valid nums←{seps} ⎕VFI text	Validate numeric input: returns Boolean validity mask and numeric vector of converted input	System	Function	Data Conversion	System Function	verifyandfixinput atoi parse numbers fields formdata
r←{xml_options} ⎕XML data	XML string to/from APL array	System	Function	Data Conversion	System Function	extensiblemarkuplanguage xhtml
r←⎕AI	User number, compute, connect, keying time (ms)	System	Constant	System	System Function	accountinformation session milliseconds uptime useridentification cpuusage processorusage idle
user_name←⎕AN	User (login) name	System	Constant	System	System Function	accountname
⎕CLEAR	Clear the active workspace	System	Constant	System	System Function	new refresh empty # erase delete remove purge expunge reset all
{names} ⎕CY file	Copy (optionally selected) names from saved ws	System	Function	File Access	System Function	import load use transfer import load include item object otherworkspace )copy
{num}←⎕DL num	Delay and return seconds actually delayed	System	Function	System	System Function	await sleep idle
⎕LOAD file	Load saved workspace	System	Function	File Access	System Function	open fetch get bringin
⎕OFF	Terminate the APL session	System	Constant	System	System Function	exit stop close )off
⎕PATH ←nss	Set search path (blank-separated list of namespace names) for functions and operators	System	Variable	System	System Function	stdlib standardlibrary include
{r}←{flag} ⎕SAVE file	Save active ws (with stack if flag=0) in file with 0 returned on reload of saved ws, else 1	System	Function	File Access	System Function	archive store )save
⎕SE	Session object	System	Namespace	System	System Function	environment gui persistent utilities
numvec←⎕TS	Current time (y m d h m s ms)	System	Constant	System	System Function	now current localtimestamp datetime
r←{selector} ⎕AT names	Syntactical attributes of named functions or operators	System	Function	System	System Function	valence arity shyness monadicdyadicambivalent functionoperator variadic properties
r←⎕CR name	Source of function or operator as a character matrix	System	Function	Data Conversion	System Function	code representation
{names}←{types} ⎕ED names	Open one or more objects (names) in the editor	System	Function	System	System Function	open modify code source definition define value )ed
{boolvec}←⎕EX names	Delete named objects from the active workspace (1 if each name is now free for use, else 0)	System	Function	System	System Function	expunge erase remove item )erase
{r}←⎕FX cr|nr|vr|or	Name of fn or op defined from its matrix, nested, vector or object representation (or failing line no)	System	Function	Data Conversion	System Function	define fix code source function operator
{level} ⎕LOCK name|ref	Hide source and optionally disallow suspension	System	Function	System	System Function	secure closedsource encrypt
r←⎕NR name	Source of function or operator as a nested vector	System	Function	Data Conversion	System Function	code representation vtv character
state|data←{settings} ⎕PROFILE action	"Profile" CPU or elapsed time consumption of code	System	Function	System	System Function	performance monitor statistics stats observe processor resources
names←⎕REFS name	List the names referenced by a function	System	Function	System	System Function	xref crossreference identifiers symbols
{linenos}←{linenos} ⎕STOP name	Enable/report the current state of stops for a function	System	Function	System	System Function	halt inspect breakpoint
{linenos}←{linenos} ⎕TRACE name	Enable/report the current state of tracing for a function	System	Function	System	System Function	monitor
r←⎕VR name	Source of function or operator as a simple vector	System	Function	Data Conversion	System Function	code representation
⎕BASE.name	Invoke the base class definition of name	Syntax	Namespace	System	System Function	template up :base
class_hierarchy←⎕CLASS ref	Class hierarchy for a class|instance	System	Function	System	System Function	parents ancestors
ref←{class|interface} ⎕CLASS instance	Extract specific interface to an instance	System	Function	Data Conversion	System Function	parents ancestors
{old_ns}←{names} ⎕CS ns	Switch to a ns, optionally exporting names	System	Function	Data Conversion	System Function	change namespace into current ⎕this
old_df←⎕DF char_array	Set the display form of the current space	System	Function	Data Conversion	System Function	visualrepresentation format ⍕ ⎕fmt
{ref}←{flags} ⎕FIX source	Define objects from source (vector of vectors or file name starting with 'file://')	System	Function	Data Conversion	System Function	define ⎕fx code source function operator namespace class interface
refs←⎕INSTANCES class	Current instances of class	System	Function	Data Conversion	System Function	children derived
instance←⎕NEW class {conargs}	Create an instance of class	System	Function	Data Conversion	System Function	.new
{me|ref}←{name} ⎕NS names|ns	Create (optionally named) namespace copying names or contents of ns into it	System	Function	Data Conversion	System Function	object make new construct collect
script←⎕SRC ref	The source code of a ref	System	Function	Data Conversion	System Function	representation script definition
ref←⎕THIS	Reference to the current namespace	System	Function	Data Conversion	System Function	here me myself
cn←x ⎕FAPPEND tn {pn}	Append x to end of file (optional passnumber)	System	Function	Component Files	System Function	dcf
r←⎕FAVAIL	1 if file system is available, else 0	System	Function	Component Files	System Function	dcf active usable accessible
cns←{fchk_opts} ⎕FCHK file	Inspect and optionally repair file 	System	Function	Component Files	System Function	dcf check externalvariable
{tn}←file ⎕FCOPY tn {pn}	Create copy of named file tied to tn	System	Function	Component Files	System Function	dcf duplicate
{tn}←file ⎕FCREATE tn {64}	Create new component file	System	Function	Component Files	System Function	dcf touch make
{cn}←⎕FDROP tn n {pn}	Drop n components from start (n>0) or end (n<0)	System	Function	Component Files	System Function	dcf remove trim slice resize cap clamp
{tn}←file ⎕FERASE tn {pn}	Erase exclusively-tied file	System	Function	Component Files	System Function	dcf delete expunge remove
r←⎕FHIST tn {pn}	Return tied file tn's history (user/time of last operations)	System	Function	Component Files	System Function	dcf log
{tn}←⎕FHOLD tn {pn}	Hold tied file tn (can be a matrix of tn {pn})	System	Function	Component Files	System Function	dcf block wait synchronisation synchronization parallel threading
names←⎕FLIB folder	List component files in the specified folder	System	Function	Component Files	System Function	dcf ls dir
names←⎕FNAMES	Names of tied files in same order as ⎕FNUMS	System	Function	Component Files	System Function	dcf
tns←⎕FNUMS	Vector containing tie numbers of tied files	System	Function	Component Files	System Function	dcf access
r←pnames ⎕FPROPS tn {pn}	Current values of the named properties of file tn	System	Function	Component Files	System Function	dcf settings query get retreive
r←nvpairs ⎕FPROPS tn {pn}	Set properties of file tn using name-value pairs	System	Function	Component Files	System Function	dcf settings update modify change
ax_mx←⎕FRDAC tn {pn}	Read access matrix	System	Function	Component Files	System Function	dcf
r←⎕FRDCI tn cn {pn}	Size in bytes, user and timestamp of last update to cn	System	Function	Component Files	System Function	dcf readaccess
r←⎕FREAD tn cn {pn}	The array stored in component(s) cn in file tn	System	Function	Component Files	System Function	dcf get retrieve load copy fetch
{tn}←file ⎕FRENAME tn {pn}	Rename exclusively-tied file	System	Function	Component Files	System Function	dcf
{cn}←x ⎕FREPLACE tn cn {pn}	Store array x in component number cn	System	Function	Component Files	System Function	dcf put overwrite store
{tn}←{bytes} ⎕FRESIZE tn {pn}	Compact exclusively-tied file tn and set its max size	System	Function	Component Files	System Function	dcf maximum limit clamp
r←⎕FSIZE tn {pn}	First cn, next-free cn, used and max size in bytes	System	Function	Component Files	System Function	dcf maximum
{tn}←ax_mx ⎕FSTAC tn {pn}	Set access matrix for file tn	System	Function	Component Files	System Function	dcf
{tn}←file ⎕FSTIE tn {pn}	Share-tie component file	System	Function	Component Files	System Function	dcf multiple parallel
{tn}←file ⎕FTIE tn {pn}	Exclusively tie component file	System	Function	Component Files	System Function	dcf single
{tn}←⎕FUNTIE tns	Untie one or more component files	System	Function	Component Files	System Function	dcf
